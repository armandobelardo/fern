import * as FernRegistryDocsRead from "@fern-fern/registry-browser/serialization/resources/docs/resources/v2/resources/read";

export const HARDCODED_DOCS: FernRegistryDocsRead.LoadDocsForUrlResponse.Raw = {
    baseUrl: { domain: "mercoa.docs.dev.buildwithfern.com", basePath: null },
    definition: {
        config: {
            navigation: {
                items: [
                    {
                        type: "api",
                        title: "API Reference",
                        api: "14db0612-6d21-40b5-a425-2cb73c85d3ff",
                        artifacts: null,
                        urlSlug: "api-reference",
                    },
                ],
            },
            logo: "6be72a9e-8e19-4853-8da4-7d40ba2f220c",
            colors: { accentPrimary: { r: 255, g: 255, b: 255 } },
            navbarLinks: [],
            title: "mercoa",
            favicon: null,
        },
        apis: {
            "14db0612-6d21-40b5-a425-2cb73c85d3ff": {
                id: "14db0612-6d21-40b5-a425-2cb73c85d3ff",
                rootPackage: {
                    endpoints: [],
                    subpackages: [
                        "subpackage_entity",
                        "subpackage_invoice",
                        "subpackage_process-invoice",
                        "subpackage_payment-method",
                        "subpackage_representative",
                        "subpackage_entity-users",
                        "subpackage_payment-method-schema",
                        "subpackage_counterparty",
                        "subpackage_transaction",
                        "subpackage_organization",
                        "subpackage_bank-lookup",
                        "subpackage_ocr",
                        "subpackage_commons",
                    ],
                    types: [],
                },
                types: {
                    "type_bank-lookup:BankAddress": {
                        name: "BankAddress",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "address",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "city",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "state",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "postalCode",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "postalCodeExtension",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_bank-lookup:BankLookupResponse": {
                        name: "BankLookupResponse",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "bankName",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "bankAddress",
                                    valueType: { type: "id", value: "type_bank-lookup:BankAddress" },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_commons:FullName": {
                        name: "FullName",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "firstName",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "middleName",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "lastName",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "suffix",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_commons:BirthDate": {
                        name: "BirthDate",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "day",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "month",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "year",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_commons:Address": {
                        name: "Address",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "addressLine1",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "addressLine2",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "city",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "stateOrProvince",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "postalCode",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "country",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_commons:PhoneNumber": {
                        name: "PhoneNumber",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "countryCode",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "number",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_commons:IndividualGovernmentID": {
                        name: "IndividualGovernmentID",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "ssn",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_commons:SSN" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "itin",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_commons:ITIN" },
                                    },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_commons:SSN": {
                        name: "SSN",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "full",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "lastFour",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_commons:ITIN": {
                        name: "ITIN",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "full",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "lastFour",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_commons:OrderDirection": {
                        name: "OrderDirection",
                        shape: {
                            type: "enum",
                            values: [
                                { value: "ASC", description: null },
                                { value: "DESC", description: null },
                            ],
                        },
                        description: null,
                    },
                    "type_counterparty:FindCounterpartiesResponse": {
                        name: "FindCounterpartiesResponse",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "entityCounterparties",
                                    valueType: {
                                        type: "list",
                                        itemType: { type: "id", value: "type_counterparty:CounterpartyResponse" },
                                    },
                                    description: "Counterparties that have been paid by this entity",
                                },
                                {
                                    key: "platformCounterparties",
                                    valueType: {
                                        type: "list",
                                        itemType: { type: "id", value: "type_counterparty:CounterpartyResponse" },
                                    },
                                    description: "Counterparties that have paid by any entity on your platform",
                                },
                                {
                                    key: "mercoaCounterparties",
                                    valueType: {
                                        type: "list",
                                        itemType: { type: "id", value: "type_counterparty:CounterpartyResponse" },
                                    },
                                    description: "External counterparties that have been verified by Mercoa",
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_counterparty:CounterpartyResponse": {
                        name: "CounterpartyResponse",
                        shape: {
                            type: "object",
                            extends: ["type_entity:EntityResponse"],
                            properties: [
                                {
                                    key: "paymentMethods",
                                    valueType: {
                                        type: "list",
                                        itemType: { type: "id", value: "type_payment-method:PaymentMethodResponse" },
                                    },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_entity-users:EntityUserId": {
                        name: "EntityUserId",
                        shape: { type: "alias", value: { type: "primitive", value: { type: "string" } } },
                        description: null,
                    },
                    "type_entity-users:EntityUserRequest": {
                        name: "EntityUserRequest",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "foreignId",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "email",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "name",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "roles",
                                    valueType: {
                                        type: "optional",
                                        itemType: {
                                            type: "list",
                                            itemType: { type: "primitive", value: { type: "string" } },
                                        },
                                    },
                                    description:
                                        'List of roles. A role can be any string. For example: "payer", "approver", "viewer"',
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_entity-users:EntityUserResponse": {
                        name: "EntityUserResponse",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "id",
                                    valueType: { type: "id", value: "type_entity-users:EntityUserId" },
                                    description: null,
                                },
                                {
                                    key: "foreignId",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: "Id from external auth provider or your auth system",
                                },
                                {
                                    key: "email",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "name",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "roles",
                                    valueType: {
                                        type: "list",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "createdAt",
                                    valueType: { type: "primitive", value: { type: "datetime" } },
                                    description: null,
                                },
                                {
                                    key: "updatedAt",
                                    valueType: { type: "primitive", value: { type: "datetime" } },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_entity:EntityId": {
                        name: "EntityId",
                        shape: { type: "alias", value: { type: "primitive", value: { type: "string" } } },
                        description: null,
                    },
                    "type_entity:PolicyId": {
                        name: "PolicyId",
                        shape: { type: "alias", value: { type: "primitive", value: { type: "string" } } },
                        description: null,
                    },
                    "type_entity:EntityRequest": {
                        name: "EntityRequest",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "foreignId",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "emailTo",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: "Email inbox address. Do not include the @domain.com",
                                },
                                {
                                    key: "emailToAlias",
                                    valueType: {
                                        type: "optional",
                                        itemType: {
                                            type: "list",
                                            itemType: { type: "primitive", value: { type: "string" } },
                                        },
                                    },
                                    description:
                                        "Email inbox alias addresses. Used when forwarding emails to the emailTo address from an alias. Include the full email address.",
                                },
                                {
                                    key: "ownedByOrg",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "boolean" } },
                                    },
                                    description:
                                        "If this entity has a direct relationship with your organization, set this to true. Otherwise, set to false.",
                                },
                                {
                                    key: "accountType",
                                    valueType: { type: "id", value: "type_entity:AccountType" },
                                    description: null,
                                },
                                {
                                    key: "profile",
                                    valueType: { type: "id", value: "type_entity:ProfileRequest" },
                                    description: null,
                                },
                                {
                                    key: "isPayor",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "boolean" } },
                                    },
                                    description:
                                        "If this entity will be paying invoices, set this to true. In the near future, this will be a required parameter. Currently if this parameter is not set, it will default to true if ownedByOrg is true, and false otherwise.",
                                },
                                {
                                    key: "isPayee",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "boolean" } },
                                    },
                                    description:
                                        "If this entity will be receiving payments, set this to true. In the near future, this will be a required parameter. Currently if this parameter is not set, it will default to false if ownedByOrg is true, and true otherwise.",
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_entity:EntityUpdateRequest": {
                        name: "EntityUpdateRequest",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "foreignId",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "emailTo",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: "Email inbox address. Do not include the @domain.com",
                                },
                                {
                                    key: "emailToAlias",
                                    valueType: {
                                        type: "optional",
                                        itemType: {
                                            type: "list",
                                            itemType: { type: "primitive", value: { type: "string" } },
                                        },
                                    },
                                    description:
                                        "Email inbox alias addresses. Used when forwarding emails to the emailTo address from an alias. Include the full email address.",
                                },
                                {
                                    key: "ownedByOrg",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "boolean" } },
                                    },
                                    description:
                                        "If this entity has a direct relationship with your organization, set this to true. Otherwise, set to false.",
                                },
                                {
                                    key: "accountType",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_entity:AccountType" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "profile",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_entity:ProfileRequest" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "isPayor",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "boolean" } },
                                    },
                                    description: "If this entity will be paying invoices, set this to true.",
                                },
                                {
                                    key: "isPayee",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "boolean" } },
                                    },
                                    description: "If this entity will be receiving payments, set this to true.",
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_entity:EntityResponse": {
                        name: "EntityResponse",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "id",
                                    valueType: { type: "id", value: "type_entity:EntityId" },
                                    description: null,
                                },
                                {
                                    key: "foreignId",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "emailTo",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "emailToAlias",
                                    valueType: {
                                        type: "optional",
                                        itemType: {
                                            type: "list",
                                            itemType: { type: "primitive", value: { type: "string" } },
                                        },
                                    },
                                    description: null,
                                },
                                {
                                    key: "ownedByOrg",
                                    valueType: { type: "primitive", value: { type: "boolean" } },
                                    description: null,
                                },
                                {
                                    key: "accountType",
                                    valueType: { type: "id", value: "type_entity:AccountType" },
                                    description: null,
                                },
                                {
                                    key: "name",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "email",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "profile",
                                    valueType: { type: "id", value: "type_entity:ProfileResponse" },
                                    description: null,
                                },
                                {
                                    key: "status",
                                    valueType: { type: "id", value: "type_entity:EntityStatus" },
                                    description: null,
                                },
                                {
                                    key: "acceptedTos",
                                    valueType: { type: "primitive", value: { type: "boolean" } },
                                    description: null,
                                },
                                {
                                    key: "isPayor",
                                    valueType: { type: "primitive", value: { type: "boolean" } },
                                    description: "True if this entity can pay invoices.",
                                },
                                {
                                    key: "isPayee",
                                    valueType: { type: "primitive", value: { type: "boolean" } },
                                    description: "True if this entity can receive payments.",
                                },
                                {
                                    key: "createdAt",
                                    valueType: { type: "primitive", value: { type: "datetime" } },
                                    description: null,
                                },
                                {
                                    key: "updatedAt",
                                    valueType: { type: "primitive", value: { type: "datetime" } },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_entity:EntityAddPayeesRequest": {
                        name: "EntityAddPayeesRequest",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "payees",
                                    valueType: {
                                        type: "list",
                                        itemType: { type: "id", value: "type_entity:EntityId" },
                                    },
                                    description: "List of payee entity IDs to associate with the entity",
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_entity:ProfileRequest": {
                        name: "ProfileRequest",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "business",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_entity:BusinessProfileRequest" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "individual",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_entity:IndividualProfileRequest" },
                                    },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_entity:ProfileResponse": {
                        name: "ProfileResponse",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "business",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_entity:BusinessProfileResponse" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "individual",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_entity:IndividualProfileResponse" },
                                    },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_entity:BusinessProfileRequest": {
                        name: "BusinessProfileRequest",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "email",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "legalBusinessName",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "businessType",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_entity:BusinessType" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "phone",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_commons:PhoneNumber" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "doingBusinessAs",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "website",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "description",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "address",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_commons:Address" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "ownersProvided",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "boolean" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "taxId",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_entity:TaxID" },
                                    },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_entity:BusinessProfileResponse": {
                        name: "BusinessProfileResponse",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "email",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "legalBusinessName",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "businessType",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_entity:BusinessType" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "phone",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_commons:PhoneNumber" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "doingBusinessAs",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "website",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "description",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "address",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_commons:Address" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "ownersProvided",
                                    valueType: { type: "primitive", value: { type: "boolean" } },
                                    description: null,
                                },
                                {
                                    key: "taxIDProvided",
                                    valueType: { type: "primitive", value: { type: "boolean" } },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_entity:IndividualProfileRequest": {
                        name: "IndividualProfileRequest",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "email",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "name",
                                    valueType: { type: "id", value: "type_commons:FullName" },
                                    description: null,
                                },
                                {
                                    key: "phone",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_commons:PhoneNumber" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "address",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_commons:Address" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "birthDate",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_commons:BirthDate" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "governmentID",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_commons:IndividualGovernmentID" },
                                    },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_entity:IndividualProfileResponse": {
                        name: "IndividualProfileResponse",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "email",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "name",
                                    valueType: { type: "id", value: "type_commons:FullName" },
                                    description: null,
                                },
                                {
                                    key: "phone",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_commons:PhoneNumber" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "address",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_commons:Address" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "birthDateProvided",
                                    valueType: { type: "primitive", value: { type: "boolean" } },
                                    description: null,
                                },
                                {
                                    key: "governmentIDProvided",
                                    valueType: { type: "primitive", value: { type: "boolean" } },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_entity:InvoiceMetricsResponse": {
                        name: "InvoiceMetricsResponse",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "totalAmount",
                                    valueType: { type: "primitive", value: { type: "double" } },
                                    description: null,
                                },
                                {
                                    key: "totalCount",
                                    valueType: { type: "primitive", value: { type: "integer" } },
                                    description: null,
                                },
                                {
                                    key: "averageAmount",
                                    valueType: { type: "primitive", value: { type: "double" } },
                                    description: null,
                                },
                                {
                                    key: "currency",
                                    valueType: { type: "id", value: "type_invoice:CurrencyCode" },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_entity:ApprovalPolicyRequest": {
                        name: "ApprovalPolicyRequest",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "trigger",
                                    valueType: { type: "id", value: "type_entity:Trigger" },
                                    description: null,
                                },
                                {
                                    key: "rule",
                                    valueType: { type: "id", value: "type_entity:Rule" },
                                    description: null,
                                },
                                {
                                    key: "upstreamPolicyId",
                                    valueType: { type: "id", value: "type_entity:PolicyId" },
                                    description: "Use 'root' if no upstreamPolicyId is intended to be set.",
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_entity:ApprovalPolicyUpdateRequest": {
                        name: "ApprovalPolicyUpdateRequest",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "id",
                                    valueType: { type: "id", value: "type_entity:PolicyId" },
                                    description: null,
                                },
                                {
                                    key: "trigger",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_entity:Trigger" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "rule",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_entity:Rule" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "upstreamPolicyId",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_entity:PolicyId" },
                                    },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_entity:ApprovalPolicyResponse": {
                        name: "ApprovalPolicyResponse",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "id",
                                    valueType: { type: "id", value: "type_entity:PolicyId" },
                                    description: null,
                                },
                                {
                                    key: "trigger",
                                    valueType: { type: "id", value: "type_entity:Trigger" },
                                    description: null,
                                },
                                {
                                    key: "rule",
                                    valueType: { type: "id", value: "type_entity:Rule" },
                                    description: null,
                                },
                                {
                                    key: "upstreamPolicyId",
                                    valueType: { type: "id", value: "type_entity:PolicyId" },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_entity:Trigger": {
                        name: "Trigger",
                        shape: {
                            type: "discriminatedUnion",
                            discriminant: "type",
                            variants: [
                                {
                                    discriminantValue: "amount",
                                    additionalProperties: { extends: ["type_entity:AmountTrigger"], properties: [] },
                                    description: null,
                                },
                                {
                                    discriminantValue: "all",
                                    additionalProperties: {
                                        extends: [],
                                        properties: [{ key: "value", valueType: { type: "unknown" } }],
                                    },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_entity:AmountTrigger": {
                        name: "AmountTrigger",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "amount",
                                    valueType: { type: "primitive", value: { type: "double" } },
                                    description: null,
                                },
                                {
                                    key: "currency",
                                    valueType: { type: "id", value: "type_invoice:CurrencyCode" },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_entity:Rule": {
                        name: "Rule",
                        shape: {
                            type: "discriminatedUnion",
                            discriminant: "type",
                            variants: [
                                {
                                    discriminantValue: "approver",
                                    additionalProperties: { extends: ["type_entity:ApproverRule"], properties: [] },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_entity:IdentifierList": {
                        name: "IdentifierList",
                        shape: {
                            type: "discriminatedUnion",
                            discriminant: "type",
                            variants: [
                                {
                                    discriminantValue: "rolesList",
                                    additionalProperties: {
                                        extends: [],
                                        properties: [
                                            {
                                                key: "value",
                                                valueType: {
                                                    type: "list",
                                                    itemType: { type: "primitive", value: { type: "string" } },
                                                },
                                            },
                                        ],
                                    },
                                    description: null,
                                },
                                {
                                    discriminantValue: "userList",
                                    additionalProperties: {
                                        extends: [],
                                        properties: [
                                            {
                                                key: "value",
                                                valueType: {
                                                    type: "list",
                                                    itemType: { type: "id", value: "type_entity-users:EntityUserId" },
                                                },
                                            },
                                        ],
                                    },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_entity:ApproverRule": {
                        name: "ApproverRule",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "numApprovers",
                                    valueType: { type: "primitive", value: { type: "integer" } },
                                    description: null,
                                },
                                {
                                    key: "identifierList",
                                    valueType: { type: "id", value: "type_entity:IdentifierList" },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_entity:TaxID": {
                        name: "TaxID",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                { key: "ein", valueType: { type: "id", value: "type_entity:Ein" }, description: null },
                            ],
                        },
                        description: null,
                    },
                    "type_entity:Ein": {
                        name: "Ein",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "number",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_entity:BusinessType": {
                        name: "BusinessType",
                        shape: {
                            type: "enum",
                            values: [
                                { value: "soleProprietorship", description: null },
                                { value: "unincorporatedAssociation", description: null },
                                { value: "trust", description: null },
                                { value: "publicCorporation", description: null },
                                { value: "privateCorporation", description: null },
                                { value: "llc", description: null },
                                { value: "partnership", description: null },
                                { value: "unincorporatedNonProfit", description: null },
                                { value: "incorporatedNonProfit", description: null },
                            ],
                        },
                        description: null,
                    },
                    "type_entity:AccountType": {
                        name: "AccountType",
                        shape: {
                            type: "enum",
                            values: [
                                { value: "business", description: null },
                                { value: "individual", description: null },
                            ],
                        },
                        description: null,
                    },
                    "type_entity:EntityStatus": {
                        name: "EntityStatus",
                        shape: {
                            type: "enum",
                            values: [
                                { value: "unverified", description: null },
                                { value: "pending", description: null },
                                { value: "resubmit", description: null },
                                { value: "review", description: null },
                                { value: "verified", description: null },
                                { value: "failed", description: null },
                            ],
                        },
                        description: null,
                    },
                    "type_invoice:InvoiceRequest": {
                        name: "InvoiceRequest",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "status",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_invoice:InvoiceStatus" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "amount",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "double" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "currency",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_invoice:CurrencyCode" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "invoiceDate",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "datetime" } },
                                    },
                                    description: "Date the invoice was created.",
                                },
                                {
                                    key: "deductionDate",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "datetime" } },
                                    },
                                    description: "Date when funds will be deducted from payer's account.",
                                },
                                {
                                    key: "fundedDate",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "datetime" } },
                                    },
                                    description: "Date of funds settlement.",
                                },
                                {
                                    key: "dueDate",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "datetime" } },
                                    },
                                    description: "Due date of invoice.",
                                },
                                {
                                    key: "invoiceNumber",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "noteToSelf",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "serviceStartDate",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "datetime" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "serviceEndDate",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "datetime" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "payerId",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_entity:EntityId" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "paymentSourceId",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_payment-method:PaymentMethodId" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "approvers",
                                    valueType: {
                                        type: "optional",
                                        itemType: {
                                            type: "list",
                                            itemType: { type: "id", value: "type_invoice:SetApprover" },
                                        },
                                    },
                                    description: "Set approvers for this invoice.",
                                },
                                {
                                    key: "vendorId",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_entity:EntityId" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "paymentDestinationId",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_payment-method:PaymentMethodId" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "createVendor",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_invoice:CreateVendorRequest" },
                                    },
                                    description:
                                        "When paying to a new vendor, use the createVendor object. Mercoa will create the vendor entity and tie it to this invoice. This object is ignored when updating an invoice.",
                                },
                                {
                                    key: "updateVendor",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_invoice:CreateVendorRequest" },
                                    },
                                    description:
                                        "When paying to an existing vendor with an incomplete profile, use the updateVendor object. Mercoa will update the vendor entity tied to this invoice. This object is ignored if the vendor already has already been created with complete information and when creating a new invoice.",
                                },
                                {
                                    key: "lineItems",
                                    valueType: {
                                        type: "optional",
                                        itemType: {
                                            type: "list",
                                            itemType: { type: "id", value: "type_invoice:InvoiceLineItemRequest" },
                                        },
                                    },
                                    description: null,
                                },
                                {
                                    key: "metadata",
                                    valueType: {
                                        type: "optional",
                                        itemType: {
                                            type: "map",
                                            keyType: { type: "primitive", value: { type: "string" } },
                                            valueType: { type: "primitive", value: { type: "string" } },
                                        },
                                    },
                                    description:
                                        "Metadata associated with this invoice. You can specify up to 10 keys, with key names up to 40 characters long and values up to 200 characters long.",
                                },
                                {
                                    key: "uploadedImage",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description:
                                        "Base64 encoded image or PDF of invoice. PNG, JPG, and PDF are supported. 10MB max.",
                                },
                                {
                                    key: "createdById",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_entity-users:EntityUserId" },
                                    },
                                    description: "ID of entity user who created this invoice.",
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_invoice:InvoiceResponse": {
                        name: "InvoiceResponse",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "id",
                                    valueType: { type: "id", value: "type_invoice:InvoiceId" },
                                    description: null,
                                },
                                {
                                    key: "status",
                                    valueType: { type: "id", value: "type_invoice:InvoiceStatus" },
                                    description: null,
                                },
                                {
                                    key: "amount",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "double" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "currency",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_invoice:CurrencyCode" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "invoiceDate",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "datetime" } },
                                    },
                                    description: "Date the invoice was created.",
                                },
                                {
                                    key: "deductionDate",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "datetime" } },
                                    },
                                    description: "Date when funds will be deducted from payer's account.",
                                },
                                {
                                    key: "fundedDate",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "datetime" } },
                                    },
                                    description: "Date of funds settlement.",
                                },
                                {
                                    key: "dueDate",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "datetime" } },
                                    },
                                    description: "Due date of invoice.",
                                },
                                {
                                    key: "invoiceNumber",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "noteToSelf",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "serviceStartDate",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "datetime" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "serviceEndDate",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "datetime" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "payerId",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_entity:EntityId" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "payer",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_entity:EntityResponse" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "paymentSource",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_payment-method:PaymentMethodResponse" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "paymentSourceId",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_payment-method:PaymentMethodId" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "vendorId",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_entity:EntityId" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "vendor",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_entity:EntityResponse" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "paymentDestination",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_payment-method:PaymentMethodResponse" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "paymentDestinationId",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_payment-method:PaymentMethodId" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "paymentDestinationConfirmed",
                                    valueType: { type: "primitive", value: { type: "boolean" } },
                                    description: null,
                                },
                                {
                                    key: "hasDocuments",
                                    valueType: { type: "primitive", value: { type: "boolean" } },
                                    description: null,
                                },
                                {
                                    key: "comments",
                                    valueType: {
                                        type: "optional",
                                        itemType: {
                                            type: "list",
                                            itemType: { type: "id", value: "type_invoice:CommentResponse" },
                                        },
                                    },
                                    description: null,
                                },
                                {
                                    key: "transactions",
                                    valueType: {
                                        type: "optional",
                                        itemType: {
                                            type: "list",
                                            itemType: { type: "id", value: "type_transaction:TransactionResponse" },
                                        },
                                    },
                                    description: null,
                                },
                                {
                                    key: "lineItems",
                                    valueType: {
                                        type: "optional",
                                        itemType: {
                                            type: "list",
                                            itemType: { type: "id", value: "type_invoice:InvoiceLineItemResponse" },
                                        },
                                    },
                                    description: null,
                                },
                                {
                                    key: "approvers",
                                    valueType: {
                                        type: "list",
                                        itemType: { type: "id", value: "type_invoice:Approver" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "approvalPolicy",
                                    valueType: {
                                        type: "list",
                                        itemType: { type: "id", value: "type_entity:ApprovalPolicyResponse" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "metadata",
                                    valueType: {
                                        type: "map",
                                        keyType: { type: "primitive", value: { type: "string" } },
                                        valueType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: "Metadata associated with this invoice.",
                                },
                                {
                                    key: "createdBy",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_entity-users:EntityUserResponse" },
                                    },
                                    description: "Entity user who created this invoice.",
                                },
                                {
                                    key: "processedAt",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "datetime" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "createdAt",
                                    valueType: { type: "primitive", value: { type: "datetime" } },
                                    description: null,
                                },
                                {
                                    key: "updatedAt",
                                    valueType: { type: "primitive", value: { type: "datetime" } },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_invoice:InvoiceId": {
                        name: "InvoiceId",
                        shape: { type: "alias", value: { type: "primitive", value: { type: "string" } } },
                        description: null,
                    },
                    "type_invoice:CommentId": {
                        name: "CommentId",
                        shape: { type: "alias", value: { type: "primitive", value: { type: "string" } } },
                        description: null,
                    },
                    "type_invoice:SetApprover": {
                        name: "SetApprover",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "userId",
                                    valueType: { type: "id", value: "type_entity-users:EntityUserId" },
                                    description: null,
                                },
                                {
                                    key: "date",
                                    valueType: { type: "primitive", value: { type: "datetime" } },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_invoice:Approver": {
                        name: "Approver",
                        shape: {
                            type: "object",
                            extends: ["type_invoice:SetApprover"],
                            properties: [
                                {
                                    key: "roles",
                                    valueType: {
                                        type: "list",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "action",
                                    valueType: { type: "id", value: "type_invoice:ApproverAction" },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_invoice:ApproverResponse": {
                        name: "ApproverResponse",
                        shape: {
                            type: "object",
                            extends: ["type_invoice:Approver"],
                            properties: [
                                {
                                    key: "user",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_entity-users:EntityUserResponse" },
                                    },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_invoice:ApproverAction": {
                        name: "ApproverAction",
                        shape: {
                            type: "enum",
                            values: [
                                { value: "NONE", description: null },
                                { value: "APPROVE", description: null },
                                { value: "REJECT", description: null },
                            ],
                        },
                        description: null,
                    },
                    "type_invoice:InvoiceLineItemResponse": {
                        name: "InvoiceLineItemResponse",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "id",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "amount",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "double" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "currency",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_invoice:CurrencyCode" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "description",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "name",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "quantity",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "integer" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "unitPrice",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "double" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "createdAt",
                                    valueType: { type: "primitive", value: { type: "datetime" } },
                                    description: null,
                                },
                                {
                                    key: "updatedAt",
                                    valueType: { type: "primitive", value: { type: "datetime" } },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_invoice:InvoiceLineItemRequest": {
                        name: "InvoiceLineItemRequest",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "id",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description:
                                        "If provided, will overwrite line item on the invoice with this ID. If not provided, will create a new line item.",
                                },
                                {
                                    key: "amount",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "double" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "currency",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_invoice:CurrencyCode" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "description",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "name",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "quantity",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "integer" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "unitPrice",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "double" } },
                                    },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_invoice:DocumentResponse": {
                        name: "DocumentResponse",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "mimeType",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "uri",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "ocrResults",
                                    valueType: { type: "unknown" },
                                    description: "Raw output from OCR",
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_invoice:CommentRequest": {
                        name: "CommentRequest",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "text",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "userId",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_entity-users:EntityUserId" },
                                    },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_invoice:ApprovalRequest": {
                        name: "ApprovalRequest",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "text",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "userId",
                                    valueType: { type: "id", value: "type_entity-users:EntityUserId" },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_invoice:CommentResponse": {
                        name: "CommentResponse",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "id",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "text",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "user",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_entity-users:EntityUserResponse" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "approval",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_invoice:Approver" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "createdAt",
                                    valueType: { type: "primitive", value: { type: "datetime" } },
                                    description: null,
                                },
                                {
                                    key: "updatedAt",
                                    valueType: { type: "primitive", value: { type: "datetime" } },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_invoice:CreateVendorRequest": {
                        name: "CreateVendorRequest",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "vendor",
                                    valueType: { type: "id", value: "type_entity:EntityRequest" },
                                    description: null,
                                },
                                {
                                    key: "paymentMethod",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_payment-method:PaymentMethodRequest" },
                                    },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_invoice:InvoiceStatus": {
                        name: "InvoiceStatus",
                        shape: {
                            type: "enum",
                            values: [
                                { value: "DRAFT", description: null },
                                { value: "NEW", description: null },
                                { value: "PENDING", description: null },
                                { value: "PAID", description: null },
                                { value: "CANCELED", description: null },
                                { value: "REFUSED", description: null },
                                { value: "APPROVED", description: null },
                                { value: "ARCHIVED", description: null },
                                { value: "SCHEDULED", description: null },
                            ],
                        },
                        description: null,
                    },
                    "type_invoice:InvoiceOrderByField": {
                        name: "InvoiceOrderByField",
                        shape: {
                            type: "enum",
                            values: [
                                { value: "AMOUNT", description: null },
                                { value: "DUE_DATE", description: null },
                                { value: "CREATED_AT", description: null },
                                { value: "INVOICE_NUMBER", description: null },
                            ],
                        },
                        description: null,
                    },
                    "type_invoice:CurrencyCode": {
                        name: "CurrencyCode",
                        shape: {
                            type: "enum",
                            values: [
                                { value: "AED", description: null },
                                { value: "AFN", description: null },
                                { value: "ALL", description: null },
                                { value: "AMD", description: null },
                                { value: "ANG", description: null },
                                { value: "AOA", description: null },
                                { value: "ARS", description: null },
                                { value: "AUD", description: null },
                                { value: "AWG", description: null },
                                { value: "AZN", description: null },
                                { value: "BAM", description: null },
                                { value: "BBD", description: null },
                                { value: "BDT", description: null },
                                { value: "BGN", description: null },
                                { value: "BHD", description: null },
                                { value: "BIF", description: null },
                                { value: "BMD", description: null },
                                { value: "BND", description: null },
                                { value: "BOB", description: null },
                                { value: "BOV", description: null },
                                { value: "BRL", description: null },
                                { value: "BSD", description: null },
                                { value: "BTN", description: null },
                                { value: "BWP", description: null },
                                { value: "BYN", description: null },
                                { value: "BZD", description: null },
                                { value: "CAD", description: null },
                                { value: "CDF", description: null },
                                { value: "CHE", description: null },
                                { value: "CHF", description: null },
                                { value: "CHW", description: null },
                                { value: "CLF", description: null },
                                { value: "CLP", description: null },
                                { value: "COP", description: null },
                                { value: "COU", description: null },
                                { value: "CRC", description: null },
                                { value: "CUC", description: null },
                                { value: "CUP", description: null },
                                { value: "CVE", description: null },
                                { value: "CZK", description: null },
                                { value: "DJF", description: null },
                                { value: "DKK", description: null },
                                { value: "DOP", description: null },
                                { value: "DZD", description: null },
                                { value: "EGP", description: null },
                                { value: "ERN", description: null },
                                { value: "ETB", description: null },
                                { value: "EUR", description: null },
                                { value: "FJD", description: null },
                                { value: "FKP", description: null },
                                { value: "GBP", description: null },
                                { value: "GEL", description: null },
                                { value: "GHS", description: null },
                                { value: "GIP", description: null },
                                { value: "GMD", description: null },
                                { value: "GNF", description: null },
                                { value: "GTQ", description: null },
                                { value: "GYD", description: null },
                                { value: "HKD", description: null },
                                { value: "HNL", description: null },
                                { value: "HTG", description: null },
                                { value: "HUF", description: null },
                                { value: "IDR", description: null },
                                { value: "ILS", description: null },
                                { value: "INR", description: null },
                                { value: "IQD", description: null },
                                { value: "IRR", description: null },
                                { value: "ISK", description: null },
                                { value: "JMD", description: null },
                                { value: "JOD", description: null },
                                { value: "JPY", description: null },
                                { value: "KES", description: null },
                                { value: "KGS", description: null },
                                { value: "KHR", description: null },
                                { value: "KMF", description: null },
                                { value: "KPW", description: null },
                                { value: "KRW", description: null },
                                { value: "KWD", description: null },
                                { value: "KYD", description: null },
                                { value: "KZT", description: null },
                                { value: "LAK", description: null },
                                { value: "LBP", description: null },
                                { value: "LKR", description: null },
                                { value: "LRD", description: null },
                                { value: "LSL", description: null },
                                { value: "LYD", description: null },
                                { value: "MAD", description: null },
                                { value: "MDL", description: null },
                                { value: "MGA", description: null },
                                { value: "MKD", description: null },
                                { value: "MMK", description: null },
                                { value: "MNT", description: null },
                                { value: "MOP", description: null },
                                { value: "MRU", description: null },
                                { value: "MUR", description: null },
                                { value: "MVR", description: null },
                                { value: "MWK", description: null },
                                { value: "MXN", description: null },
                                { value: "MXV", description: null },
                                { value: "MYR", description: null },
                                { value: "MZN", description: null },
                                { value: "NAD", description: null },
                                { value: "NGN", description: null },
                                { value: "NIO", description: null },
                                { value: "NOK", description: null },
                                { value: "NPR", description: null },
                                { value: "NZD", description: null },
                                { value: "OMR", description: null },
                                { value: "PAB", description: null },
                                { value: "PEN", description: null },
                                { value: "PGK", description: null },
                                { value: "PHP", description: null },
                                { value: "PKR", description: null },
                                { value: "PLN", description: null },
                                { value: "PYG", description: null },
                                { value: "QAR", description: null },
                                { value: "RON", description: null },
                                { value: "RSD", description: null },
                                { value: "CNY", description: null },
                                { value: "RUB", description: null },
                                { value: "RWF", description: null },
                                { value: "SAR", description: null },
                                { value: "SBD", description: null },
                                { value: "SCR", description: null },
                                { value: "SDG", description: null },
                                { value: "SEK", description: null },
                                { value: "SGD", description: null },
                                { value: "SHP", description: null },
                                { value: "SLE", description: null },
                                { value: "SLL", description: null },
                                { value: "SOS", description: null },
                                { value: "SRD", description: null },
                                { value: "SSP", description: null },
                                { value: "STN", description: null },
                                { value: "SVC", description: null },
                                { value: "SYP", description: null },
                                { value: "SZL", description: null },
                                { value: "THB", description: null },
                                { value: "TJS", description: null },
                                { value: "TMT", description: null },
                                { value: "TND", description: null },
                                { value: "TOP", description: null },
                                { value: "TRY", description: null },
                                { value: "TTD", description: null },
                                { value: "TWD", description: null },
                                { value: "TZS", description: null },
                                { value: "UAH", description: null },
                                { value: "UGX", description: null },
                                { value: "USD", description: null },
                                { value: "USN", description: null },
                                { value: "UYI", description: null },
                                { value: "UYU", description: null },
                                { value: "UYW", description: null },
                                { value: "UZS", description: null },
                                { value: "VED", description: null },
                                { value: "VES", description: null },
                                { value: "VND", description: null },
                                { value: "VUV", description: null },
                                { value: "WST", description: null },
                                { value: "XAF", description: null },
                                { value: "XAG", description: null },
                                { value: "XAU", description: null },
                                { value: "XBA", description: null },
                                { value: "XBB", description: null },
                                { value: "XBC", description: null },
                                { value: "XBD", description: null },
                                { value: "XCD", description: null },
                                { value: "XDR", description: null },
                                { value: "XOF", description: null },
                                { value: "XPD", description: null },
                                { value: "XPF", description: null },
                                { value: "XPT", description: null },
                                { value: "XSU", description: null },
                                { value: "XTS", description: null },
                                { value: "XUA", description: null },
                                { value: "XXX", description: null },
                                { value: "YER", description: null },
                                { value: "ZAR", description: null },
                                { value: "ZMW", description: null },
                                { value: "ZWL", description: null },
                            ],
                        },
                        description: null,
                    },
                    "type_ocr:OCRResponse": {
                        name: "OCRResponse",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "invoice",
                                    valueType: { type: "id", value: "type_invoice:InvoiceResponse" },
                                    description: null,
                                },
                                {
                                    key: "vendor",
                                    valueType: { type: "id", value: "type_entity:EntityResponse" },
                                    description: null,
                                },
                                {
                                    key: "check",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_payment-method:CheckResponse" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "bankAccount",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_payment-method:BankAccountResponse" },
                                    },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_ocr:OcrMailbox": {
                        name: "OcrMailbox",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "Address",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "Name",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_ocr:Attachments": {
                        name: "Attachments",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "Name",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "ContentType",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "ContentLength",
                                    valueType: { type: "primitive", value: { type: "integer" } },
                                    description: null,
                                },
                                {
                                    key: "ContentID",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "DownloadToken",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_ocr:EmailOcrRequest": {
                        name: "EmailOcrRequest",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "Uuid",
                                    valueType: {
                                        type: "list",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "MessageId",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "InReplyTo",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "From",
                                    valueType: { type: "id", value: "type_ocr:OcrMailbox" },
                                    description: null,
                                },
                                {
                                    key: "To",
                                    valueType: { type: "list", itemType: { type: "id", value: "type_ocr:OcrMailbox" } },
                                    description: null,
                                },
                                {
                                    key: "Cc",
                                    valueType: { type: "list", itemType: { type: "id", value: "type_ocr:OcrMailbox" } },
                                    description: null,
                                },
                                {
                                    key: "ReplyTo",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_ocr:OcrMailbox" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "SentAtDate",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "Subject",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "Attachments",
                                    valueType: {
                                        type: "list",
                                        itemType: { type: "id", value: "type_ocr:Attachments" },
                                    },
                                    description: null,
                                },
                                { key: "Headers", valueType: { type: "unknown" }, description: null },
                                {
                                    key: "SpamScore",
                                    valueType: { type: "primitive", value: { type: "double" } },
                                    description: null,
                                },
                                {
                                    key: "ExtractedMarkdownMessage",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "ExtractedMarkdownSignature",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "RawHtmlBody",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "RawTextBody",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_organization:OrganizationId": {
                        name: "OrganizationId",
                        shape: { type: "alias", value: { type: "primitive", value: { type: "string" } } },
                        description: null,
                    },
                    "type_organization:OrganizationRequest": {
                        name: "OrganizationRequest",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "name",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "logo",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "websiteUrl",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "supportEmail",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "paymentMethods",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_organization:PaymentMethodsRequest" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "emailProvider",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_organization:EmailProviderRequest" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "colorScheme",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_organization:ColorSchemeRequest" },
                                    },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_organization:OrganizationResponse": {
                        name: "OrganizationResponse",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "id",
                                    valueType: { type: "id", value: "type_organization:OrganizationId" },
                                    description: null,
                                },
                                {
                                    key: "sandbox",
                                    valueType: { type: "primitive", value: { type: "boolean" } },
                                    description: null,
                                },
                                {
                                    key: "name",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "logoUrl",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "websiteUrl",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "supportEmail",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "paymentMethods",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_organization:PaymentMethodsResponse" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "emailProvider",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_organization:EmailProviderResponse" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "colorScheme",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_organization:ColorSchemeResponse" },
                                    },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_organization:PaymentRailMarkupType": {
                        name: "PaymentRailMarkupType",
                        shape: {
                            type: "enum",
                            values: [
                                { value: "flat", description: null },
                                { value: "percent", description: null },
                            ],
                        },
                        description: null,
                    },
                    "type_organization:PaymentRailMarkup": {
                        name: "PaymentRailMarkup",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "type",
                                    valueType: { type: "id", value: "type_organization:PaymentRailMarkupType" },
                                    description: null,
                                },
                                {
                                    key: "amount",
                                    valueType: { type: "primitive", value: { type: "double" } },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_organization:PaymentRailRequest": {
                        name: "PaymentRailRequest",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "type",
                                    valueType: { type: "id", value: "type_payment-method:PaymentMethodType" },
                                    description: null,
                                },
                                {
                                    key: "name",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description:
                                        "Name of the payment method. For custom payment methods, this is the ID of the schema.",
                                },
                                {
                                    key: "markup",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_organization:PaymentRailMarkup" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "description",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "active",
                                    valueType: { type: "primitive", value: { type: "boolean" } },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_organization:PaymentRailResponse": {
                        name: "PaymentRailResponse",
                        shape: {
                            type: "object",
                            extends: ["type_organization:PaymentRailRequest"],
                            properties: [
                                {
                                    key: "available",
                                    valueType: { type: "primitive", value: { type: "boolean" } },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_organization:PaymentMethodsRequest": {
                        name: "PaymentMethodsRequest",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "payerPayments",
                                    valueType: {
                                        type: "list",
                                        itemType: { type: "id", value: "type_organization:PaymentRailRequest" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "backupDisbursements",
                                    valueType: {
                                        type: "list",
                                        itemType: { type: "id", value: "type_organization:PaymentRailRequest" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "vendorDisbursements",
                                    valueType: {
                                        type: "list",
                                        itemType: { type: "id", value: "type_organization:PaymentRailRequest" },
                                    },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_organization:PaymentMethodsResponse": {
                        name: "PaymentMethodsResponse",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "payerPayments",
                                    valueType: {
                                        type: "list",
                                        itemType: { type: "id", value: "type_organization:PaymentRailResponse" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "backupDisbursements",
                                    valueType: {
                                        type: "list",
                                        itemType: { type: "id", value: "type_organization:PaymentRailResponse" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "vendorDisbursements",
                                    valueType: {
                                        type: "list",
                                        itemType: { type: "id", value: "type_organization:PaymentRailResponse" },
                                    },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_organization:EmailProviderRequest": {
                        name: "EmailProviderRequest",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "sender",
                                    valueType: { type: "id", value: "type_organization:EmailSenderRequest" },
                                    description: null,
                                },
                                {
                                    key: "inboxDomain",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_organization:EmailProviderResponse": {
                        name: "EmailProviderResponse",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "sender",
                                    valueType: { type: "id", value: "type_organization:EmailSenderResponse" },
                                    description: null,
                                },
                                {
                                    key: "inboxDomain",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_organization:EmailSenderProvider": {
                        name: "EmailSenderProvider",
                        shape: {
                            type: "enum",
                            values: [
                                { value: "none", description: null },
                                { value: "sendgrid", description: null },
                                { value: "resend", description: null },
                            ],
                        },
                        description: null,
                    },
                    "type_organization:EmailSenderRequest": {
                        name: "EmailSenderRequest",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "provider",
                                    valueType: { type: "id", value: "type_organization:EmailSenderProvider" },
                                    description: null,
                                },
                                {
                                    key: "fromEmail",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "fromName",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "apiKey",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_organization:EmailSenderResponse": {
                        name: "EmailSenderResponse",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "provider",
                                    valueType: { type: "id", value: "type_organization:EmailSenderProvider" },
                                    description: null,
                                },
                                {
                                    key: "fromEmail",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "fromName",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "hasApiKey",
                                    valueType: { type: "primitive", value: { type: "boolean" } },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_organization:EmailLogResponse": {
                        name: "EmailLogResponse",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "from",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "to",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "subject",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "rawContent",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "createdAt",
                                    valueType: { type: "primitive", value: { type: "datetime" } },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_organization:ColorSchemeRequest": {
                        name: "ColorSchemeRequest",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "primaryColor",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "secondaryColor",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_organization:ColorSchemeResponse": {
                        name: "ColorSchemeResponse",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "primaryColor",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "secondaryColor",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_payment-method-schema:PaymentMethodSchemaId": {
                        name: "PaymentMethodSchemaId",
                        shape: { type: "alias", value: { type: "primitive", value: { type: "string" } } },
                        description: null,
                    },
                    "type_payment-method-schema:PaymentMethodSchemaRequest": {
                        name: "PaymentMethodSchemaRequest",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "name",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "isSource",
                                    valueType: { type: "primitive", value: { type: "boolean" } },
                                    description: "This payment method can be used as a payment source for an invoice",
                                },
                                {
                                    key: "isDestination",
                                    valueType: { type: "primitive", value: { type: "boolean" } },
                                    description:
                                        "This payment method can be used as a payment destination for an invoice",
                                },
                                {
                                    key: "supportedCurrencies",
                                    valueType: {
                                        type: "optional",
                                        itemType: {
                                            type: "list",
                                            itemType: { type: "id", value: "type_invoice:CurrencyCode" },
                                        },
                                    },
                                    description:
                                        "List of currencies that this payment method supports. If not provided, the payment method will support only USD.",
                                },
                                {
                                    key: "fields",
                                    valueType: {
                                        type: "list",
                                        itemType: {
                                            type: "id",
                                            value: "type_payment-method-schema:PaymentMethodSchemaField",
                                        },
                                    },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_payment-method-schema:PaymentMethodSchemaResponse": {
                        name: "PaymentMethodSchemaResponse",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "id",
                                    valueType: {
                                        type: "id",
                                        value: "type_payment-method-schema:PaymentMethodSchemaId",
                                    },
                                    description: null,
                                },
                                {
                                    key: "name",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "isSource",
                                    valueType: { type: "primitive", value: { type: "boolean" } },
                                    description: "This payment method can be used as a payment source for an invoice",
                                },
                                {
                                    key: "isDestination",
                                    valueType: { type: "primitive", value: { type: "boolean" } },
                                    description:
                                        "This payment method can be used as a payment destination for an invoice",
                                },
                                {
                                    key: "supportedCurrencies",
                                    valueType: {
                                        type: "list",
                                        itemType: { type: "id", value: "type_invoice:CurrencyCode" },
                                    },
                                    description: "List of currencies that this payment method supports.",
                                },
                                {
                                    key: "fields",
                                    valueType: {
                                        type: "list",
                                        itemType: {
                                            type: "id",
                                            value: "type_payment-method-schema:PaymentMethodSchemaField",
                                        },
                                    },
                                    description: null,
                                },
                                {
                                    key: "createdAt",
                                    valueType: { type: "primitive", value: { type: "datetime" } },
                                    description: null,
                                },
                                {
                                    key: "updatedAt",
                                    valueType: { type: "primitive", value: { type: "datetime" } },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_payment-method-schema:PaymentMethodSchemaFieldType": {
                        name: "PaymentMethodSchemaFieldType",
                        shape: {
                            type: "enum",
                            values: [
                                { value: "text", description: null },
                                { value: "number", description: null },
                                { value: "select", description: null },
                            ],
                        },
                        description: null,
                    },
                    "type_payment-method-schema:PaymentMethodSchemaField": {
                        name: "PaymentMethodSchemaField",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "name",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "displayName",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "type",
                                    valueType: {
                                        type: "id",
                                        value: "type_payment-method-schema:PaymentMethodSchemaFieldType",
                                    },
                                    description: null,
                                },
                                {
                                    key: "optional",
                                    valueType: { type: "primitive", value: { type: "boolean" } },
                                    description: "Indicates whether this field is optional",
                                },
                                {
                                    key: "useAsAccountName",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "boolean" } },
                                    },
                                    description:
                                        "Indicates whether this field should be used as the name of the payment method. Only one field can be used as the name. Will set the accountName field of the payment method to the value of this field.",
                                },
                                {
                                    key: "useAsAccountNumber",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "boolean" } },
                                    },
                                    description:
                                        "Indicates whether this field should be used as the account number of the payment method. Only one field can be used as the account number. Will set the accountNumber field of the payment method to the value of this field.",
                                },
                                {
                                    key: "options",
                                    valueType: {
                                        type: "optional",
                                        itemType: {
                                            type: "list",
                                            itemType: { type: "primitive", value: { type: "string" } },
                                        },
                                    },
                                    description: "When type is 'select', provide options that can be selected",
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_payment-method:PaymentMethodId": {
                        name: "PaymentMethodId",
                        shape: { type: "alias", value: { type: "primitive", value: { type: "string" } } },
                        description: null,
                    },
                    "type_payment-method:PaymentMethodRequest": {
                        name: "PaymentMethodRequest",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "type",
                                    valueType: { type: "id", value: "type_payment-method:PaymentMethodType" },
                                    description: null,
                                },
                                {
                                    key: "bankAccount",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_payment-method:BankAccountRequest" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "check",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_payment-method:CheckRequest" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "card",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_payment-method:CardRequest" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "custom",
                                    valueType: {
                                        type: "optional",
                                        itemType: {
                                            type: "id",
                                            value: "type_payment-method:CustomPaymentMethodRequest",
                                        },
                                    },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_payment-method:PaymentMethodUpdateRequest": {
                        name: "PaymentMethodUpdateRequest",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "custom",
                                    valueType: {
                                        type: "optional",
                                        itemType: {
                                            type: "id",
                                            value: "type_payment-method:CustomPaymentMethodUpdateRequest",
                                        },
                                    },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_payment-method:PaymentMethodResponse": {
                        name: "PaymentMethodResponse",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "id",
                                    valueType: { type: "id", value: "type_payment-method:PaymentMethodId" },
                                    description: null,
                                },
                                {
                                    key: "type",
                                    valueType: { type: "id", value: "type_payment-method:PaymentMethodType" },
                                    description: null,
                                },
                                {
                                    key: "bankAccount",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_payment-method:BankAccountResponse" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "check",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_payment-method:CheckResponse" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "card",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_payment-method:CardResponse" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "custom",
                                    valueType: {
                                        type: "optional",
                                        itemType: {
                                            type: "id",
                                            value: "type_payment-method:CustomPaymentMethodResponse",
                                        },
                                    },
                                    description: null,
                                },
                                {
                                    key: "supportedCurrencies",
                                    valueType: {
                                        type: "list",
                                        itemType: { type: "id", value: "type_invoice:CurrencyCode" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "createdAt",
                                    valueType: { type: "primitive", value: { type: "datetime" } },
                                    description: null,
                                },
                                {
                                    key: "updatedAt",
                                    valueType: { type: "primitive", value: { type: "datetime" } },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_payment-method:BankAccountId": {
                        name: "BankAccountId",
                        shape: { type: "alias", value: { type: "primitive", value: { type: "string" } } },
                        description: null,
                    },
                    "type_payment-method:BankAccountRequest": {
                        name: "BankAccountRequest",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "id",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_payment-method:BankAccountId" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "bankName",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "routingNumber",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "accountNumber",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "plaidPublicToken",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: "Public token from Plaid Link",
                                },
                                {
                                    key: "accountType",
                                    valueType: { type: "id", value: "type_payment-method:BankType" },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_payment-method:BankAccountResponse": {
                        name: "BankAccountResponse",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "id",
                                    valueType: { type: "id", value: "type_payment-method:BankAccountId" },
                                    description: null,
                                },
                                {
                                    key: "bankName",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "routingNumber",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "accountNumber",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "accountType",
                                    valueType: { type: "id", value: "type_payment-method:BankType" },
                                    description: null,
                                },
                                {
                                    key: "status",
                                    valueType: { type: "id", value: "type_payment-method:BankStatus" },
                                    description: null,
                                },
                                {
                                    key: "createdAt",
                                    valueType: { type: "primitive", value: { type: "datetime" } },
                                    description: null,
                                },
                                {
                                    key: "updatedAt",
                                    valueType: { type: "primitive", value: { type: "datetime" } },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_payment-method:CardId": {
                        name: "CardId",
                        shape: { type: "alias", value: { type: "primitive", value: { type: "string" } } },
                        description: null,
                    },
                    "type_payment-method:CardRequest": {
                        name: "CardRequest",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "id",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_payment-method:CardId" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "type",
                                    valueType: { type: "id", value: "type_payment-method:CardType" },
                                    description: null,
                                },
                                {
                                    key: "brand",
                                    valueType: { type: "id", value: "type_payment-method:CardBrand" },
                                    description: null,
                                },
                                {
                                    key: "lastFour",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "expMonth",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "expYear",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "token",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_payment-method:CardResponse": {
                        name: "CardResponse",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "id",
                                    valueType: { type: "id", value: "type_payment-method:CardId" },
                                    description: null,
                                },
                                {
                                    key: "type",
                                    valueType: { type: "id", value: "type_payment-method:CardType" },
                                    description: null,
                                },
                                {
                                    key: "brand",
                                    valueType: { type: "id", value: "type_payment-method:CardBrand" },
                                    description: null,
                                },
                                {
                                    key: "lastFour",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "expMonth",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "expYear",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "createdAt",
                                    valueType: { type: "primitive", value: { type: "datetime" } },
                                    description: null,
                                },
                                {
                                    key: "updatedAt",
                                    valueType: { type: "primitive", value: { type: "datetime" } },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_payment-method:CheckId": {
                        name: "CheckId",
                        shape: { type: "alias", value: { type: "primitive", value: { type: "string" } } },
                        description: null,
                    },
                    "type_payment-method:CheckRequest": {
                        name: "CheckRequest",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "payToTheOrderOf",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "addressLine1",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "addressLine2",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "city",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "stateOrProvince",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "postalCode",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "country",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_payment-method:CheckResponse": {
                        name: "CheckResponse",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "id",
                                    valueType: { type: "id", value: "type_payment-method:CheckId" },
                                    description: null,
                                },
                                {
                                    key: "payToTheOrderOf",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "addressLine1",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "addressLine2",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "city",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "stateOrProvince",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "postalCode",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "country",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "createdAt",
                                    valueType: { type: "primitive", value: { type: "datetime" } },
                                    description: null,
                                },
                                {
                                    key: "updatedAt",
                                    valueType: { type: "primitive", value: { type: "datetime" } },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_payment-method:CustomId": {
                        name: "CustomId",
                        shape: { type: "alias", value: { type: "primitive", value: { type: "string" } } },
                        description: null,
                    },
                    "type_payment-method:CustomPaymentMethodRequest": {
                        name: "CustomPaymentMethodRequest",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "foreignId",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: "ID for this payment method in your system",
                                },
                                {
                                    key: "accountName",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "accountNumber",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "schemaId",
                                    valueType: {
                                        type: "id",
                                        value: "type_payment-method-schema:PaymentMethodSchemaId",
                                    },
                                    description:
                                        "Payment method schema used for this payment method. Defines the fields that this payment method contains.",
                                },
                                {
                                    key: "data",
                                    valueType: {
                                        type: "map",
                                        keyType: { type: "primitive", value: { type: "string" } },
                                        valueType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description:
                                        "Object of key/value pairs that matches the keys in the linked payment method schema.",
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_payment-method:CustomPaymentMethodUpdateRequest": {
                        name: "CustomPaymentMethodUpdateRequest",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "foreignId",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: "ID for this payment method in your system",
                                },
                                {
                                    key: "accountName",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "accountNumber",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "schemaId",
                                    valueType: {
                                        type: "optional",
                                        itemType: {
                                            type: "id",
                                            value: "type_payment-method-schema:PaymentMethodSchemaId",
                                        },
                                    },
                                    description:
                                        "Payment method schema used for this payment method. Defines the fields that this payment method contains.",
                                },
                                {
                                    key: "data",
                                    valueType: {
                                        type: "optional",
                                        itemType: {
                                            type: "map",
                                            keyType: { type: "primitive", value: { type: "string" } },
                                            valueType: { type: "primitive", value: { type: "string" } },
                                        },
                                    },
                                    description:
                                        "Object of key/value pairs that matches the keys in the linked payment method schema.",
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_payment-method:CustomPaymentMethodResponse": {
                        name: "CustomPaymentMethodResponse",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "id",
                                    valueType: { type: "id", value: "type_payment-method:CustomId" },
                                    description: null,
                                },
                                {
                                    key: "foreignId",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: "ID for this payment method in your system",
                                },
                                {
                                    key: "accountName",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "accountNumber",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "schemaId",
                                    valueType: {
                                        type: "id",
                                        value: "type_payment-method-schema:PaymentMethodSchemaId",
                                    },
                                    description:
                                        "Payment method schema used for this payment method. Defines the fields that this payment method contains.",
                                },
                                {
                                    key: "schema",
                                    valueType: {
                                        type: "id",
                                        value: "type_payment-method-schema:PaymentMethodSchemaResponse",
                                    },
                                    description: null,
                                },
                                {
                                    key: "data",
                                    valueType: {
                                        type: "map",
                                        keyType: { type: "primitive", value: { type: "string" } },
                                        valueType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description:
                                        "Object of key/value pairs that matches the keys in the linked payment method schema.",
                                },
                                {
                                    key: "createdAt",
                                    valueType: { type: "primitive", value: { type: "datetime" } },
                                    description: null,
                                },
                                {
                                    key: "updatedAt",
                                    valueType: { type: "primitive", value: { type: "datetime" } },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_payment-method:PaymentMethodType": {
                        name: "PaymentMethodType",
                        shape: {
                            type: "enum",
                            values: [
                                { value: "custom", description: null },
                                { value: "check", description: null },
                                { value: "bankAccount", description: null },
                                { value: "na", description: null },
                                { value: "card", description: null },
                                { value: "bnpl", description: null },
                                { value: "virtualCard", description: null },
                            ],
                        },
                        description: null,
                    },
                    "type_payment-method:BankType": {
                        name: "BankType",
                        shape: {
                            type: "enum",
                            values: [
                                { value: "CHECKING", description: null },
                                { value: "SAVINGS", description: null },
                                { value: "UNKNOWN", description: null },
                            ],
                        },
                        description: null,
                    },
                    "type_payment-method:BankStatus": {
                        name: "BankStatus",
                        shape: {
                            type: "enum",
                            values: [
                                { value: "NEW", description: null },
                                { value: "VERIFIED", description: null },
                                { value: "VERIFICATION_FAILED", description: null },
                                { value: "PENDING", description: null },
                                { value: "ERRORED", description: null },
                            ],
                        },
                        description: null,
                    },
                    "type_payment-method:CardType": {
                        name: "CardType",
                        shape: {
                            type: "enum",
                            values: [
                                { value: "credit", description: null },
                                { value: "debit", description: null },
                                { value: "prepaid", description: null },
                                { value: "unknown", description: null },
                            ],
                        },
                        description: null,
                    },
                    "type_payment-method:CardBrand": {
                        name: "CardBrand",
                        shape: {
                            type: "enum",
                            values: [
                                { value: "AmericanExpress", description: null },
                                { value: "Discover", description: null },
                                { value: "Mastercard", description: null },
                                { value: "Visa", description: null },
                            ],
                        },
                        description: null,
                    },
                    "type_process-invoice:ProcessInvoiceRequest": {
                        name: "ProcessInvoiceRequest",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "invoiceIds",
                                    valueType: {
                                        type: "list",
                                        itemType: { type: "id", value: "type_invoice:InvoiceId" },
                                    },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_representative:RepresentativeId": {
                        name: "RepresentativeId",
                        shape: { type: "alias", value: { type: "primitive", value: { type: "string" } } },
                        description: null,
                    },
                    "type_representative:RepresentativeRequest": {
                        name: "RepresentativeRequest",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "name",
                                    valueType: { type: "id", value: "type_commons:FullName" },
                                    description: null,
                                },
                                {
                                    key: "phone",
                                    valueType: { type: "id", value: "type_commons:PhoneNumber" },
                                    description: null,
                                },
                                {
                                    key: "email",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "address",
                                    valueType: { type: "id", value: "type_commons:Address" },
                                    description: null,
                                },
                                {
                                    key: "birthDate",
                                    valueType: { type: "id", value: "type_commons:BirthDate" },
                                    description: null,
                                },
                                {
                                    key: "governmentID",
                                    valueType: { type: "id", value: "type_commons:IndividualGovernmentID" },
                                    description: null,
                                },
                                {
                                    key: "responsibilities",
                                    valueType: { type: "id", value: "type_representative:Responsibilities" },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_representative:RepresentativeResponse": {
                        name: "RepresentativeResponse",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "id",
                                    valueType: { type: "id", value: "type_representative:RepresentativeId" },
                                    description: null,
                                },
                                {
                                    key: "name",
                                    valueType: { type: "id", value: "type_commons:FullName" },
                                    description: null,
                                },
                                {
                                    key: "phone",
                                    valueType: { type: "id", value: "type_commons:PhoneNumber" },
                                    description: null,
                                },
                                {
                                    key: "email",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "address",
                                    valueType: { type: "id", value: "type_commons:Address" },
                                    description: null,
                                },
                                {
                                    key: "birthDateProvided",
                                    valueType: { type: "primitive", value: { type: "boolean" } },
                                    description: null,
                                },
                                {
                                    key: "governmentIDProvided",
                                    valueType: { type: "primitive", value: { type: "boolean" } },
                                    description: null,
                                },
                                {
                                    key: "responsibilities",
                                    valueType: { type: "id", value: "type_representative:Responsibilities" },
                                    description: null,
                                },
                                {
                                    key: "createdOn",
                                    valueType: { type: "primitive", value: { type: "datetime" } },
                                    description: null,
                                },
                                {
                                    key: "updatedOn",
                                    valueType: { type: "primitive", value: { type: "datetime" } },
                                    description: null,
                                },
                                {
                                    key: "disabledOn",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "datetime" } },
                                    },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_representative:Responsibilities": {
                        name: "Responsibilities",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "jobTitle",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "string" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "isController",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "boolean" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "isOwner",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "boolean" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "ownershipPercentage",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "double" } },
                                    },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_transaction:TransactionResponse": {
                        name: "TransactionResponse",
                        shape: {
                            type: "object",
                            extends: [],
                            properties: [
                                {
                                    key: "id",
                                    valueType: { type: "primitive", value: { type: "string" } },
                                    description: null,
                                },
                                {
                                    key: "status",
                                    valueType: { type: "id", value: "type_transaction:TransactionStatus" },
                                    description: null,
                                },
                                {
                                    key: "amount",
                                    valueType: { type: "primitive", value: { type: "double" } },
                                    description: null,
                                },
                                {
                                    key: "currency",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_invoice:CurrencyCode" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "createdAt",
                                    valueType: { type: "primitive", value: { type: "datetime" } },
                                    description: null,
                                },
                                {
                                    key: "updatedAt",
                                    valueType: { type: "primitive", value: { type: "datetime" } },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_transaction:TransactionResponseExpanded": {
                        name: "TransactionResponseExpanded",
                        shape: {
                            type: "object",
                            extends: ["type_transaction:TransactionResponse"],
                            properties: [
                                {
                                    key: "invoiceId",
                                    valueType: { type: "id", value: "type_invoice:InvoiceId" },
                                    description: null,
                                },
                                {
                                    key: "deductionDate",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "datetime" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "dueDate",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "primitive", value: { type: "datetime" } },
                                    },
                                    description: null,
                                },
                                {
                                    key: "payer",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_entity:EntityResponse" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "vendor",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_entity:EntityResponse" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "paymentSource",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_payment-method:PaymentMethodResponse" },
                                    },
                                    description: null,
                                },
                                {
                                    key: "paymentDestination",
                                    valueType: {
                                        type: "optional",
                                        itemType: { type: "id", value: "type_payment-method:PaymentMethodResponse" },
                                    },
                                    description: null,
                                },
                            ],
                        },
                        description: null,
                    },
                    "type_transaction:TransactionId": {
                        name: "TransactionId",
                        shape: { type: "alias", value: { type: "primitive", value: { type: "string" } } },
                        description: null,
                    },
                    "type_transaction:TransactionStatus": {
                        name: "TransactionStatus",
                        shape: {
                            type: "enum",
                            values: [
                                { value: "created", description: null },
                                { value: "pending", description: null },
                                { value: "completed", description: null },
                                { value: "failed", description: null },
                                { value: "reversed", description: null },
                                { value: "queued", description: null },
                                { value: "canceled", description: null },
                            ],
                        },
                        description: null,
                    },
                },
                subpackages: {
                    "subpackage_bank-lookup": {
                        subpackageId: "subpackage_bank-lookup",
                        parent: null,
                        name: "bank-lookup",
                        urlSlug: "bank-lookup",
                        description: null,
                        endpoints: [
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "find-bank-account",
                                method: "GET",
                                id: "find",
                                name: "Find bank account",
                                path: {
                                    pathParameters: [],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/bankLookup" },
                                    ],
                                },
                                queryParameters: [
                                    {
                                        key: "routingNumber",
                                        type: { type: "primitive", value: { type: "string" } },
                                        description: "Routing number to validate",
                                    },
                                ],
                                headers: [],
                                request: null,
                                response: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_bank-lookup:BankLookupResponse" },
                                    },
                                },
                                examples: [
                                    {
                                        path: "//bankLookup",
                                        pathParameters: {},
                                        queryParameters: { routingNumber: "string" },
                                        headers: {},
                                        responseStatusCode: 200,
                                        responseBody: {
                                            bankName: "string",
                                            bankAddress: {
                                                address: "string",
                                                city: "string",
                                                state: "string",
                                                postalCode: "string",
                                                postalCodeExtension: "string",
                                            },
                                        },
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Find bank account details",
                            },
                        ],
                        types: ["type_bank-lookup:BankAddress", "type_bank-lookup:BankLookupResponse"],
                        subpackages: [],
                        pointsTo: null,
                    },
                    subpackage_commons: {
                        subpackageId: "subpackage_commons",
                        parent: null,
                        name: "commons",
                        urlSlug: "commons",
                        description: null,
                        endpoints: [],
                        types: [
                            "type_commons:FullName",
                            "type_commons:BirthDate",
                            "type_commons:Address",
                            "type_commons:PhoneNumber",
                            "type_commons:IndividualGovernmentID",
                            "type_commons:SSN",
                            "type_commons:ITIN",
                            "type_commons:OrderDirection",
                        ],
                        subpackages: [],
                        pointsTo: null,
                    },
                    subpackage_counterparty: {
                        subpackageId: "subpackage_counterparty",
                        parent: null,
                        name: "counterparty",
                        urlSlug: "counterparty",
                        description: null,
                        endpoints: [
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "get-all-counterparties",
                                method: "GET",
                                id: "getAll",
                                name: "Get all counterparties",
                                path: {
                                    pathParameters: [],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/counterparties" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: null,
                                response: {
                                    type: {
                                        type: "reference",
                                        value: {
                                            type: "list",
                                            itemType: { type: "id", value: "type_entity:EntityResponse" },
                                        },
                                    },
                                },
                                examples: [
                                    {
                                        path: "//counterparties",
                                        pathParameters: {},
                                        queryParameters: {},
                                        headers: {},
                                        responseStatusCode: 200,
                                        responseBody: [
                                            {
                                                id: "string",
                                                foreignId: "string",
                                                emailTo: "string",
                                                emailToAlias: ["string"],
                                                ownedByOrg: true,
                                                accountType: "business",
                                                name: "string",
                                                email: "string",
                                                profile: {
                                                    business: {
                                                        email: "string",
                                                        legalBusinessName: "string",
                                                        businessType: "soleProprietorship",
                                                        phone: { countryCode: "string", number: "string" },
                                                        doingBusinessAs: "string",
                                                        website: "string",
                                                        description: "string",
                                                        address: {
                                                            addressLine1: "string",
                                                            addressLine2: "string",
                                                            city: "string",
                                                            stateOrProvince: "string",
                                                            postalCode: "string",
                                                            country: "string",
                                                        },
                                                        ownersProvided: true,
                                                        taxIDProvided: true,
                                                    },
                                                    individual: {
                                                        email: "string",
                                                        name: {
                                                            firstName: "string",
                                                            middleName: "string",
                                                            lastName: "string",
                                                            suffix: "string",
                                                        },
                                                        phone: { countryCode: "string", number: "string" },
                                                        address: {
                                                            addressLine1: "string",
                                                            addressLine2: "string",
                                                            city: "string",
                                                            stateOrProvince: "string",
                                                            postalCode: "string",
                                                            country: "string",
                                                        },
                                                        birthDateProvided: true,
                                                        governmentIDProvided: true,
                                                    },
                                                },
                                                status: "unverified",
                                                acceptedTos: true,
                                                isPayor: true,
                                                isPayee: true,
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                        ],
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Get all counterparties",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "find-counterparty",
                                method: "GET",
                                id: "find",
                                name: "Find counterparty",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "entityId",
                                            type: { type: "id", value: "type_entity:EntityId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/entity/" },
                                        { type: "pathParameter", value: "entityId" },
                                        { type: "literal", value: "/counterparties" },
                                    ],
                                },
                                queryParameters: [
                                    {
                                        key: "paymentMethods",
                                        type: {
                                            type: "optional",
                                            itemType: { type: "primitive", value: { type: "boolean" } },
                                        },
                                        description: "include payment method information in response",
                                    },
                                ],
                                headers: [],
                                request: null,
                                response: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_counterparty:FindCounterpartiesResponse" },
                                    },
                                },
                                examples: [
                                    {
                                        path: "//entity/string/counterparties",
                                        pathParameters: { entityId: "string" },
                                        queryParameters: { paymentMethods: true },
                                        headers: {},
                                        responseStatusCode: 200,
                                        responseBody: {
                                            entityCounterparties: [
                                                {
                                                    paymentMethods: [
                                                        {
                                                            id: "string",
                                                            type: "custom",
                                                            bankAccount: {
                                                                id: "string",
                                                                bankName: "string",
                                                                routingNumber: "string",
                                                                accountNumber: "string",
                                                                accountType: "CHECKING",
                                                                status: "NEW",
                                                                createdAt: "2023-01-01T00:00:00Z",
                                                                updatedAt: "2023-01-01T00:00:00Z",
                                                            },
                                                            check: {
                                                                id: "string",
                                                                payToTheOrderOf: "string",
                                                                addressLine1: "string",
                                                                addressLine2: "string",
                                                                city: "string",
                                                                stateOrProvince: "string",
                                                                postalCode: "string",
                                                                country: "string",
                                                                createdAt: "2023-01-01T00:00:00Z",
                                                                updatedAt: "2023-01-01T00:00:00Z",
                                                            },
                                                            card: {
                                                                id: "string",
                                                                type: "credit",
                                                                brand: "AmericanExpress",
                                                                lastFour: "string",
                                                                expMonth: "string",
                                                                expYear: "string",
                                                                createdAt: "2023-01-01T00:00:00Z",
                                                                updatedAt: "2023-01-01T00:00:00Z",
                                                            },
                                                            custom: {
                                                                id: "string",
                                                                foreignId: "string",
                                                                accountName: "string",
                                                                accountNumber: "string",
                                                                schemaId: "string",
                                                                schema: {
                                                                    id: "string",
                                                                    name: "string",
                                                                    isSource: true,
                                                                    isDestination: true,
                                                                    supportedCurrencies: ["AED"],
                                                                    fields: [
                                                                        {
                                                                            name: "string",
                                                                            displayName: "string",
                                                                            type: "text",
                                                                            optional: true,
                                                                            useAsAccountName: true,
                                                                            useAsAccountNumber: true,
                                                                            options: ["string"],
                                                                        },
                                                                    ],
                                                                    createdAt: "2023-01-01T00:00:00Z",
                                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                                },
                                                                data: { string: "string" },
                                                                createdAt: "2023-01-01T00:00:00Z",
                                                                updatedAt: "2023-01-01T00:00:00Z",
                                                            },
                                                            supportedCurrencies: ["AED"],
                                                            createdAt: "2023-01-01T00:00:00Z",
                                                            updatedAt: "2023-01-01T00:00:00Z",
                                                        },
                                                    ],
                                                    id: "string",
                                                    foreignId: "string",
                                                    emailTo: "string",
                                                    emailToAlias: ["string"],
                                                    ownedByOrg: true,
                                                    accountType: "business",
                                                    name: "string",
                                                    email: "string",
                                                    profile: {
                                                        business: {
                                                            email: "string",
                                                            legalBusinessName: "string",
                                                            businessType: "soleProprietorship",
                                                            phone: { countryCode: "string", number: "string" },
                                                            doingBusinessAs: "string",
                                                            website: "string",
                                                            description: "string",
                                                            address: {
                                                                addressLine1: "string",
                                                                addressLine2: "string",
                                                                city: "string",
                                                                stateOrProvince: "string",
                                                                postalCode: "string",
                                                                country: "string",
                                                            },
                                                            ownersProvided: true,
                                                            taxIDProvided: true,
                                                        },
                                                        individual: {
                                                            email: "string",
                                                            name: {
                                                                firstName: "string",
                                                                middleName: "string",
                                                                lastName: "string",
                                                                suffix: "string",
                                                            },
                                                            phone: { countryCode: "string", number: "string" },
                                                            address: {
                                                                addressLine1: "string",
                                                                addressLine2: "string",
                                                                city: "string",
                                                                stateOrProvince: "string",
                                                                postalCode: "string",
                                                                country: "string",
                                                            },
                                                            birthDateProvided: true,
                                                            governmentIDProvided: true,
                                                        },
                                                    },
                                                    status: "unverified",
                                                    acceptedTos: true,
                                                    isPayor: true,
                                                    isPayee: true,
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                            ],
                                            platformCounterparties: [
                                                {
                                                    paymentMethods: [
                                                        {
                                                            id: "string",
                                                            type: "custom",
                                                            bankAccount: {
                                                                id: "string",
                                                                bankName: "string",
                                                                routingNumber: "string",
                                                                accountNumber: "string",
                                                                accountType: "CHECKING",
                                                                status: "NEW",
                                                                createdAt: "2023-01-01T00:00:00Z",
                                                                updatedAt: "2023-01-01T00:00:00Z",
                                                            },
                                                            check: {
                                                                id: "string",
                                                                payToTheOrderOf: "string",
                                                                addressLine1: "string",
                                                                addressLine2: "string",
                                                                city: "string",
                                                                stateOrProvince: "string",
                                                                postalCode: "string",
                                                                country: "string",
                                                                createdAt: "2023-01-01T00:00:00Z",
                                                                updatedAt: "2023-01-01T00:00:00Z",
                                                            },
                                                            card: {
                                                                id: "string",
                                                                type: "credit",
                                                                brand: "AmericanExpress",
                                                                lastFour: "string",
                                                                expMonth: "string",
                                                                expYear: "string",
                                                                createdAt: "2023-01-01T00:00:00Z",
                                                                updatedAt: "2023-01-01T00:00:00Z",
                                                            },
                                                            custom: {
                                                                id: "string",
                                                                foreignId: "string",
                                                                accountName: "string",
                                                                accountNumber: "string",
                                                                schemaId: "string",
                                                                schema: {
                                                                    id: "string",
                                                                    name: "string",
                                                                    isSource: true,
                                                                    isDestination: true,
                                                                    supportedCurrencies: ["AED"],
                                                                    fields: [
                                                                        {
                                                                            name: "string",
                                                                            displayName: "string",
                                                                            type: "text",
                                                                            optional: true,
                                                                            useAsAccountName: true,
                                                                            useAsAccountNumber: true,
                                                                            options: ["string"],
                                                                        },
                                                                    ],
                                                                    createdAt: "2023-01-01T00:00:00Z",
                                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                                },
                                                                data: { string: "string" },
                                                                createdAt: "2023-01-01T00:00:00Z",
                                                                updatedAt: "2023-01-01T00:00:00Z",
                                                            },
                                                            supportedCurrencies: ["AED"],
                                                            createdAt: "2023-01-01T00:00:00Z",
                                                            updatedAt: "2023-01-01T00:00:00Z",
                                                        },
                                                    ],
                                                    id: "string",
                                                    foreignId: "string",
                                                    emailTo: "string",
                                                    emailToAlias: ["string"],
                                                    ownedByOrg: true,
                                                    accountType: "business",
                                                    name: "string",
                                                    email: "string",
                                                    profile: {
                                                        business: {
                                                            email: "string",
                                                            legalBusinessName: "string",
                                                            businessType: "soleProprietorship",
                                                            phone: { countryCode: "string", number: "string" },
                                                            doingBusinessAs: "string",
                                                            website: "string",
                                                            description: "string",
                                                            address: {
                                                                addressLine1: "string",
                                                                addressLine2: "string",
                                                                city: "string",
                                                                stateOrProvince: "string",
                                                                postalCode: "string",
                                                                country: "string",
                                                            },
                                                            ownersProvided: true,
                                                            taxIDProvided: true,
                                                        },
                                                        individual: {
                                                            email: "string",
                                                            name: {
                                                                firstName: "string",
                                                                middleName: "string",
                                                                lastName: "string",
                                                                suffix: "string",
                                                            },
                                                            phone: { countryCode: "string", number: "string" },
                                                            address: {
                                                                addressLine1: "string",
                                                                addressLine2: "string",
                                                                city: "string",
                                                                stateOrProvince: "string",
                                                                postalCode: "string",
                                                                country: "string",
                                                            },
                                                            birthDateProvided: true,
                                                            governmentIDProvided: true,
                                                        },
                                                    },
                                                    status: "unverified",
                                                    acceptedTos: true,
                                                    isPayor: true,
                                                    isPayee: true,
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                            ],
                                            mercoaCounterparties: [
                                                {
                                                    paymentMethods: [
                                                        {
                                                            id: "string",
                                                            type: "custom",
                                                            bankAccount: {
                                                                id: "string",
                                                                bankName: "string",
                                                                routingNumber: "string",
                                                                accountNumber: "string",
                                                                accountType: "CHECKING",
                                                                status: "NEW",
                                                                createdAt: "2023-01-01T00:00:00Z",
                                                                updatedAt: "2023-01-01T00:00:00Z",
                                                            },
                                                            check: {
                                                                id: "string",
                                                                payToTheOrderOf: "string",
                                                                addressLine1: "string",
                                                                addressLine2: "string",
                                                                city: "string",
                                                                stateOrProvince: "string",
                                                                postalCode: "string",
                                                                country: "string",
                                                                createdAt: "2023-01-01T00:00:00Z",
                                                                updatedAt: "2023-01-01T00:00:00Z",
                                                            },
                                                            card: {
                                                                id: "string",
                                                                type: "credit",
                                                                brand: "AmericanExpress",
                                                                lastFour: "string",
                                                                expMonth: "string",
                                                                expYear: "string",
                                                                createdAt: "2023-01-01T00:00:00Z",
                                                                updatedAt: "2023-01-01T00:00:00Z",
                                                            },
                                                            custom: {
                                                                id: "string",
                                                                foreignId: "string",
                                                                accountName: "string",
                                                                accountNumber: "string",
                                                                schemaId: "string",
                                                                schema: {
                                                                    id: "string",
                                                                    name: "string",
                                                                    isSource: true,
                                                                    isDestination: true,
                                                                    supportedCurrencies: ["AED"],
                                                                    fields: [
                                                                        {
                                                                            name: "string",
                                                                            displayName: "string",
                                                                            type: "text",
                                                                            optional: true,
                                                                            useAsAccountName: true,
                                                                            useAsAccountNumber: true,
                                                                            options: ["string"],
                                                                        },
                                                                    ],
                                                                    createdAt: "2023-01-01T00:00:00Z",
                                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                                },
                                                                data: { string: "string" },
                                                                createdAt: "2023-01-01T00:00:00Z",
                                                                updatedAt: "2023-01-01T00:00:00Z",
                                                            },
                                                            supportedCurrencies: ["AED"],
                                                            createdAt: "2023-01-01T00:00:00Z",
                                                            updatedAt: "2023-01-01T00:00:00Z",
                                                        },
                                                    ],
                                                    id: "string",
                                                    foreignId: "string",
                                                    emailTo: "string",
                                                    emailToAlias: ["string"],
                                                    ownedByOrg: true,
                                                    accountType: "business",
                                                    name: "string",
                                                    email: "string",
                                                    profile: {
                                                        business: {
                                                            email: "string",
                                                            legalBusinessName: "string",
                                                            businessType: "soleProprietorship",
                                                            phone: { countryCode: "string", number: "string" },
                                                            doingBusinessAs: "string",
                                                            website: "string",
                                                            description: "string",
                                                            address: {
                                                                addressLine1: "string",
                                                                addressLine2: "string",
                                                                city: "string",
                                                                stateOrProvince: "string",
                                                                postalCode: "string",
                                                                country: "string",
                                                            },
                                                            ownersProvided: true,
                                                            taxIDProvided: true,
                                                        },
                                                        individual: {
                                                            email: "string",
                                                            name: {
                                                                firstName: "string",
                                                                middleName: "string",
                                                                lastName: "string",
                                                                suffix: "string",
                                                            },
                                                            phone: { countryCode: "string", number: "string" },
                                                            address: {
                                                                addressLine1: "string",
                                                                addressLine2: "string",
                                                                city: "string",
                                                                stateOrProvince: "string",
                                                                postalCode: "string",
                                                                country: "string",
                                                            },
                                                            birthDateProvided: true,
                                                            governmentIDProvided: true,
                                                        },
                                                    },
                                                    status: "unverified",
                                                    acceptedTos: true,
                                                    isPayor: true,
                                                    isPayee: true,
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                            ],
                                        },
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Find counterparties",
                            },
                        ],
                        types: [
                            "type_counterparty:FindCounterpartiesResponse",
                            "type_counterparty:CounterpartyResponse",
                        ],
                        subpackages: [],
                        pointsTo: null,
                    },
                    "subpackage_entity-users": {
                        subpackageId: "subpackage_entity-users",
                        parent: null,
                        name: "entity-users",
                        urlSlug: "entity-users",
                        description: null,
                        endpoints: [
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "get-all-users",
                                method: "GET",
                                id: "getAll",
                                name: "Get all users",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "entityId",
                                            type: { type: "id", value: "type_entity:EntityId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/entity" },
                                        { type: "literal", value: "/" },
                                        { type: "pathParameter", value: "entityId" },
                                        { type: "literal", value: "/users" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: null,
                                response: {
                                    type: {
                                        type: "reference",
                                        value: {
                                            type: "list",
                                            itemType: { type: "id", value: "type_entity-users:EntityUserResponse" },
                                        },
                                    },
                                },
                                examples: [
                                    {
                                        path: "/entity/string/users",
                                        pathParameters: { entityId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        responseStatusCode: 200,
                                        responseBody: [
                                            {
                                                id: "string",
                                                foreignId: "string",
                                                email: "string",
                                                name: "string",
                                                roles: ["string"],
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                        ],
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Get all entity users",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "create-user",
                                method: "POST",
                                id: "create",
                                name: "Create user",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "entityId",
                                            type: { type: "id", value: "type_entity:EntityId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/entity" },
                                        { type: "literal", value: "/" },
                                        { type: "pathParameter", value: "entityId" },
                                        { type: "literal", value: "/user" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_entity-users:EntityUserRequest" },
                                    },
                                },
                                response: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_entity-users:EntityUserResponse" },
                                    },
                                },
                                examples: [
                                    {
                                        path: "/entity/string/user",
                                        pathParameters: { entityId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        requestBody: {},
                                        responseStatusCode: 200,
                                        responseBody: {
                                            id: "string",
                                            foreignId: "string",
                                            email: "string",
                                            name: "string",
                                            roles: ["string"],
                                            createdAt: "2023-01-01T00:00:00Z",
                                            updatedAt: "2023-01-01T00:00:00Z",
                                        },
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: null,
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "get-user",
                                method: "GET",
                                id: "get",
                                name: "Get user",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "entityId",
                                            type: { type: "id", value: "type_entity:EntityId" },
                                            description: null,
                                        },
                                        {
                                            key: "userId",
                                            type: { type: "id", value: "type_entity-users:EntityUserId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/entity" },
                                        { type: "literal", value: "/" },
                                        { type: "pathParameter", value: "entityId" },
                                        { type: "literal", value: "/user/" },
                                        { type: "pathParameter", value: "userId" },
                                        { type: "literal", value: "" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: null,
                                response: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_entity-users:EntityUserResponse" },
                                    },
                                },
                                examples: [
                                    {
                                        path: "/entity/string/user/string",
                                        pathParameters: { entityId: "string", userId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        responseStatusCode: 200,
                                        responseBody: {
                                            id: "string",
                                            foreignId: "string",
                                            email: "string",
                                            name: "string",
                                            roles: ["string"],
                                            createdAt: "2023-01-01T00:00:00Z",
                                            updatedAt: "2023-01-01T00:00:00Z",
                                        },
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Get entity user",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "update-user",
                                method: "POST",
                                id: "update",
                                name: "Update user",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "entityId",
                                            type: { type: "id", value: "type_entity:EntityId" },
                                            description: null,
                                        },
                                        {
                                            key: "userId",
                                            type: { type: "id", value: "type_entity-users:EntityUserId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/entity" },
                                        { type: "literal", value: "/" },
                                        { type: "pathParameter", value: "entityId" },
                                        { type: "literal", value: "/user/" },
                                        { type: "pathParameter", value: "userId" },
                                        { type: "literal", value: "" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_entity-users:EntityUserRequest" },
                                    },
                                },
                                response: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_entity-users:EntityUserResponse" },
                                    },
                                },
                                examples: [
                                    {
                                        path: "/entity/string/user/string",
                                        pathParameters: { entityId: "string", userId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        requestBody: {},
                                        responseStatusCode: 200,
                                        responseBody: {
                                            id: "string",
                                            foreignId: "string",
                                            email: "string",
                                            name: "string",
                                            roles: ["string"],
                                            createdAt: "2023-01-01T00:00:00Z",
                                            updatedAt: "2023-01-01T00:00:00Z",
                                        },
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Update entity user",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "delete-user",
                                method: "DELETE",
                                id: "delete",
                                name: "Delete user",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "entityId",
                                            type: { type: "id", value: "type_entity:EntityId" },
                                            description: null,
                                        },
                                        {
                                            key: "userId",
                                            type: { type: "id", value: "type_entity-users:EntityUserId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/entity" },
                                        { type: "literal", value: "/" },
                                        { type: "pathParameter", value: "entityId" },
                                        { type: "literal", value: "/user/" },
                                        { type: "pathParameter", value: "userId" },
                                        { type: "literal", value: "" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: null,
                                response: null,
                                examples: [
                                    {
                                        path: "/entity/string/user/string",
                                        pathParameters: { entityId: "string", userId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        responseStatusCode: 200,
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Delete entity user",
                            },
                        ],
                        types: [
                            "type_entity-users:EntityUserId",
                            "type_entity-users:EntityUserRequest",
                            "type_entity-users:EntityUserResponse",
                        ],
                        subpackages: [],
                        pointsTo: null,
                    },
                    subpackage_entity: {
                        subpackageId: "subpackage_entity",
                        parent: null,
                        name: "entity",
                        urlSlug: "entity",
                        description: null,
                        endpoints: [
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "get-all-entities",
                                method: "GET",
                                id: "getAll",
                                name: "Get all entities",
                                path: {
                                    pathParameters: [],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/entities" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: null,
                                response: {
                                    type: {
                                        type: "reference",
                                        value: {
                                            type: "list",
                                            itemType: { type: "id", value: "type_entity:EntityResponse" },
                                        },
                                    },
                                },
                                examples: [
                                    {
                                        path: "//entities",
                                        pathParameters: {},
                                        queryParameters: {},
                                        headers: {},
                                        responseStatusCode: 200,
                                        responseBody: [
                                            {
                                                id: "string",
                                                foreignId: "string",
                                                emailTo: "string",
                                                emailToAlias: ["string"],
                                                ownedByOrg: true,
                                                accountType: "business",
                                                name: "string",
                                                email: "string",
                                                profile: {
                                                    business: {
                                                        email: "string",
                                                        legalBusinessName: "string",
                                                        businessType: "soleProprietorship",
                                                        phone: { countryCode: "string", number: "string" },
                                                        doingBusinessAs: "string",
                                                        website: "string",
                                                        description: "string",
                                                        address: {
                                                            addressLine1: "string",
                                                            addressLine2: "string",
                                                            city: "string",
                                                            stateOrProvince: "string",
                                                            postalCode: "string",
                                                            country: "string",
                                                        },
                                                        ownersProvided: true,
                                                        taxIDProvided: true,
                                                    },
                                                    individual: {
                                                        email: "string",
                                                        name: {
                                                            firstName: "string",
                                                            middleName: "string",
                                                            lastName: "string",
                                                            suffix: "string",
                                                        },
                                                        phone: { countryCode: "string", number: "string" },
                                                        address: {
                                                            addressLine1: "string",
                                                            addressLine2: "string",
                                                            city: "string",
                                                            stateOrProvince: "string",
                                                            postalCode: "string",
                                                            country: "string",
                                                        },
                                                        birthDateProvided: true,
                                                        governmentIDProvided: true,
                                                    },
                                                },
                                                status: "unverified",
                                                acceptedTos: true,
                                                isPayor: true,
                                                isPayee: true,
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                        ],
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Get all entities",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "find-entities",
                                method: "GET",
                                id: "find",
                                name: "Find entities",
                                path: {
                                    pathParameters: [],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/entity" },
                                    ],
                                },
                                queryParameters: [
                                    {
                                        key: "foreignId",
                                        type: {
                                            type: "optional",
                                            itemType: { type: "primitive", value: { type: "string" } },
                                        },
                                        description: null,
                                    },
                                    {
                                        key: "status",
                                        type: {
                                            type: "optional",
                                            itemType: { type: "id", value: "type_entity:EntityStatus" },
                                        },
                                        description: null,
                                    },
                                ],
                                headers: [],
                                request: null,
                                response: {
                                    type: {
                                        type: "reference",
                                        value: {
                                            type: "list",
                                            itemType: { type: "id", value: "type_entity:EntityResponse" },
                                        },
                                    },
                                },
                                examples: [
                                    {
                                        path: "//entity",
                                        pathParameters: {},
                                        queryParameters: { foreignId: "string", status: "unverified" },
                                        headers: {},
                                        responseStatusCode: 200,
                                        responseBody: [
                                            {
                                                id: "string",
                                                foreignId: "string",
                                                emailTo: "string",
                                                emailToAlias: ["string"],
                                                ownedByOrg: true,
                                                accountType: "business",
                                                name: "string",
                                                email: "string",
                                                profile: {
                                                    business: {
                                                        email: "string",
                                                        legalBusinessName: "string",
                                                        businessType: "soleProprietorship",
                                                        phone: { countryCode: "string", number: "string" },
                                                        doingBusinessAs: "string",
                                                        website: "string",
                                                        description: "string",
                                                        address: {
                                                            addressLine1: "string",
                                                            addressLine2: "string",
                                                            city: "string",
                                                            stateOrProvince: "string",
                                                            postalCode: "string",
                                                            country: "string",
                                                        },
                                                        ownersProvided: true,
                                                        taxIDProvided: true,
                                                    },
                                                    individual: {
                                                        email: "string",
                                                        name: {
                                                            firstName: "string",
                                                            middleName: "string",
                                                            lastName: "string",
                                                            suffix: "string",
                                                        },
                                                        phone: { countryCode: "string", number: "string" },
                                                        address: {
                                                            addressLine1: "string",
                                                            addressLine2: "string",
                                                            city: "string",
                                                            stateOrProvince: "string",
                                                            postalCode: "string",
                                                            country: "string",
                                                        },
                                                        birthDateProvided: true,
                                                        governmentIDProvided: true,
                                                    },
                                                },
                                                status: "unverified",
                                                acceptedTos: true,
                                                isPayor: true,
                                                isPayee: true,
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                        ],
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: null,
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "create-entity",
                                method: "POST",
                                id: "create",
                                name: "Create entity",
                                path: {
                                    pathParameters: [],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/entity" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_entity:EntityRequest" },
                                    },
                                },
                                response: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_entity:EntityResponse" },
                                    },
                                },
                                examples: [
                                    {
                                        path: "//entity",
                                        pathParameters: {},
                                        queryParameters: {},
                                        headers: {},
                                        requestBody: { accountType: "business", profile: {} },
                                        responseStatusCode: 200,
                                        responseBody: {
                                            id: "string",
                                            foreignId: "string",
                                            emailTo: "string",
                                            emailToAlias: ["string"],
                                            ownedByOrg: true,
                                            accountType: "business",
                                            name: "string",
                                            email: "string",
                                            profile: {
                                                business: {
                                                    email: "string",
                                                    legalBusinessName: "string",
                                                    businessType: "soleProprietorship",
                                                    phone: { countryCode: "string", number: "string" },
                                                    doingBusinessAs: "string",
                                                    website: "string",
                                                    description: "string",
                                                    address: {
                                                        addressLine1: "string",
                                                        addressLine2: "string",
                                                        city: "string",
                                                        stateOrProvince: "string",
                                                        postalCode: "string",
                                                        country: "string",
                                                    },
                                                    ownersProvided: true,
                                                    taxIDProvided: true,
                                                },
                                                individual: {
                                                    email: "string",
                                                    name: {
                                                        firstName: "string",
                                                        middleName: "string",
                                                        lastName: "string",
                                                        suffix: "string",
                                                    },
                                                    phone: { countryCode: "string", number: "string" },
                                                    address: {
                                                        addressLine1: "string",
                                                        addressLine2: "string",
                                                        city: "string",
                                                        stateOrProvince: "string",
                                                        postalCode: "string",
                                                        country: "string",
                                                    },
                                                    birthDateProvided: true,
                                                    governmentIDProvided: true,
                                                },
                                            },
                                            status: "unverified",
                                            acceptedTos: true,
                                            isPayor: true,
                                            isPayee: true,
                                            createdAt: "2023-01-01T00:00:00Z",
                                            updatedAt: "2023-01-01T00:00:00Z",
                                        },
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: null,
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "get-entity",
                                method: "GET",
                                id: "get",
                                name: "Get entity",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "entityId",
                                            type: { type: "id", value: "type_entity:EntityId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/entity/" },
                                        { type: "pathParameter", value: "entityId" },
                                        { type: "literal", value: "" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: null,
                                response: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_entity:EntityResponse" },
                                    },
                                },
                                examples: [
                                    {
                                        path: "//entity/string",
                                        pathParameters: { entityId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        responseStatusCode: 200,
                                        responseBody: {
                                            id: "string",
                                            foreignId: "string",
                                            emailTo: "string",
                                            emailToAlias: ["string"],
                                            ownedByOrg: true,
                                            accountType: "business",
                                            name: "string",
                                            email: "string",
                                            profile: {
                                                business: {
                                                    email: "string",
                                                    legalBusinessName: "string",
                                                    businessType: "soleProprietorship",
                                                    phone: { countryCode: "string", number: "string" },
                                                    doingBusinessAs: "string",
                                                    website: "string",
                                                    description: "string",
                                                    address: {
                                                        addressLine1: "string",
                                                        addressLine2: "string",
                                                        city: "string",
                                                        stateOrProvince: "string",
                                                        postalCode: "string",
                                                        country: "string",
                                                    },
                                                    ownersProvided: true,
                                                    taxIDProvided: true,
                                                },
                                                individual: {
                                                    email: "string",
                                                    name: {
                                                        firstName: "string",
                                                        middleName: "string",
                                                        lastName: "string",
                                                        suffix: "string",
                                                    },
                                                    phone: { countryCode: "string", number: "string" },
                                                    address: {
                                                        addressLine1: "string",
                                                        addressLine2: "string",
                                                        city: "string",
                                                        stateOrProvince: "string",
                                                        postalCode: "string",
                                                        country: "string",
                                                    },
                                                    birthDateProvided: true,
                                                    governmentIDProvided: true,
                                                },
                                            },
                                            status: "unverified",
                                            acceptedTos: true,
                                            isPayor: true,
                                            isPayee: true,
                                            createdAt: "2023-01-01T00:00:00Z",
                                            updatedAt: "2023-01-01T00:00:00Z",
                                        },
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Get entity",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "update-entity",
                                method: "POST",
                                id: "update",
                                name: "Update entity",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "entityId",
                                            type: { type: "id", value: "type_entity:EntityId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/entity/" },
                                        { type: "pathParameter", value: "entityId" },
                                        { type: "literal", value: "" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_entity:EntityUpdateRequest" },
                                    },
                                },
                                response: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_entity:EntityResponse" },
                                    },
                                },
                                examples: [
                                    {
                                        path: "//entity/string",
                                        pathParameters: { entityId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        requestBody: {},
                                        responseStatusCode: 200,
                                        responseBody: {
                                            id: "string",
                                            foreignId: "string",
                                            emailTo: "string",
                                            emailToAlias: ["string"],
                                            ownedByOrg: true,
                                            accountType: "business",
                                            name: "string",
                                            email: "string",
                                            profile: {
                                                business: {
                                                    email: "string",
                                                    legalBusinessName: "string",
                                                    businessType: "soleProprietorship",
                                                    phone: { countryCode: "string", number: "string" },
                                                    doingBusinessAs: "string",
                                                    website: "string",
                                                    description: "string",
                                                    address: {
                                                        addressLine1: "string",
                                                        addressLine2: "string",
                                                        city: "string",
                                                        stateOrProvince: "string",
                                                        postalCode: "string",
                                                        country: "string",
                                                    },
                                                    ownersProvided: true,
                                                    taxIDProvided: true,
                                                },
                                                individual: {
                                                    email: "string",
                                                    name: {
                                                        firstName: "string",
                                                        middleName: "string",
                                                        lastName: "string",
                                                        suffix: "string",
                                                    },
                                                    phone: { countryCode: "string", number: "string" },
                                                    address: {
                                                        addressLine1: "string",
                                                        addressLine2: "string",
                                                        city: "string",
                                                        stateOrProvince: "string",
                                                        postalCode: "string",
                                                        country: "string",
                                                    },
                                                    birthDateProvided: true,
                                                    governmentIDProvided: true,
                                                },
                                            },
                                            status: "unverified",
                                            acceptedTos: true,
                                            isPayor: true,
                                            isPayee: true,
                                            createdAt: "2023-01-01T00:00:00Z",
                                            updatedAt: "2023-01-01T00:00:00Z",
                                        },
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Update entity",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "delete-entity",
                                method: "DELETE",
                                id: "delete",
                                name: "Delete entity",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "entityId",
                                            type: { type: "id", value: "type_entity:EntityId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/entity/" },
                                        { type: "pathParameter", value: "entityId" },
                                        { type: "literal", value: "" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: null,
                                response: null,
                                examples: [
                                    {
                                        path: "//entity/string",
                                        pathParameters: { entityId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        responseStatusCode: 200,
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Delete entity",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "get-invoices",
                                method: "GET",
                                id: "getInvoices",
                                name: "Get Invoices",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "entityId",
                                            type: { type: "id", value: "type_entity:EntityId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/entity/" },
                                        { type: "pathParameter", value: "entityId" },
                                        { type: "literal", value: "/invoices" },
                                    ],
                                },
                                queryParameters: [
                                    {
                                        key: "startDate",
                                        type: {
                                            type: "optional",
                                            itemType: { type: "primitive", value: { type: "datetime" } },
                                        },
                                        description: "Start date for invoice created on date filter.",
                                    },
                                    {
                                        key: "endDate",
                                        type: {
                                            type: "optional",
                                            itemType: { type: "primitive", value: { type: "datetime" } },
                                        },
                                        description: "End date for invoice created date filter.",
                                    },
                                    {
                                        key: "orderBy",
                                        type: {
                                            type: "optional",
                                            itemType: { type: "id", value: "type_invoice:InvoiceOrderByField" },
                                        },
                                        description: "Field to order invoices by. Defaults to CREATED_AT.",
                                    },
                                    {
                                        key: "orderDirection",
                                        type: {
                                            type: "optional",
                                            itemType: { type: "id", value: "type_commons:OrderDirection" },
                                        },
                                        description: "Direction to order invoices by. Defaults to asc.",
                                    },
                                    {
                                        key: "limit",
                                        type: {
                                            type: "optional",
                                            itemType: { type: "primitive", value: { type: "integer" } },
                                        },
                                        description:
                                            "Number of invoices to return. Limit can range between 1 and 100, and the default is 10.",
                                    },
                                    {
                                        key: "startingAfter",
                                        type: {
                                            type: "optional",
                                            itemType: { type: "id", value: "type_invoice:InvoiceId" },
                                        },
                                        description:
                                            "The ID of the invoice to start after. If not provided, the first page of invoices will be returned.",
                                    },
                                    {
                                        key: "search",
                                        type: {
                                            type: "optional",
                                            itemType: { type: "primitive", value: { type: "string" } },
                                        },
                                        description: "Filter vendors by name. Partial matches are supported.",
                                    },
                                    {
                                        key: "status",
                                        type: {
                                            type: "optional",
                                            itemType: { type: "id", value: "type_invoice:InvoiceStatus" },
                                        },
                                        description: "Invoice status to filter on",
                                    },
                                ],
                                headers: [],
                                request: null,
                                response: {
                                    type: {
                                        type: "reference",
                                        value: {
                                            type: "list",
                                            itemType: { type: "id", value: "type_invoice:InvoiceResponse" },
                                        },
                                    },
                                },
                                examples: [
                                    {
                                        path: "//entity/string/invoices",
                                        pathParameters: { entityId: "string" },
                                        queryParameters: {
                                            startDate: "2023-01-01T00:00:00Z",
                                            endDate: "2023-01-01T00:00:00Z",
                                        },
                                        headers: {},
                                        responseStatusCode: 200,
                                        responseBody: [
                                            {
                                                id: "string",
                                                status: "DRAFT",
                                                amount: 1,
                                                currency: "AED",
                                                invoiceDate: "2023-01-01T00:00:00Z",
                                                deductionDate: "2023-01-01T00:00:00Z",
                                                fundedDate: "2023-01-01T00:00:00Z",
                                                dueDate: "2023-01-01T00:00:00Z",
                                                invoiceNumber: "string",
                                                noteToSelf: "string",
                                                serviceStartDate: "2023-01-01T00:00:00Z",
                                                serviceEndDate: "2023-01-01T00:00:00Z",
                                                payerId: "string",
                                                payer: {
                                                    id: "string",
                                                    foreignId: "string",
                                                    emailTo: "string",
                                                    emailToAlias: ["string"],
                                                    ownedByOrg: true,
                                                    accountType: "business",
                                                    name: "string",
                                                    email: "string",
                                                    profile: {
                                                        business: {
                                                            email: "string",
                                                            legalBusinessName: "string",
                                                            businessType: "soleProprietorship",
                                                            phone: { countryCode: "string", number: "string" },
                                                            doingBusinessAs: "string",
                                                            website: "string",
                                                            description: "string",
                                                            address: {
                                                                addressLine1: "string",
                                                                addressLine2: "string",
                                                                city: "string",
                                                                stateOrProvince: "string",
                                                                postalCode: "string",
                                                                country: "string",
                                                            },
                                                            ownersProvided: true,
                                                            taxIDProvided: true,
                                                        },
                                                        individual: {
                                                            email: "string",
                                                            name: {
                                                                firstName: "string",
                                                                middleName: "string",
                                                                lastName: "string",
                                                                suffix: "string",
                                                            },
                                                            phone: { countryCode: "string", number: "string" },
                                                            address: {
                                                                addressLine1: "string",
                                                                addressLine2: "string",
                                                                city: "string",
                                                                stateOrProvince: "string",
                                                                postalCode: "string",
                                                                country: "string",
                                                            },
                                                            birthDateProvided: true,
                                                            governmentIDProvided: true,
                                                        },
                                                    },
                                                    status: "unverified",
                                                    acceptedTos: true,
                                                    isPayor: true,
                                                    isPayee: true,
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                paymentSource: {
                                                    id: "string",
                                                    type: "custom",
                                                    bankAccount: {
                                                        id: "string",
                                                        bankName: "string",
                                                        routingNumber: "string",
                                                        accountNumber: "string",
                                                        accountType: "CHECKING",
                                                        status: "NEW",
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                    check: {
                                                        id: "string",
                                                        payToTheOrderOf: "string",
                                                        addressLine1: "string",
                                                        addressLine2: "string",
                                                        city: "string",
                                                        stateOrProvince: "string",
                                                        postalCode: "string",
                                                        country: "string",
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                    card: {
                                                        id: "string",
                                                        type: "credit",
                                                        brand: "AmericanExpress",
                                                        lastFour: "string",
                                                        expMonth: "string",
                                                        expYear: "string",
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                    custom: {
                                                        id: "string",
                                                        foreignId: "string",
                                                        accountName: "string",
                                                        accountNumber: "string",
                                                        schemaId: "string",
                                                        schema: {
                                                            id: "string",
                                                            name: "string",
                                                            isSource: true,
                                                            isDestination: true,
                                                            supportedCurrencies: ["AED"],
                                                            fields: [
                                                                {
                                                                    name: "string",
                                                                    displayName: "string",
                                                                    type: "text",
                                                                    optional: true,
                                                                    useAsAccountName: true,
                                                                    useAsAccountNumber: true,
                                                                    options: ["string"],
                                                                },
                                                            ],
                                                            createdAt: "2023-01-01T00:00:00Z",
                                                            updatedAt: "2023-01-01T00:00:00Z",
                                                        },
                                                        data: { string: "string" },
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                    supportedCurrencies: ["AED"],
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                paymentSourceId: "string",
                                                vendorId: "string",
                                                vendor: {
                                                    id: "string",
                                                    foreignId: "string",
                                                    emailTo: "string",
                                                    emailToAlias: ["string"],
                                                    ownedByOrg: true,
                                                    accountType: "business",
                                                    name: "string",
                                                    email: "string",
                                                    profile: {
                                                        business: {
                                                            email: "string",
                                                            legalBusinessName: "string",
                                                            businessType: "soleProprietorship",
                                                            phone: { countryCode: "string", number: "string" },
                                                            doingBusinessAs: "string",
                                                            website: "string",
                                                            description: "string",
                                                            address: {
                                                                addressLine1: "string",
                                                                addressLine2: "string",
                                                                city: "string",
                                                                stateOrProvince: "string",
                                                                postalCode: "string",
                                                                country: "string",
                                                            },
                                                            ownersProvided: true,
                                                            taxIDProvided: true,
                                                        },
                                                        individual: {
                                                            email: "string",
                                                            name: {
                                                                firstName: "string",
                                                                middleName: "string",
                                                                lastName: "string",
                                                                suffix: "string",
                                                            },
                                                            phone: { countryCode: "string", number: "string" },
                                                            address: {
                                                                addressLine1: "string",
                                                                addressLine2: "string",
                                                                city: "string",
                                                                stateOrProvince: "string",
                                                                postalCode: "string",
                                                                country: "string",
                                                            },
                                                            birthDateProvided: true,
                                                            governmentIDProvided: true,
                                                        },
                                                    },
                                                    status: "unverified",
                                                    acceptedTos: true,
                                                    isPayor: true,
                                                    isPayee: true,
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                paymentDestination: {
                                                    id: "string",
                                                    type: "custom",
                                                    bankAccount: {
                                                        id: "string",
                                                        bankName: "string",
                                                        routingNumber: "string",
                                                        accountNumber: "string",
                                                        accountType: "CHECKING",
                                                        status: "NEW",
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                    check: {
                                                        id: "string",
                                                        payToTheOrderOf: "string",
                                                        addressLine1: "string",
                                                        addressLine2: "string",
                                                        city: "string",
                                                        stateOrProvince: "string",
                                                        postalCode: "string",
                                                        country: "string",
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                    card: {
                                                        id: "string",
                                                        type: "credit",
                                                        brand: "AmericanExpress",
                                                        lastFour: "string",
                                                        expMonth: "string",
                                                        expYear: "string",
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                    custom: {
                                                        id: "string",
                                                        foreignId: "string",
                                                        accountName: "string",
                                                        accountNumber: "string",
                                                        schemaId: "string",
                                                        schema: {
                                                            id: "string",
                                                            name: "string",
                                                            isSource: true,
                                                            isDestination: true,
                                                            supportedCurrencies: ["AED"],
                                                            fields: [
                                                                {
                                                                    name: "string",
                                                                    displayName: "string",
                                                                    type: "text",
                                                                    optional: true,
                                                                    useAsAccountName: true,
                                                                    useAsAccountNumber: true,
                                                                    options: ["string"],
                                                                },
                                                            ],
                                                            createdAt: "2023-01-01T00:00:00Z",
                                                            updatedAt: "2023-01-01T00:00:00Z",
                                                        },
                                                        data: { string: "string" },
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                    supportedCurrencies: ["AED"],
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                paymentDestinationId: "string",
                                                paymentDestinationConfirmed: true,
                                                hasDocuments: true,
                                                comments: [
                                                    {
                                                        id: "string",
                                                        text: "string",
                                                        user: {
                                                            id: "string",
                                                            foreignId: "string",
                                                            email: "string",
                                                            name: "string",
                                                            roles: ["string"],
                                                            createdAt: "2023-01-01T00:00:00Z",
                                                            updatedAt: "2023-01-01T00:00:00Z",
                                                        },
                                                        approval: {
                                                            roles: ["string"],
                                                            action: "NONE",
                                                            userId: "string",
                                                            date: "2023-01-01T00:00:00Z",
                                                        },
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                ],
                                                transactions: [
                                                    {
                                                        id: "string",
                                                        status: "created",
                                                        amount: 1,
                                                        currency: "AED",
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                ],
                                                lineItems: [
                                                    {
                                                        id: "string",
                                                        amount: 1,
                                                        currency: "AED",
                                                        description: "string",
                                                        name: "string",
                                                        quantity: 0,
                                                        unitPrice: 1,
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                ],
                                                approvers: [
                                                    {
                                                        roles: ["string"],
                                                        action: "NONE",
                                                        userId: "string",
                                                        date: "2023-01-01T00:00:00Z",
                                                    },
                                                ],
                                                approvalPolicy: [
                                                    {
                                                        id: "string",
                                                        trigger: { type: "amount", amount: 1, currency: "AED" },
                                                        rule: {
                                                            type: "approver",
                                                            numApprovers: 0,
                                                            identifierList: { type: "rolesList", value: ["string"] },
                                                        },
                                                        upstreamPolicyId: "string",
                                                    },
                                                ],
                                                metadata: { string: "string" },
                                                createdBy: {
                                                    id: "string",
                                                    foreignId: "string",
                                                    email: "string",
                                                    name: "string",
                                                    roles: ["string"],
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                processedAt: "2023-01-01T00:00:00Z",
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                        ],
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Get invoices for an entity",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "get-invoice-metrics",
                                method: "GET",
                                id: "getInvoiceMetrics",
                                name: "Get Invoice Metrics",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "entityId",
                                            type: { type: "id", value: "type_entity:EntityId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/entity/" },
                                        { type: "pathParameter", value: "entityId" },
                                        { type: "literal", value: "/invoice-metrics" },
                                    ],
                                },
                                queryParameters: [
                                    {
                                        key: "search",
                                        type: {
                                            type: "optional",
                                            itemType: { type: "primitive", value: { type: "string" } },
                                        },
                                        description: "Filter vendors by name. Partial matches are supported.",
                                    },
                                    {
                                        key: "status",
                                        type: {
                                            type: "optional",
                                            itemType: { type: "id", value: "type_invoice:InvoiceStatus" },
                                        },
                                        description: "Invoice status to filter on",
                                    },
                                    {
                                        key: "dueDateStart",
                                        type: {
                                            type: "optional",
                                            itemType: { type: "primitive", value: { type: "datetime" } },
                                        },
                                        description: "Start date for invoice dueDate filter.",
                                    },
                                    {
                                        key: "dueDateEnd",
                                        type: {
                                            type: "optional",
                                            itemType: { type: "primitive", value: { type: "datetime" } },
                                        },
                                        description: "End date for invoice dueDate filter.",
                                    },
                                    {
                                        key: "createdDateStart",
                                        type: {
                                            type: "optional",
                                            itemType: { type: "primitive", value: { type: "datetime" } },
                                        },
                                        description: "Start date for invoice created on date filter.",
                                    },
                                    {
                                        key: "createdDateEnd",
                                        type: {
                                            type: "optional",
                                            itemType: { type: "primitive", value: { type: "datetime" } },
                                        },
                                        description: "End date for invoice created date filter.",
                                    },
                                    {
                                        key: "currency",
                                        type: { type: "id", value: "type_invoice:CurrencyCode" },
                                        description: "Currency to filter on",
                                    },
                                ],
                                headers: [],
                                request: null,
                                response: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_entity:InvoiceMetricsResponse" },
                                    },
                                },
                                examples: [
                                    {
                                        path: "//entity/string/invoice-metrics",
                                        pathParameters: { entityId: "string" },
                                        queryParameters: { search: "string", status: "DRAFT", currency: "AED" },
                                        headers: {},
                                        responseStatusCode: 200,
                                        responseBody: {
                                            totalAmount: 1,
                                            totalCount: 0,
                                            averageAmount: 1,
                                            currency: "AED",
                                        },
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Get invoice metrics for an entity",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "accept-terms-of-service",
                                method: "POST",
                                id: "acceptTermsOfService",
                                name: "Accept Terms Of Service",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "entityId",
                                            type: { type: "id", value: "type_entity:EntityId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/entity/" },
                                        { type: "pathParameter", value: "entityId" },
                                        { type: "literal", value: "/accept-tos" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: null,
                                response: {
                                    type: {
                                        type: "reference",
                                        value: { type: "primitive", value: { type: "string" } },
                                    },
                                },
                                examples: [
                                    {
                                        path: "//entity/string/accept-tos",
                                        pathParameters: { entityId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        responseStatusCode: 200,
                                        responseBody: "string",
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "End user accepts Terms of Service",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "get-token",
                                method: "GET",
                                id: "getToken",
                                name: "Get Token",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "entityId",
                                            type: { type: "id", value: "type_entity:EntityId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/entity/" },
                                        { type: "pathParameter", value: "entityId" },
                                        { type: "literal", value: "/token" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: null,
                                response: {
                                    type: {
                                        type: "reference",
                                        value: { type: "primitive", value: { type: "string" } },
                                    },
                                },
                                examples: [
                                    {
                                        path: "//entity/ent_a0f6ea94-0761-4a5e-a416-3c453cb7eced/token",
                                        pathParameters: { entityId: "ent_a0f6ea94-0761-4a5e-a416-3c453cb7eced" },
                                        queryParameters: {},
                                        headers: {},
                                        responseStatusCode: 200,
                                        responseBody:
                                            "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTIzNDU2Nzg5LCJuYW1lIjoiSm9zZXBoIn0.OpOSSw7e485LOP5PrzScxHb7SR6sAOMRckfFwi4rp7o",
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Get JWT token for entity",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "plaid-link-token",
                                method: "GET",
                                id: "plaidLinkToken",
                                name: "Plaid Link Token",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "entityId",
                                            type: { type: "id", value: "type_entity:EntityId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/entity/" },
                                        { type: "pathParameter", value: "entityId" },
                                        { type: "literal", value: "/plaidLinkToken" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: null,
                                response: {
                                    type: {
                                        type: "reference",
                                        value: { type: "primitive", value: { type: "string" } },
                                    },
                                },
                                examples: [
                                    {
                                        path: "//entity/string/plaidLinkToken",
                                        pathParameters: { entityId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        responseStatusCode: 200,
                                        responseBody: "string",
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Get Plaid token",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "add-payees",
                                method: "POST",
                                id: "addPayees",
                                name: "Add Payees",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "entityId",
                                            type: { type: "id", value: "type_entity:EntityId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/entity/" },
                                        { type: "pathParameter", value: "entityId" },
                                        { type: "literal", value: "/addPayees" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_entity:EntityAddPayeesRequest" },
                                    },
                                },
                                response: null,
                                examples: [
                                    {
                                        path: "//entity/string/addPayees",
                                        pathParameters: { entityId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        requestBody: { payees: ["string"] },
                                        responseStatusCode: 200,
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Create association between Entity and a given list of Payees",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "create-approval-policy",
                                method: "POST",
                                id: "createApprovalPolicy",
                                name: "Create Approval Policy",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "entityId",
                                            type: { type: "id", value: "type_entity:EntityId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/entity/" },
                                        { type: "pathParameter", value: "entityId" },
                                        { type: "literal", value: "/approval-policy" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_entity:ApprovalPolicyRequest" },
                                    },
                                },
                                response: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_entity:ApprovalPolicyResponse" },
                                    },
                                },
                                examples: [
                                    {
                                        path: "//entity/string/approval-policy",
                                        pathParameters: { entityId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        requestBody: {
                                            trigger: { type: "amount", amount: 1, currency: "AED" },
                                            rule: {
                                                type: "approver",
                                                numApprovers: 0,
                                                identifierList: { type: "rolesList", value: ["string"] },
                                            },
                                            upstreamPolicyId: "string",
                                        },
                                        responseStatusCode: 200,
                                        responseBody: {
                                            id: "string",
                                            trigger: { type: "amount", amount: 1, currency: "AED" },
                                            rule: {
                                                type: "approver",
                                                numApprovers: 0,
                                                identifierList: { type: "rolesList", value: ["string"] },
                                            },
                                            upstreamPolicyId: "string",
                                        },
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Create an invoice approval policy associated with Entity",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "get-approval-policy",
                                method: "GET",
                                id: "getApprovalPolicy",
                                name: "Get Approval Policy",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "entityId",
                                            type: { type: "id", value: "type_entity:EntityId" },
                                            description: null,
                                        },
                                        {
                                            key: "policyId",
                                            type: { type: "id", value: "type_entity:PolicyId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/entity/" },
                                        { type: "pathParameter", value: "entityId" },
                                        { type: "literal", value: "/approval-policy/" },
                                        { type: "pathParameter", value: "policyId" },
                                        { type: "literal", value: "" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: null,
                                response: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_entity:ApprovalPolicyResponse" },
                                    },
                                },
                                examples: [
                                    {
                                        path: "//entity/string/approval-policy/string",
                                        pathParameters: { entityId: "string", policyId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        responseStatusCode: 200,
                                        responseBody: {
                                            id: "string",
                                            trigger: { type: "amount", amount: 1, currency: "AED" },
                                            rule: {
                                                type: "approver",
                                                numApprovers: 0,
                                                identifierList: { type: "rolesList", value: ["string"] },
                                            },
                                            upstreamPolicyId: "string",
                                        },
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Retrieve an invoice approval policy associated with Entity",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "update-approval-policy",
                                method: "POST",
                                id: "updateApprovalPolicy",
                                name: "Update Approval Policy",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "entityId",
                                            type: { type: "id", value: "type_entity:EntityId" },
                                            description: null,
                                        },
                                        {
                                            key: "policyId",
                                            type: { type: "id", value: "type_entity:PolicyId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/entity/" },
                                        { type: "pathParameter", value: "entityId" },
                                        { type: "literal", value: "/approval-policy/" },
                                        { type: "pathParameter", value: "policyId" },
                                        { type: "literal", value: "" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_entity:ApprovalPolicyUpdateRequest" },
                                    },
                                },
                                response: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_entity:ApprovalPolicyResponse" },
                                    },
                                },
                                examples: [
                                    {
                                        path: "//entity/string/approval-policy/string",
                                        pathParameters: { entityId: "string", policyId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        requestBody: { id: "string" },
                                        responseStatusCode: 200,
                                        responseBody: {
                                            id: "string",
                                            trigger: { type: "amount", amount: 1, currency: "AED" },
                                            rule: {
                                                type: "approver",
                                                numApprovers: 0,
                                                identifierList: { type: "rolesList", value: ["string"] },
                                            },
                                            upstreamPolicyId: "string",
                                        },
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Update an invoice approval policy associated with Entity",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "delete-approval-policy",
                                method: "DELETE",
                                id: "deleteApprovalPolicy",
                                name: "Delete Approval Policy",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "entityId",
                                            type: { type: "id", value: "type_entity:EntityId" },
                                            description: null,
                                        },
                                        {
                                            key: "policyId",
                                            type: { type: "id", value: "type_entity:PolicyId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/entity/" },
                                        { type: "pathParameter", value: "entityId" },
                                        { type: "literal", value: "/approval-policy/" },
                                        { type: "pathParameter", value: "policyId" },
                                        { type: "literal", value: "" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: null,
                                response: null,
                                examples: [
                                    {
                                        path: "//entity/string/approval-policy/string",
                                        pathParameters: { entityId: "string", policyId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        responseStatusCode: 200,
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description:
                                    "Delete an invoice approval policy associated with Entity. BEWARE: Any approval policy deletion will result in all associated downstream policies also being deleted.",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "get-all-approval-policies",
                                method: "GET",
                                id: "getAllApprovalPolicies",
                                name: "Get All Approval Policies",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "entityId",
                                            type: { type: "id", value: "type_entity:EntityId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/entity/" },
                                        { type: "pathParameter", value: "entityId" },
                                        { type: "literal", value: "/approval-policies" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: null,
                                response: {
                                    type: {
                                        type: "reference",
                                        value: {
                                            type: "list",
                                            itemType: { type: "id", value: "type_entity:ApprovalPolicyResponse" },
                                        },
                                    },
                                },
                                examples: [
                                    {
                                        path: "//entity/string/approval-policies",
                                        pathParameters: { entityId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        responseStatusCode: 200,
                                        responseBody: [
                                            {
                                                id: "string",
                                                trigger: { type: "amount", amount: 1, currency: "AED" },
                                                rule: {
                                                    type: "approver",
                                                    numApprovers: 0,
                                                    identifierList: { type: "rolesList", value: ["string"] },
                                                },
                                                upstreamPolicyId: "string",
                                            },
                                        ],
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Retrieve all invoice approval policies associated with Entity",
                            },
                        ],
                        types: [
                            "type_entity:EntityId",
                            "type_entity:PolicyId",
                            "type_entity:EntityRequest",
                            "type_entity:EntityUpdateRequest",
                            "type_entity:EntityResponse",
                            "type_entity:EntityAddPayeesRequest",
                            "type_entity:ProfileRequest",
                            "type_entity:ProfileResponse",
                            "type_entity:BusinessProfileRequest",
                            "type_entity:BusinessProfileResponse",
                            "type_entity:IndividualProfileRequest",
                            "type_entity:IndividualProfileResponse",
                            "type_entity:InvoiceMetricsResponse",
                            "type_entity:ApprovalPolicyRequest",
                            "type_entity:ApprovalPolicyUpdateRequest",
                            "type_entity:ApprovalPolicyResponse",
                            "type_entity:Trigger",
                            "type_entity:AmountTrigger",
                            "type_entity:Rule",
                            "type_entity:IdentifierList",
                            "type_entity:ApproverRule",
                            "type_entity:TaxID",
                            "type_entity:Ein",
                            "type_entity:BusinessType",
                            "type_entity:AccountType",
                            "type_entity:EntityStatus",
                        ],
                        subpackages: [],
                        pointsTo: null,
                    },
                    subpackage_invoice: {
                        subpackageId: "subpackage_invoice",
                        parent: null,
                        name: "invoice",
                        urlSlug: "invoice",
                        description: null,
                        endpoints: [
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "create-invoice",
                                method: "POST",
                                id: "create",
                                name: "Create invoice",
                                path: {
                                    pathParameters: [],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/invoice" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_invoice:InvoiceRequest" },
                                    },
                                },
                                response: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_invoice:InvoiceResponse" },
                                    },
                                },
                                examples: [
                                    {
                                        path: "//invoice",
                                        pathParameters: {},
                                        queryParameters: {},
                                        headers: {},
                                        requestBody: {},
                                        responseStatusCode: 200,
                                        responseBody: {
                                            id: "string",
                                            status: "DRAFT",
                                            amount: 1,
                                            currency: "AED",
                                            invoiceDate: "2023-01-01T00:00:00Z",
                                            deductionDate: "2023-01-01T00:00:00Z",
                                            fundedDate: "2023-01-01T00:00:00Z",
                                            dueDate: "2023-01-01T00:00:00Z",
                                            invoiceNumber: "string",
                                            noteToSelf: "string",
                                            serviceStartDate: "2023-01-01T00:00:00Z",
                                            serviceEndDate: "2023-01-01T00:00:00Z",
                                            payerId: "string",
                                            payer: {
                                                id: "string",
                                                foreignId: "string",
                                                emailTo: "string",
                                                emailToAlias: ["string"],
                                                ownedByOrg: true,
                                                accountType: "business",
                                                name: "string",
                                                email: "string",
                                                profile: {
                                                    business: {
                                                        email: "string",
                                                        legalBusinessName: "string",
                                                        businessType: "soleProprietorship",
                                                        phone: { countryCode: "string", number: "string" },
                                                        doingBusinessAs: "string",
                                                        website: "string",
                                                        description: "string",
                                                        address: {
                                                            addressLine1: "string",
                                                            addressLine2: "string",
                                                            city: "string",
                                                            stateOrProvince: "string",
                                                            postalCode: "string",
                                                            country: "string",
                                                        },
                                                        ownersProvided: true,
                                                        taxIDProvided: true,
                                                    },
                                                    individual: {
                                                        email: "string",
                                                        name: {
                                                            firstName: "string",
                                                            middleName: "string",
                                                            lastName: "string",
                                                            suffix: "string",
                                                        },
                                                        phone: { countryCode: "string", number: "string" },
                                                        address: {
                                                            addressLine1: "string",
                                                            addressLine2: "string",
                                                            city: "string",
                                                            stateOrProvince: "string",
                                                            postalCode: "string",
                                                            country: "string",
                                                        },
                                                        birthDateProvided: true,
                                                        governmentIDProvided: true,
                                                    },
                                                },
                                                status: "unverified",
                                                acceptedTos: true,
                                                isPayor: true,
                                                isPayee: true,
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                            paymentSource: {
                                                id: "string",
                                                type: "custom",
                                                bankAccount: {
                                                    id: "string",
                                                    bankName: "string",
                                                    routingNumber: "string",
                                                    accountNumber: "string",
                                                    accountType: "CHECKING",
                                                    status: "NEW",
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                check: {
                                                    id: "string",
                                                    payToTheOrderOf: "string",
                                                    addressLine1: "string",
                                                    addressLine2: "string",
                                                    city: "string",
                                                    stateOrProvince: "string",
                                                    postalCode: "string",
                                                    country: "string",
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                card: {
                                                    id: "string",
                                                    type: "credit",
                                                    brand: "AmericanExpress",
                                                    lastFour: "string",
                                                    expMonth: "string",
                                                    expYear: "string",
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                custom: {
                                                    id: "string",
                                                    foreignId: "string",
                                                    accountName: "string",
                                                    accountNumber: "string",
                                                    schemaId: "string",
                                                    schema: {
                                                        id: "string",
                                                        name: "string",
                                                        isSource: true,
                                                        isDestination: true,
                                                        supportedCurrencies: ["AED"],
                                                        fields: [
                                                            {
                                                                name: "string",
                                                                displayName: "string",
                                                                type: "text",
                                                                optional: true,
                                                                useAsAccountName: true,
                                                                useAsAccountNumber: true,
                                                                options: ["string"],
                                                            },
                                                        ],
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                    data: { string: "string" },
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                supportedCurrencies: ["AED"],
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                            paymentSourceId: "string",
                                            vendorId: "string",
                                            vendor: {
                                                id: "string",
                                                foreignId: "string",
                                                emailTo: "string",
                                                emailToAlias: ["string"],
                                                ownedByOrg: true,
                                                accountType: "business",
                                                name: "string",
                                                email: "string",
                                                profile: {
                                                    business: {
                                                        email: "string",
                                                        legalBusinessName: "string",
                                                        businessType: "soleProprietorship",
                                                        phone: { countryCode: "string", number: "string" },
                                                        doingBusinessAs: "string",
                                                        website: "string",
                                                        description: "string",
                                                        address: {
                                                            addressLine1: "string",
                                                            addressLine2: "string",
                                                            city: "string",
                                                            stateOrProvince: "string",
                                                            postalCode: "string",
                                                            country: "string",
                                                        },
                                                        ownersProvided: true,
                                                        taxIDProvided: true,
                                                    },
                                                    individual: {
                                                        email: "string",
                                                        name: {
                                                            firstName: "string",
                                                            middleName: "string",
                                                            lastName: "string",
                                                            suffix: "string",
                                                        },
                                                        phone: { countryCode: "string", number: "string" },
                                                        address: {
                                                            addressLine1: "string",
                                                            addressLine2: "string",
                                                            city: "string",
                                                            stateOrProvince: "string",
                                                            postalCode: "string",
                                                            country: "string",
                                                        },
                                                        birthDateProvided: true,
                                                        governmentIDProvided: true,
                                                    },
                                                },
                                                status: "unverified",
                                                acceptedTos: true,
                                                isPayor: true,
                                                isPayee: true,
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                            paymentDestination: {
                                                id: "string",
                                                type: "custom",
                                                bankAccount: {
                                                    id: "string",
                                                    bankName: "string",
                                                    routingNumber: "string",
                                                    accountNumber: "string",
                                                    accountType: "CHECKING",
                                                    status: "NEW",
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                check: {
                                                    id: "string",
                                                    payToTheOrderOf: "string",
                                                    addressLine1: "string",
                                                    addressLine2: "string",
                                                    city: "string",
                                                    stateOrProvince: "string",
                                                    postalCode: "string",
                                                    country: "string",
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                card: {
                                                    id: "string",
                                                    type: "credit",
                                                    brand: "AmericanExpress",
                                                    lastFour: "string",
                                                    expMonth: "string",
                                                    expYear: "string",
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                custom: {
                                                    id: "string",
                                                    foreignId: "string",
                                                    accountName: "string",
                                                    accountNumber: "string",
                                                    schemaId: "string",
                                                    schema: {
                                                        id: "string",
                                                        name: "string",
                                                        isSource: true,
                                                        isDestination: true,
                                                        supportedCurrencies: ["AED"],
                                                        fields: [
                                                            {
                                                                name: "string",
                                                                displayName: "string",
                                                                type: "text",
                                                                optional: true,
                                                                useAsAccountName: true,
                                                                useAsAccountNumber: true,
                                                                options: ["string"],
                                                            },
                                                        ],
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                    data: { string: "string" },
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                supportedCurrencies: ["AED"],
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                            paymentDestinationId: "string",
                                            paymentDestinationConfirmed: true,
                                            hasDocuments: true,
                                            comments: [
                                                {
                                                    id: "string",
                                                    text: "string",
                                                    user: {
                                                        id: "string",
                                                        foreignId: "string",
                                                        email: "string",
                                                        name: "string",
                                                        roles: ["string"],
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                    approval: {
                                                        roles: ["string"],
                                                        action: "NONE",
                                                        userId: "string",
                                                        date: "2023-01-01T00:00:00Z",
                                                    },
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                            ],
                                            transactions: [
                                                {
                                                    id: "string",
                                                    status: "created",
                                                    amount: 1,
                                                    currency: "AED",
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                            ],
                                            lineItems: [
                                                {
                                                    id: "string",
                                                    amount: 1,
                                                    currency: "AED",
                                                    description: "string",
                                                    name: "string",
                                                    quantity: 0,
                                                    unitPrice: 1,
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                            ],
                                            approvers: [
                                                {
                                                    roles: ["string"],
                                                    action: "NONE",
                                                    userId: "string",
                                                    date: "2023-01-01T00:00:00Z",
                                                },
                                            ],
                                            approvalPolicy: [
                                                {
                                                    id: "string",
                                                    trigger: { type: "amount", amount: 1, currency: "AED" },
                                                    rule: {
                                                        type: "approver",
                                                        numApprovers: 0,
                                                        identifierList: { type: "rolesList", value: ["string"] },
                                                    },
                                                    upstreamPolicyId: "string",
                                                },
                                            ],
                                            metadata: { string: "string" },
                                            createdBy: {
                                                id: "string",
                                                foreignId: "string",
                                                email: "string",
                                                name: "string",
                                                roles: ["string"],
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                            processedAt: "2023-01-01T00:00:00Z",
                                            createdAt: "2023-01-01T00:00:00Z",
                                            updatedAt: "2023-01-01T00:00:00Z",
                                        },
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Create invoice",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "get-invoice",
                                method: "GET",
                                id: "get",
                                name: "Get invoice",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "invoiceId",
                                            type: { type: "id", value: "type_invoice:InvoiceId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/invoice/" },
                                        { type: "pathParameter", value: "invoiceId" },
                                        { type: "literal", value: "" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: null,
                                response: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_invoice:InvoiceResponse" },
                                    },
                                },
                                examples: [
                                    {
                                        path: "//invoice/string",
                                        pathParameters: { invoiceId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        responseStatusCode: 200,
                                        responseBody: {
                                            id: "string",
                                            status: "DRAFT",
                                            amount: 1,
                                            currency: "AED",
                                            invoiceDate: "2023-01-01T00:00:00Z",
                                            deductionDate: "2023-01-01T00:00:00Z",
                                            fundedDate: "2023-01-01T00:00:00Z",
                                            dueDate: "2023-01-01T00:00:00Z",
                                            invoiceNumber: "string",
                                            noteToSelf: "string",
                                            serviceStartDate: "2023-01-01T00:00:00Z",
                                            serviceEndDate: "2023-01-01T00:00:00Z",
                                            payerId: "string",
                                            payer: {
                                                id: "string",
                                                foreignId: "string",
                                                emailTo: "string",
                                                emailToAlias: ["string"],
                                                ownedByOrg: true,
                                                accountType: "business",
                                                name: "string",
                                                email: "string",
                                                profile: {
                                                    business: {
                                                        email: "string",
                                                        legalBusinessName: "string",
                                                        businessType: "soleProprietorship",
                                                        phone: { countryCode: "string", number: "string" },
                                                        doingBusinessAs: "string",
                                                        website: "string",
                                                        description: "string",
                                                        address: {
                                                            addressLine1: "string",
                                                            addressLine2: "string",
                                                            city: "string",
                                                            stateOrProvince: "string",
                                                            postalCode: "string",
                                                            country: "string",
                                                        },
                                                        ownersProvided: true,
                                                        taxIDProvided: true,
                                                    },
                                                    individual: {
                                                        email: "string",
                                                        name: {
                                                            firstName: "string",
                                                            middleName: "string",
                                                            lastName: "string",
                                                            suffix: "string",
                                                        },
                                                        phone: { countryCode: "string", number: "string" },
                                                        address: {
                                                            addressLine1: "string",
                                                            addressLine2: "string",
                                                            city: "string",
                                                            stateOrProvince: "string",
                                                            postalCode: "string",
                                                            country: "string",
                                                        },
                                                        birthDateProvided: true,
                                                        governmentIDProvided: true,
                                                    },
                                                },
                                                status: "unverified",
                                                acceptedTos: true,
                                                isPayor: true,
                                                isPayee: true,
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                            paymentSource: {
                                                id: "string",
                                                type: "custom",
                                                bankAccount: {
                                                    id: "string",
                                                    bankName: "string",
                                                    routingNumber: "string",
                                                    accountNumber: "string",
                                                    accountType: "CHECKING",
                                                    status: "NEW",
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                check: {
                                                    id: "string",
                                                    payToTheOrderOf: "string",
                                                    addressLine1: "string",
                                                    addressLine2: "string",
                                                    city: "string",
                                                    stateOrProvince: "string",
                                                    postalCode: "string",
                                                    country: "string",
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                card: {
                                                    id: "string",
                                                    type: "credit",
                                                    brand: "AmericanExpress",
                                                    lastFour: "string",
                                                    expMonth: "string",
                                                    expYear: "string",
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                custom: {
                                                    id: "string",
                                                    foreignId: "string",
                                                    accountName: "string",
                                                    accountNumber: "string",
                                                    schemaId: "string",
                                                    schema: {
                                                        id: "string",
                                                        name: "string",
                                                        isSource: true,
                                                        isDestination: true,
                                                        supportedCurrencies: ["AED"],
                                                        fields: [
                                                            {
                                                                name: "string",
                                                                displayName: "string",
                                                                type: "text",
                                                                optional: true,
                                                                useAsAccountName: true,
                                                                useAsAccountNumber: true,
                                                                options: ["string"],
                                                            },
                                                        ],
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                    data: { string: "string" },
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                supportedCurrencies: ["AED"],
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                            paymentSourceId: "string",
                                            vendorId: "string",
                                            vendor: {
                                                id: "string",
                                                foreignId: "string",
                                                emailTo: "string",
                                                emailToAlias: ["string"],
                                                ownedByOrg: true,
                                                accountType: "business",
                                                name: "string",
                                                email: "string",
                                                profile: {
                                                    business: {
                                                        email: "string",
                                                        legalBusinessName: "string",
                                                        businessType: "soleProprietorship",
                                                        phone: { countryCode: "string", number: "string" },
                                                        doingBusinessAs: "string",
                                                        website: "string",
                                                        description: "string",
                                                        address: {
                                                            addressLine1: "string",
                                                            addressLine2: "string",
                                                            city: "string",
                                                            stateOrProvince: "string",
                                                            postalCode: "string",
                                                            country: "string",
                                                        },
                                                        ownersProvided: true,
                                                        taxIDProvided: true,
                                                    },
                                                    individual: {
                                                        email: "string",
                                                        name: {
                                                            firstName: "string",
                                                            middleName: "string",
                                                            lastName: "string",
                                                            suffix: "string",
                                                        },
                                                        phone: { countryCode: "string", number: "string" },
                                                        address: {
                                                            addressLine1: "string",
                                                            addressLine2: "string",
                                                            city: "string",
                                                            stateOrProvince: "string",
                                                            postalCode: "string",
                                                            country: "string",
                                                        },
                                                        birthDateProvided: true,
                                                        governmentIDProvided: true,
                                                    },
                                                },
                                                status: "unverified",
                                                acceptedTos: true,
                                                isPayor: true,
                                                isPayee: true,
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                            paymentDestination: {
                                                id: "string",
                                                type: "custom",
                                                bankAccount: {
                                                    id: "string",
                                                    bankName: "string",
                                                    routingNumber: "string",
                                                    accountNumber: "string",
                                                    accountType: "CHECKING",
                                                    status: "NEW",
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                check: {
                                                    id: "string",
                                                    payToTheOrderOf: "string",
                                                    addressLine1: "string",
                                                    addressLine2: "string",
                                                    city: "string",
                                                    stateOrProvince: "string",
                                                    postalCode: "string",
                                                    country: "string",
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                card: {
                                                    id: "string",
                                                    type: "credit",
                                                    brand: "AmericanExpress",
                                                    lastFour: "string",
                                                    expMonth: "string",
                                                    expYear: "string",
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                custom: {
                                                    id: "string",
                                                    foreignId: "string",
                                                    accountName: "string",
                                                    accountNumber: "string",
                                                    schemaId: "string",
                                                    schema: {
                                                        id: "string",
                                                        name: "string",
                                                        isSource: true,
                                                        isDestination: true,
                                                        supportedCurrencies: ["AED"],
                                                        fields: [
                                                            {
                                                                name: "string",
                                                                displayName: "string",
                                                                type: "text",
                                                                optional: true,
                                                                useAsAccountName: true,
                                                                useAsAccountNumber: true,
                                                                options: ["string"],
                                                            },
                                                        ],
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                    data: { string: "string" },
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                supportedCurrencies: ["AED"],
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                            paymentDestinationId: "string",
                                            paymentDestinationConfirmed: true,
                                            hasDocuments: true,
                                            comments: [
                                                {
                                                    id: "string",
                                                    text: "string",
                                                    user: {
                                                        id: "string",
                                                        foreignId: "string",
                                                        email: "string",
                                                        name: "string",
                                                        roles: ["string"],
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                    approval: {
                                                        roles: ["string"],
                                                        action: "NONE",
                                                        userId: "string",
                                                        date: "2023-01-01T00:00:00Z",
                                                    },
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                            ],
                                            transactions: [
                                                {
                                                    id: "string",
                                                    status: "created",
                                                    amount: 1,
                                                    currency: "AED",
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                            ],
                                            lineItems: [
                                                {
                                                    id: "string",
                                                    amount: 1,
                                                    currency: "AED",
                                                    description: "string",
                                                    name: "string",
                                                    quantity: 0,
                                                    unitPrice: 1,
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                            ],
                                            approvers: [
                                                {
                                                    roles: ["string"],
                                                    action: "NONE",
                                                    userId: "string",
                                                    date: "2023-01-01T00:00:00Z",
                                                },
                                            ],
                                            approvalPolicy: [
                                                {
                                                    id: "string",
                                                    trigger: { type: "amount", amount: 1, currency: "AED" },
                                                    rule: {
                                                        type: "approver",
                                                        numApprovers: 0,
                                                        identifierList: { type: "rolesList", value: ["string"] },
                                                    },
                                                    upstreamPolicyId: "string",
                                                },
                                            ],
                                            metadata: { string: "string" },
                                            createdBy: {
                                                id: "string",
                                                foreignId: "string",
                                                email: "string",
                                                name: "string",
                                                roles: ["string"],
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                            processedAt: "2023-01-01T00:00:00Z",
                                            createdAt: "2023-01-01T00:00:00Z",
                                            updatedAt: "2023-01-01T00:00:00Z",
                                        },
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Get invoice",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "update-invoice",
                                method: "POST",
                                id: "update",
                                name: "Update invoice",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "invoiceId",
                                            type: { type: "id", value: "type_invoice:InvoiceId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/invoice/" },
                                        { type: "pathParameter", value: "invoiceId" },
                                        { type: "literal", value: "" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_invoice:InvoiceRequest" },
                                    },
                                },
                                response: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_invoice:InvoiceResponse" },
                                    },
                                },
                                examples: [
                                    {
                                        path: "//invoice/string",
                                        pathParameters: { invoiceId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        requestBody: {},
                                        responseStatusCode: 200,
                                        responseBody: {
                                            id: "string",
                                            status: "DRAFT",
                                            amount: 1,
                                            currency: "AED",
                                            invoiceDate: "2023-01-01T00:00:00Z",
                                            deductionDate: "2023-01-01T00:00:00Z",
                                            fundedDate: "2023-01-01T00:00:00Z",
                                            dueDate: "2023-01-01T00:00:00Z",
                                            invoiceNumber: "string",
                                            noteToSelf: "string",
                                            serviceStartDate: "2023-01-01T00:00:00Z",
                                            serviceEndDate: "2023-01-01T00:00:00Z",
                                            payerId: "string",
                                            payer: {
                                                id: "string",
                                                foreignId: "string",
                                                emailTo: "string",
                                                emailToAlias: ["string"],
                                                ownedByOrg: true,
                                                accountType: "business",
                                                name: "string",
                                                email: "string",
                                                profile: {
                                                    business: {
                                                        email: "string",
                                                        legalBusinessName: "string",
                                                        businessType: "soleProprietorship",
                                                        phone: { countryCode: "string", number: "string" },
                                                        doingBusinessAs: "string",
                                                        website: "string",
                                                        description: "string",
                                                        address: {
                                                            addressLine1: "string",
                                                            addressLine2: "string",
                                                            city: "string",
                                                            stateOrProvince: "string",
                                                            postalCode: "string",
                                                            country: "string",
                                                        },
                                                        ownersProvided: true,
                                                        taxIDProvided: true,
                                                    },
                                                    individual: {
                                                        email: "string",
                                                        name: {
                                                            firstName: "string",
                                                            middleName: "string",
                                                            lastName: "string",
                                                            suffix: "string",
                                                        },
                                                        phone: { countryCode: "string", number: "string" },
                                                        address: {
                                                            addressLine1: "string",
                                                            addressLine2: "string",
                                                            city: "string",
                                                            stateOrProvince: "string",
                                                            postalCode: "string",
                                                            country: "string",
                                                        },
                                                        birthDateProvided: true,
                                                        governmentIDProvided: true,
                                                    },
                                                },
                                                status: "unverified",
                                                acceptedTos: true,
                                                isPayor: true,
                                                isPayee: true,
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                            paymentSource: {
                                                id: "string",
                                                type: "custom",
                                                bankAccount: {
                                                    id: "string",
                                                    bankName: "string",
                                                    routingNumber: "string",
                                                    accountNumber: "string",
                                                    accountType: "CHECKING",
                                                    status: "NEW",
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                check: {
                                                    id: "string",
                                                    payToTheOrderOf: "string",
                                                    addressLine1: "string",
                                                    addressLine2: "string",
                                                    city: "string",
                                                    stateOrProvince: "string",
                                                    postalCode: "string",
                                                    country: "string",
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                card: {
                                                    id: "string",
                                                    type: "credit",
                                                    brand: "AmericanExpress",
                                                    lastFour: "string",
                                                    expMonth: "string",
                                                    expYear: "string",
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                custom: {
                                                    id: "string",
                                                    foreignId: "string",
                                                    accountName: "string",
                                                    accountNumber: "string",
                                                    schemaId: "string",
                                                    schema: {
                                                        id: "string",
                                                        name: "string",
                                                        isSource: true,
                                                        isDestination: true,
                                                        supportedCurrencies: ["AED"],
                                                        fields: [
                                                            {
                                                                name: "string",
                                                                displayName: "string",
                                                                type: "text",
                                                                optional: true,
                                                                useAsAccountName: true,
                                                                useAsAccountNumber: true,
                                                                options: ["string"],
                                                            },
                                                        ],
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                    data: { string: "string" },
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                supportedCurrencies: ["AED"],
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                            paymentSourceId: "string",
                                            vendorId: "string",
                                            vendor: {
                                                id: "string",
                                                foreignId: "string",
                                                emailTo: "string",
                                                emailToAlias: ["string"],
                                                ownedByOrg: true,
                                                accountType: "business",
                                                name: "string",
                                                email: "string",
                                                profile: {
                                                    business: {
                                                        email: "string",
                                                        legalBusinessName: "string",
                                                        businessType: "soleProprietorship",
                                                        phone: { countryCode: "string", number: "string" },
                                                        doingBusinessAs: "string",
                                                        website: "string",
                                                        description: "string",
                                                        address: {
                                                            addressLine1: "string",
                                                            addressLine2: "string",
                                                            city: "string",
                                                            stateOrProvince: "string",
                                                            postalCode: "string",
                                                            country: "string",
                                                        },
                                                        ownersProvided: true,
                                                        taxIDProvided: true,
                                                    },
                                                    individual: {
                                                        email: "string",
                                                        name: {
                                                            firstName: "string",
                                                            middleName: "string",
                                                            lastName: "string",
                                                            suffix: "string",
                                                        },
                                                        phone: { countryCode: "string", number: "string" },
                                                        address: {
                                                            addressLine1: "string",
                                                            addressLine2: "string",
                                                            city: "string",
                                                            stateOrProvince: "string",
                                                            postalCode: "string",
                                                            country: "string",
                                                        },
                                                        birthDateProvided: true,
                                                        governmentIDProvided: true,
                                                    },
                                                },
                                                status: "unverified",
                                                acceptedTos: true,
                                                isPayor: true,
                                                isPayee: true,
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                            paymentDestination: {
                                                id: "string",
                                                type: "custom",
                                                bankAccount: {
                                                    id: "string",
                                                    bankName: "string",
                                                    routingNumber: "string",
                                                    accountNumber: "string",
                                                    accountType: "CHECKING",
                                                    status: "NEW",
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                check: {
                                                    id: "string",
                                                    payToTheOrderOf: "string",
                                                    addressLine1: "string",
                                                    addressLine2: "string",
                                                    city: "string",
                                                    stateOrProvince: "string",
                                                    postalCode: "string",
                                                    country: "string",
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                card: {
                                                    id: "string",
                                                    type: "credit",
                                                    brand: "AmericanExpress",
                                                    lastFour: "string",
                                                    expMonth: "string",
                                                    expYear: "string",
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                custom: {
                                                    id: "string",
                                                    foreignId: "string",
                                                    accountName: "string",
                                                    accountNumber: "string",
                                                    schemaId: "string",
                                                    schema: {
                                                        id: "string",
                                                        name: "string",
                                                        isSource: true,
                                                        isDestination: true,
                                                        supportedCurrencies: ["AED"],
                                                        fields: [
                                                            {
                                                                name: "string",
                                                                displayName: "string",
                                                                type: "text",
                                                                optional: true,
                                                                useAsAccountName: true,
                                                                useAsAccountNumber: true,
                                                                options: ["string"],
                                                            },
                                                        ],
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                    data: { string: "string" },
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                supportedCurrencies: ["AED"],
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                            paymentDestinationId: "string",
                                            paymentDestinationConfirmed: true,
                                            hasDocuments: true,
                                            comments: [
                                                {
                                                    id: "string",
                                                    text: "string",
                                                    user: {
                                                        id: "string",
                                                        foreignId: "string",
                                                        email: "string",
                                                        name: "string",
                                                        roles: ["string"],
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                    approval: {
                                                        roles: ["string"],
                                                        action: "NONE",
                                                        userId: "string",
                                                        date: "2023-01-01T00:00:00Z",
                                                    },
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                            ],
                                            transactions: [
                                                {
                                                    id: "string",
                                                    status: "created",
                                                    amount: 1,
                                                    currency: "AED",
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                            ],
                                            lineItems: [
                                                {
                                                    id: "string",
                                                    amount: 1,
                                                    currency: "AED",
                                                    description: "string",
                                                    name: "string",
                                                    quantity: 0,
                                                    unitPrice: 1,
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                            ],
                                            approvers: [
                                                {
                                                    roles: ["string"],
                                                    action: "NONE",
                                                    userId: "string",
                                                    date: "2023-01-01T00:00:00Z",
                                                },
                                            ],
                                            approvalPolicy: [
                                                {
                                                    id: "string",
                                                    trigger: { type: "amount", amount: 1, currency: "AED" },
                                                    rule: {
                                                        type: "approver",
                                                        numApprovers: 0,
                                                        identifierList: { type: "rolesList", value: ["string"] },
                                                    },
                                                    upstreamPolicyId: "string",
                                                },
                                            ],
                                            metadata: { string: "string" },
                                            createdBy: {
                                                id: "string",
                                                foreignId: "string",
                                                email: "string",
                                                name: "string",
                                                roles: ["string"],
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                            processedAt: "2023-01-01T00:00:00Z",
                                            createdAt: "2023-01-01T00:00:00Z",
                                            updatedAt: "2023-01-01T00:00:00Z",
                                        },
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Update invoice",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "delete-invoice",
                                method: "DELETE",
                                id: "delete",
                                name: "Delete invoice",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "invoiceId",
                                            type: { type: "id", value: "type_invoice:InvoiceId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/invoice/" },
                                        { type: "pathParameter", value: "invoiceId" },
                                        { type: "literal", value: "" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: null,
                                response: null,
                                examples: [
                                    {
                                        path: "//invoice/string",
                                        pathParameters: { invoiceId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        responseStatusCode: 200,
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description:
                                    "Delete invoice. Only invoices in the DRAFT and NEW status can be deleted.",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "get-documents",
                                method: "GET",
                                id: "getDocuments",
                                name: "Get Documents",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "invoiceId",
                                            type: { type: "id", value: "type_invoice:InvoiceId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/invoice/" },
                                        { type: "pathParameter", value: "invoiceId" },
                                        { type: "literal", value: "/documents" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: null,
                                response: {
                                    type: {
                                        type: "reference",
                                        value: {
                                            type: "list",
                                            itemType: { type: "id", value: "type_invoice:DocumentResponse" },
                                        },
                                    },
                                },
                                examples: [
                                    {
                                        path: "//invoice/string/documents",
                                        pathParameters: { invoiceId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        responseStatusCode: 200,
                                        responseBody: [{ mimeType: "string", uri: "string", ocrResults: {} }],
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Get documents (scanned/uploaded images) associated with this invoice",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "approve-invoice",
                                method: "POST",
                                id: "approve",
                                name: "Approve invoice",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "invoiceId",
                                            type: { type: "id", value: "type_invoice:InvoiceId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/invoice/" },
                                        { type: "pathParameter", value: "invoiceId" },
                                        { type: "literal", value: "/approve" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_invoice:ApprovalRequest" },
                                    },
                                },
                                response: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_invoice:CommentResponse" },
                                    },
                                },
                                examples: [
                                    {
                                        path: "//invoice/string/approve",
                                        pathParameters: { invoiceId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        requestBody: { userId: "string" },
                                        responseStatusCode: 200,
                                        responseBody: {
                                            id: "string",
                                            text: "string",
                                            user: {
                                                id: "string",
                                                foreignId: "string",
                                                email: "string",
                                                name: "string",
                                                roles: ["string"],
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                            approval: {
                                                roles: ["string"],
                                                action: "NONE",
                                                userId: "string",
                                                date: "2023-01-01T00:00:00Z",
                                            },
                                            createdAt: "2023-01-01T00:00:00Z",
                                            updatedAt: "2023-01-01T00:00:00Z",
                                        },
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Approve invoice",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "reject-invoice",
                                method: "POST",
                                id: "reject",
                                name: "Reject invoice",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "invoiceId",
                                            type: { type: "id", value: "type_invoice:InvoiceId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/invoice/" },
                                        { type: "pathParameter", value: "invoiceId" },
                                        { type: "literal", value: "/reject" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_invoice:ApprovalRequest" },
                                    },
                                },
                                response: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_invoice:CommentResponse" },
                                    },
                                },
                                examples: [
                                    {
                                        path: "//invoice/string/reject",
                                        pathParameters: { invoiceId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        requestBody: { userId: "string" },
                                        responseStatusCode: 200,
                                        responseBody: {
                                            id: "string",
                                            text: "string",
                                            user: {
                                                id: "string",
                                                foreignId: "string",
                                                email: "string",
                                                name: "string",
                                                roles: ["string"],
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                            approval: {
                                                roles: ["string"],
                                                action: "NONE",
                                                userId: "string",
                                                date: "2023-01-01T00:00:00Z",
                                            },
                                            createdAt: "2023-01-01T00:00:00Z",
                                            updatedAt: "2023-01-01T00:00:00Z",
                                        },
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Reject invoice",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "get-comments",
                                method: "GET",
                                id: "getComments",
                                name: "Get Comments",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "invoiceId",
                                            type: { type: "id", value: "type_invoice:InvoiceId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/invoice/" },
                                        { type: "pathParameter", value: "invoiceId" },
                                        { type: "literal", value: "/comments" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: null,
                                response: {
                                    type: {
                                        type: "reference",
                                        value: {
                                            type: "list",
                                            itemType: { type: "id", value: "type_invoice:CommentResponse" },
                                        },
                                    },
                                },
                                examples: [
                                    {
                                        path: "//invoice/string/comments",
                                        pathParameters: { invoiceId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        responseStatusCode: 200,
                                        responseBody: [
                                            {
                                                id: "string",
                                                text: "string",
                                                user: {
                                                    id: "string",
                                                    foreignId: "string",
                                                    email: "string",
                                                    name: "string",
                                                    roles: ["string"],
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                approval: {
                                                    roles: ["string"],
                                                    action: "NONE",
                                                    userId: "string",
                                                    date: "2023-01-01T00:00:00Z",
                                                },
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                        ],
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Get all comments associated with this invoice",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "add-comment",
                                method: "POST",
                                id: "addComment",
                                name: "Add Comment",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "invoiceId",
                                            type: { type: "id", value: "type_invoice:InvoiceId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/invoice/" },
                                        { type: "pathParameter", value: "invoiceId" },
                                        { type: "literal", value: "/comment" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_invoice:CommentRequest" },
                                    },
                                },
                                response: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_invoice:CommentResponse" },
                                    },
                                },
                                examples: [
                                    {
                                        path: "//invoice/string/comment",
                                        pathParameters: { invoiceId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        requestBody: { text: "string" },
                                        responseStatusCode: 200,
                                        responseBody: {
                                            id: "string",
                                            text: "string",
                                            user: {
                                                id: "string",
                                                foreignId: "string",
                                                email: "string",
                                                name: "string",
                                                roles: ["string"],
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                            approval: {
                                                roles: ["string"],
                                                action: "NONE",
                                                userId: "string",
                                                date: "2023-01-01T00:00:00Z",
                                            },
                                            createdAt: "2023-01-01T00:00:00Z",
                                            updatedAt: "2023-01-01T00:00:00Z",
                                        },
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Add a comment to this invoice",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "edit-comment",
                                method: "POST",
                                id: "editComment",
                                name: "Edit Comment",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "invoiceId",
                                            type: { type: "id", value: "type_invoice:InvoiceId" },
                                            description: null,
                                        },
                                        {
                                            key: "commentId",
                                            type: { type: "id", value: "type_invoice:CommentId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/invoice/" },
                                        { type: "pathParameter", value: "invoiceId" },
                                        { type: "literal", value: "/comment/" },
                                        { type: "pathParameter", value: "commentId" },
                                        { type: "literal", value: "" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_invoice:CommentRequest" },
                                    },
                                },
                                response: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_invoice:CommentResponse" },
                                    },
                                },
                                examples: [
                                    {
                                        path: "//invoice/string/comment/string",
                                        pathParameters: { invoiceId: "string", commentId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        requestBody: { text: "string" },
                                        responseStatusCode: 200,
                                        responseBody: {
                                            id: "string",
                                            text: "string",
                                            user: {
                                                id: "string",
                                                foreignId: "string",
                                                email: "string",
                                                name: "string",
                                                roles: ["string"],
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                            approval: {
                                                roles: ["string"],
                                                action: "NONE",
                                                userId: "string",
                                                date: "2023-01-01T00:00:00Z",
                                            },
                                            createdAt: "2023-01-01T00:00:00Z",
                                            updatedAt: "2023-01-01T00:00:00Z",
                                        },
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Edit a comment on this invoice",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "delete-comment",
                                method: "DELETE",
                                id: "deleteComment",
                                name: "Delete Comment",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "invoiceId",
                                            type: { type: "id", value: "type_invoice:InvoiceId" },
                                            description: null,
                                        },
                                        {
                                            key: "commentId",
                                            type: { type: "id", value: "type_invoice:CommentId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/invoice/" },
                                        { type: "pathParameter", value: "invoiceId" },
                                        { type: "literal", value: "/comment/" },
                                        { type: "pathParameter", value: "commentId" },
                                        { type: "literal", value: "" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: null,
                                response: null,
                                examples: [
                                    {
                                        path: "//invoice/string/comment/string",
                                        pathParameters: { invoiceId: "string", commentId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        responseStatusCode: 200,
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Delete a comment on this invoice",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "get-vendor-link",
                                method: "GET",
                                id: "getVendorLink",
                                name: "Get Vendor Link",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "invoiceId",
                                            type: { type: "id", value: "type_invoice:InvoiceId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/invoice/" },
                                        { type: "pathParameter", value: "invoiceId" },
                                        { type: "literal", value: "/vendorlink" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: null,
                                response: {
                                    type: {
                                        type: "reference",
                                        value: { type: "primitive", value: { type: "string" } },
                                    },
                                },
                                examples: [
                                    {
                                        path: "//invoice/inv_a0f6ea94-0761-4a5e-a416-3c453cb7eced/vendorlink",
                                        pathParameters: { invoiceId: "inv_a0f6ea94-0761-4a5e-a416-3c453cb7eced" },
                                        queryParameters: {},
                                        headers: {},
                                        responseStatusCode: 200,
                                        responseBody: "https://mercoa.com/vendors/accept-payment/?t=123456",
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Get temporary link for vendor to accept payment",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "send-vendor-email",
                                method: "POST",
                                id: "sendVendorEmail",
                                name: "Send Vendor Email",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "invoiceId",
                                            type: { type: "id", value: "type_invoice:InvoiceId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/invoice/" },
                                        { type: "pathParameter", value: "invoiceId" },
                                        { type: "literal", value: "/sendVendorEmail" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: null,
                                response: null,
                                examples: [
                                    {
                                        path: "//invoice/string/sendVendorEmail",
                                        pathParameters: { invoiceId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        responseStatusCode: 200,
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Trigger email to vendor inviting them into the vendor portal",
                            },
                        ],
                        types: [
                            "type_invoice:InvoiceRequest",
                            "type_invoice:InvoiceResponse",
                            "type_invoice:InvoiceId",
                            "type_invoice:CommentId",
                            "type_invoice:SetApprover",
                            "type_invoice:Approver",
                            "type_invoice:ApproverResponse",
                            "type_invoice:ApproverAction",
                            "type_invoice:InvoiceLineItemResponse",
                            "type_invoice:InvoiceLineItemRequest",
                            "type_invoice:DocumentResponse",
                            "type_invoice:CommentRequest",
                            "type_invoice:ApprovalRequest",
                            "type_invoice:CommentResponse",
                            "type_invoice:CreateVendorRequest",
                            "type_invoice:InvoiceStatus",
                            "type_invoice:InvoiceOrderByField",
                            "type_invoice:CurrencyCode",
                        ],
                        subpackages: [],
                        pointsTo: null,
                    },
                    subpackage_ocr: {
                        subpackageId: "subpackage_ocr",
                        parent: null,
                        name: "ocr",
                        urlSlug: "ocr",
                        description: null,
                        endpoints: [
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "run-ocr",
                                method: "POST",
                                id: "ocr",
                                name: "Run OCR",
                                path: {
                                    pathParameters: [],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/ocr" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: {
                                    type: {
                                        type: "object",
                                        extends: [],
                                        properties: [
                                            {
                                                key: "mimeType",
                                                valueType: { type: "primitive", value: { type: "string" } },
                                                description:
                                                    "MIME type of the image. Supported types are image/png, image/jpeg, and application/pdf.",
                                            },
                                            {
                                                key: "image",
                                                valueType: { type: "primitive", value: { type: "string" } },
                                                description:
                                                    "Base64 encoded image or PDF. PNG, JPG, and PDF are supported. 10MB max.",
                                            },
                                        ],
                                    },
                                },
                                response: {
                                    type: { type: "reference", value: { type: "id", value: "type_ocr:OCRResponse" } },
                                },
                                examples: [
                                    {
                                        path: "//ocr",
                                        pathParameters: {},
                                        queryParameters: {},
                                        headers: {},
                                        requestBody: { mimeType: "string", image: "string" },
                                        responseStatusCode: 200,
                                        responseBody: {
                                            invoice: {
                                                id: "string",
                                                status: "DRAFT",
                                                amount: 1,
                                                currency: "AED",
                                                invoiceDate: "2023-01-01T00:00:00Z",
                                                deductionDate: "2023-01-01T00:00:00Z",
                                                fundedDate: "2023-01-01T00:00:00Z",
                                                dueDate: "2023-01-01T00:00:00Z",
                                                invoiceNumber: "string",
                                                noteToSelf: "string",
                                                serviceStartDate: "2023-01-01T00:00:00Z",
                                                serviceEndDate: "2023-01-01T00:00:00Z",
                                                payerId: "string",
                                                payer: {
                                                    id: "string",
                                                    foreignId: "string",
                                                    emailTo: "string",
                                                    emailToAlias: ["string"],
                                                    ownedByOrg: true,
                                                    accountType: "business",
                                                    name: "string",
                                                    email: "string",
                                                    profile: {
                                                        business: {
                                                            email: "string",
                                                            legalBusinessName: "string",
                                                            businessType: "soleProprietorship",
                                                            phone: { countryCode: "string", number: "string" },
                                                            doingBusinessAs: "string",
                                                            website: "string",
                                                            description: "string",
                                                            address: {
                                                                addressLine1: "string",
                                                                addressLine2: "string",
                                                                city: "string",
                                                                stateOrProvince: "string",
                                                                postalCode: "string",
                                                                country: "string",
                                                            },
                                                            ownersProvided: true,
                                                            taxIDProvided: true,
                                                        },
                                                        individual: {
                                                            email: "string",
                                                            name: {
                                                                firstName: "string",
                                                                middleName: "string",
                                                                lastName: "string",
                                                                suffix: "string",
                                                            },
                                                            phone: { countryCode: "string", number: "string" },
                                                            address: {
                                                                addressLine1: "string",
                                                                addressLine2: "string",
                                                                city: "string",
                                                                stateOrProvince: "string",
                                                                postalCode: "string",
                                                                country: "string",
                                                            },
                                                            birthDateProvided: true,
                                                            governmentIDProvided: true,
                                                        },
                                                    },
                                                    status: "unverified",
                                                    acceptedTos: true,
                                                    isPayor: true,
                                                    isPayee: true,
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                paymentSource: {
                                                    id: "string",
                                                    type: "custom",
                                                    bankAccount: {
                                                        id: "string",
                                                        bankName: "string",
                                                        routingNumber: "string",
                                                        accountNumber: "string",
                                                        accountType: "CHECKING",
                                                        status: "NEW",
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                    check: {
                                                        id: "string",
                                                        payToTheOrderOf: "string",
                                                        addressLine1: "string",
                                                        addressLine2: "string",
                                                        city: "string",
                                                        stateOrProvince: "string",
                                                        postalCode: "string",
                                                        country: "string",
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                    card: {
                                                        id: "string",
                                                        type: "credit",
                                                        brand: "AmericanExpress",
                                                        lastFour: "string",
                                                        expMonth: "string",
                                                        expYear: "string",
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                    custom: {
                                                        id: "string",
                                                        foreignId: "string",
                                                        accountName: "string",
                                                        accountNumber: "string",
                                                        schemaId: "string",
                                                        schema: {
                                                            id: "string",
                                                            name: "string",
                                                            isSource: true,
                                                            isDestination: true,
                                                            supportedCurrencies: ["AED"],
                                                            fields: [
                                                                {
                                                                    name: "string",
                                                                    displayName: "string",
                                                                    type: "text",
                                                                    optional: true,
                                                                    useAsAccountName: true,
                                                                    useAsAccountNumber: true,
                                                                    options: ["string"],
                                                                },
                                                            ],
                                                            createdAt: "2023-01-01T00:00:00Z",
                                                            updatedAt: "2023-01-01T00:00:00Z",
                                                        },
                                                        data: { string: "string" },
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                    supportedCurrencies: ["AED"],
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                paymentSourceId: "string",
                                                vendorId: "string",
                                                vendor: {
                                                    id: "string",
                                                    foreignId: "string",
                                                    emailTo: "string",
                                                    emailToAlias: ["string"],
                                                    ownedByOrg: true,
                                                    accountType: "business",
                                                    name: "string",
                                                    email: "string",
                                                    profile: {
                                                        business: {
                                                            email: "string",
                                                            legalBusinessName: "string",
                                                            businessType: "soleProprietorship",
                                                            phone: { countryCode: "string", number: "string" },
                                                            doingBusinessAs: "string",
                                                            website: "string",
                                                            description: "string",
                                                            address: {
                                                                addressLine1: "string",
                                                                addressLine2: "string",
                                                                city: "string",
                                                                stateOrProvince: "string",
                                                                postalCode: "string",
                                                                country: "string",
                                                            },
                                                            ownersProvided: true,
                                                            taxIDProvided: true,
                                                        },
                                                        individual: {
                                                            email: "string",
                                                            name: {
                                                                firstName: "string",
                                                                middleName: "string",
                                                                lastName: "string",
                                                                suffix: "string",
                                                            },
                                                            phone: { countryCode: "string", number: "string" },
                                                            address: {
                                                                addressLine1: "string",
                                                                addressLine2: "string",
                                                                city: "string",
                                                                stateOrProvince: "string",
                                                                postalCode: "string",
                                                                country: "string",
                                                            },
                                                            birthDateProvided: true,
                                                            governmentIDProvided: true,
                                                        },
                                                    },
                                                    status: "unverified",
                                                    acceptedTos: true,
                                                    isPayor: true,
                                                    isPayee: true,
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                paymentDestination: {
                                                    id: "string",
                                                    type: "custom",
                                                    bankAccount: {
                                                        id: "string",
                                                        bankName: "string",
                                                        routingNumber: "string",
                                                        accountNumber: "string",
                                                        accountType: "CHECKING",
                                                        status: "NEW",
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                    check: {
                                                        id: "string",
                                                        payToTheOrderOf: "string",
                                                        addressLine1: "string",
                                                        addressLine2: "string",
                                                        city: "string",
                                                        stateOrProvince: "string",
                                                        postalCode: "string",
                                                        country: "string",
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                    card: {
                                                        id: "string",
                                                        type: "credit",
                                                        brand: "AmericanExpress",
                                                        lastFour: "string",
                                                        expMonth: "string",
                                                        expYear: "string",
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                    custom: {
                                                        id: "string",
                                                        foreignId: "string",
                                                        accountName: "string",
                                                        accountNumber: "string",
                                                        schemaId: "string",
                                                        schema: {
                                                            id: "string",
                                                            name: "string",
                                                            isSource: true,
                                                            isDestination: true,
                                                            supportedCurrencies: ["AED"],
                                                            fields: [
                                                                {
                                                                    name: "string",
                                                                    displayName: "string",
                                                                    type: "text",
                                                                    optional: true,
                                                                    useAsAccountName: true,
                                                                    useAsAccountNumber: true,
                                                                    options: ["string"],
                                                                },
                                                            ],
                                                            createdAt: "2023-01-01T00:00:00Z",
                                                            updatedAt: "2023-01-01T00:00:00Z",
                                                        },
                                                        data: { string: "string" },
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                    supportedCurrencies: ["AED"],
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                paymentDestinationId: "string",
                                                paymentDestinationConfirmed: true,
                                                hasDocuments: true,
                                                comments: [
                                                    {
                                                        id: "string",
                                                        text: "string",
                                                        user: {
                                                            id: "string",
                                                            foreignId: "string",
                                                            email: "string",
                                                            name: "string",
                                                            roles: ["string"],
                                                            createdAt: "2023-01-01T00:00:00Z",
                                                            updatedAt: "2023-01-01T00:00:00Z",
                                                        },
                                                        approval: {
                                                            roles: ["string"],
                                                            action: "NONE",
                                                            userId: "string",
                                                            date: "2023-01-01T00:00:00Z",
                                                        },
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                ],
                                                transactions: [
                                                    {
                                                        id: "string",
                                                        status: "created",
                                                        amount: 1,
                                                        currency: "AED",
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                ],
                                                lineItems: [
                                                    {
                                                        id: "string",
                                                        amount: 1,
                                                        currency: "AED",
                                                        description: "string",
                                                        name: "string",
                                                        quantity: 0,
                                                        unitPrice: 1,
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                ],
                                                approvers: [
                                                    {
                                                        roles: ["string"],
                                                        action: "NONE",
                                                        userId: "string",
                                                        date: "2023-01-01T00:00:00Z",
                                                    },
                                                ],
                                                approvalPolicy: [
                                                    {
                                                        id: "string",
                                                        trigger: { type: "amount", amount: 1, currency: "AED" },
                                                        rule: {
                                                            type: "approver",
                                                            numApprovers: 0,
                                                            identifierList: { type: "rolesList", value: ["string"] },
                                                        },
                                                        upstreamPolicyId: "string",
                                                    },
                                                ],
                                                metadata: { string: "string" },
                                                createdBy: {
                                                    id: "string",
                                                    foreignId: "string",
                                                    email: "string",
                                                    name: "string",
                                                    roles: ["string"],
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                processedAt: "2023-01-01T00:00:00Z",
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                            vendor: {
                                                id: "string",
                                                foreignId: "string",
                                                emailTo: "string",
                                                emailToAlias: ["string"],
                                                ownedByOrg: true,
                                                accountType: "business",
                                                name: "string",
                                                email: "string",
                                                profile: {
                                                    business: {
                                                        email: "string",
                                                        legalBusinessName: "string",
                                                        businessType: "soleProprietorship",
                                                        phone: { countryCode: "string", number: "string" },
                                                        doingBusinessAs: "string",
                                                        website: "string",
                                                        description: "string",
                                                        address: {
                                                            addressLine1: "string",
                                                            addressLine2: "string",
                                                            city: "string",
                                                            stateOrProvince: "string",
                                                            postalCode: "string",
                                                            country: "string",
                                                        },
                                                        ownersProvided: true,
                                                        taxIDProvided: true,
                                                    },
                                                    individual: {
                                                        email: "string",
                                                        name: {
                                                            firstName: "string",
                                                            middleName: "string",
                                                            lastName: "string",
                                                            suffix: "string",
                                                        },
                                                        phone: { countryCode: "string", number: "string" },
                                                        address: {
                                                            addressLine1: "string",
                                                            addressLine2: "string",
                                                            city: "string",
                                                            stateOrProvince: "string",
                                                            postalCode: "string",
                                                            country: "string",
                                                        },
                                                        birthDateProvided: true,
                                                        governmentIDProvided: true,
                                                    },
                                                },
                                                status: "unverified",
                                                acceptedTos: true,
                                                isPayor: true,
                                                isPayee: true,
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                            check: {
                                                id: "string",
                                                payToTheOrderOf: "string",
                                                addressLine1: "string",
                                                addressLine2: "string",
                                                city: "string",
                                                stateOrProvince: "string",
                                                postalCode: "string",
                                                country: "string",
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                            bankAccount: {
                                                id: "string",
                                                bankName: "string",
                                                routingNumber: "string",
                                                accountNumber: "string",
                                                accountType: "CHECKING",
                                                status: "NEW",
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                        },
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Run OCR on an Base64 encoded image or PDF",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "email-inbox",
                                method: "POST",
                                id: "emailInbox",
                                name: "Email Inbox",
                                path: {
                                    pathParameters: [],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/emailOcr" },
                                    ],
                                },
                                queryParameters: [
                                    {
                                        key: "org",
                                        type: { type: "id", value: "type_organization:OrganizationId" },
                                        description: null,
                                    },
                                ],
                                headers: [],
                                request: { type: { type: "reference", value: { type: "unknown" } } },
                                response: null,
                                examples: [
                                    {
                                        path: "//emailOcr",
                                        pathParameters: {},
                                        queryParameters: { org: "string" },
                                        headers: {},
                                        requestBody: {},
                                        responseStatusCode: 200,
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: null,
                            },
                        ],
                        types: [
                            "type_ocr:OCRResponse",
                            "type_ocr:OcrMailbox",
                            "type_ocr:Attachments",
                            "type_ocr:EmailOcrRequest",
                        ],
                        subpackages: [],
                        pointsTo: null,
                    },
                    subpackage_organization: {
                        subpackageId: "subpackage_organization",
                        parent: null,
                        name: "organization",
                        urlSlug: "organization",
                        description: null,
                        endpoints: [
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "get-organization",
                                method: "GET",
                                id: "get",
                                name: "Get organization",
                                path: {
                                    pathParameters: [],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/organization" },
                                    ],
                                },
                                queryParameters: [
                                    {
                                        key: "paymentMethods",
                                        type: {
                                            type: "optional",
                                            itemType: { type: "primitive", value: { type: "boolean" } },
                                        },
                                        description: "include supported payment methods in response",
                                    },
                                    {
                                        key: "emailProvider",
                                        type: {
                                            type: "optional",
                                            itemType: { type: "primitive", value: { type: "boolean" } },
                                        },
                                        description: "include email provider info in response",
                                    },
                                    {
                                        key: "colorScheme",
                                        type: {
                                            type: "optional",
                                            itemType: { type: "primitive", value: { type: "boolean" } },
                                        },
                                        description: "include color scheme info in response",
                                    },
                                ],
                                headers: [],
                                request: null,
                                response: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_organization:OrganizationResponse" },
                                    },
                                },
                                examples: [
                                    {
                                        path: "//organization",
                                        pathParameters: {},
                                        queryParameters: { paymentMethods: true, emailProvider: true },
                                        headers: {},
                                        responseStatusCode: 200,
                                        responseBody: {
                                            id: "string",
                                            sandbox: true,
                                            name: "string",
                                            logoUrl: "string",
                                            websiteUrl: "string",
                                            supportEmail: "string",
                                            paymentMethods: {
                                                payerPayments: [
                                                    {
                                                        available: true,
                                                        type: "custom",
                                                        name: "string",
                                                        markup: { type: "flat", amount: 1 },
                                                        description: "string",
                                                        active: true,
                                                    },
                                                ],
                                                backupDisbursements: [
                                                    {
                                                        available: true,
                                                        type: "custom",
                                                        name: "string",
                                                        markup: { type: "flat", amount: 1 },
                                                        description: "string",
                                                        active: true,
                                                    },
                                                ],
                                                vendorDisbursements: [
                                                    {
                                                        available: true,
                                                        type: "custom",
                                                        name: "string",
                                                        markup: { type: "flat", amount: 1 },
                                                        description: "string",
                                                        active: true,
                                                    },
                                                ],
                                            },
                                            emailProvider: {
                                                sender: {
                                                    provider: "none",
                                                    fromEmail: "string",
                                                    fromName: "string",
                                                    hasApiKey: true,
                                                },
                                                inboxDomain: "string",
                                            },
                                            colorScheme: { primaryColor: "string", secondaryColor: "string" },
                                        },
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Get current organization information",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "update-organization",
                                method: "POST",
                                id: "update",
                                name: "Update organization",
                                path: {
                                    pathParameters: [],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/organization" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_organization:OrganizationRequest" },
                                    },
                                },
                                response: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_organization:OrganizationResponse" },
                                    },
                                },
                                examples: [
                                    {
                                        path: "//organization",
                                        pathParameters: {},
                                        queryParameters: {},
                                        headers: {},
                                        requestBody: {},
                                        responseStatusCode: 200,
                                        responseBody: {
                                            id: "string",
                                            sandbox: true,
                                            name: "string",
                                            logoUrl: "string",
                                            websiteUrl: "string",
                                            supportEmail: "string",
                                            paymentMethods: {
                                                payerPayments: [
                                                    {
                                                        available: true,
                                                        type: "custom",
                                                        name: "string",
                                                        markup: { type: "flat", amount: 1 },
                                                        description: "string",
                                                        active: true,
                                                    },
                                                ],
                                                backupDisbursements: [
                                                    {
                                                        available: true,
                                                        type: "custom",
                                                        name: "string",
                                                        markup: { type: "flat", amount: 1 },
                                                        description: "string",
                                                        active: true,
                                                    },
                                                ],
                                                vendorDisbursements: [
                                                    {
                                                        available: true,
                                                        type: "custom",
                                                        name: "string",
                                                        markup: { type: "flat", amount: 1 },
                                                        description: "string",
                                                        active: true,
                                                    },
                                                ],
                                            },
                                            emailProvider: {
                                                sender: {
                                                    provider: "none",
                                                    fromEmail: "string",
                                                    fromName: "string",
                                                    hasApiKey: true,
                                                },
                                                inboxDomain: "string",
                                            },
                                            colorScheme: { primaryColor: "string", secondaryColor: "string" },
                                        },
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Update current organization",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "get-email-logs",
                                method: "GET",
                                id: "emailLog",
                                name: "Get email logs",
                                path: {
                                    pathParameters: [],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/organization/emailLog" },
                                    ],
                                },
                                queryParameters: [
                                    {
                                        key: "startDate",
                                        type: {
                                            type: "optional",
                                            itemType: { type: "primitive", value: { type: "datetime" } },
                                        },
                                        description: null,
                                    },
                                    {
                                        key: "endDate",
                                        type: {
                                            type: "optional",
                                            itemType: { type: "primitive", value: { type: "datetime" } },
                                        },
                                        description: null,
                                    },
                                ],
                                headers: [],
                                request: null,
                                response: {
                                    type: {
                                        type: "reference",
                                        value: {
                                            type: "list",
                                            itemType: { type: "id", value: "type_organization:EmailLogResponse" },
                                        },
                                    },
                                },
                                examples: [
                                    {
                                        path: "//organization/emailLog",
                                        pathParameters: {},
                                        queryParameters: {
                                            startDate: "2023-01-01T00:00:00Z",
                                            endDate: "2023-01-01T00:00:00Z",
                                        },
                                        headers: {},
                                        responseStatusCode: 200,
                                        responseBody: [
                                            {
                                                from: "string",
                                                to: "string",
                                                subject: "string",
                                                rawContent: "string",
                                                createdAt: "2023-01-01T00:00:00Z",
                                            },
                                        ],
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description:
                                    "Get log of all emails sent to this organization. Content format subject to change.",
                            },
                        ],
                        types: [
                            "type_organization:OrganizationId",
                            "type_organization:OrganizationRequest",
                            "type_organization:OrganizationResponse",
                            "type_organization:PaymentRailMarkupType",
                            "type_organization:PaymentRailMarkup",
                            "type_organization:PaymentRailRequest",
                            "type_organization:PaymentRailResponse",
                            "type_organization:PaymentMethodsRequest",
                            "type_organization:PaymentMethodsResponse",
                            "type_organization:EmailProviderRequest",
                            "type_organization:EmailProviderResponse",
                            "type_organization:EmailSenderProvider",
                            "type_organization:EmailSenderRequest",
                            "type_organization:EmailSenderResponse",
                            "type_organization:EmailLogResponse",
                            "type_organization:ColorSchemeRequest",
                            "type_organization:ColorSchemeResponse",
                        ],
                        subpackages: [],
                        pointsTo: null,
                    },
                    "subpackage_payment-method-schema": {
                        subpackageId: "subpackage_payment-method-schema",
                        parent: null,
                        name: "payment-method-schema",
                        urlSlug: "payment-method-schema",
                        description: null,
                        endpoints: [
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "get-all-payment-methods-schema",
                                method: "GET",
                                id: "getAll",
                                name: "Get all payment methods schema",
                                path: {
                                    pathParameters: [],
                                    parts: [
                                        { type: "literal", value: "/paymentMethod" },
                                        { type: "literal", value: "/schema" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: null,
                                response: {
                                    type: {
                                        type: "reference",
                                        value: {
                                            type: "list",
                                            itemType: {
                                                type: "id",
                                                value: "type_payment-method-schema:PaymentMethodSchemaResponse",
                                            },
                                        },
                                    },
                                },
                                examples: [
                                    {
                                        path: "/paymentMethod/schema",
                                        pathParameters: {},
                                        queryParameters: {},
                                        headers: {},
                                        responseStatusCode: 200,
                                        responseBody: [
                                            {
                                                id: "string",
                                                name: "string",
                                                isSource: true,
                                                isDestination: true,
                                                supportedCurrencies: ["AED"],
                                                fields: [
                                                    {
                                                        name: "string",
                                                        displayName: "string",
                                                        type: "text",
                                                        optional: true,
                                                        useAsAccountName: true,
                                                        useAsAccountNumber: true,
                                                        options: ["string"],
                                                    },
                                                ],
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                        ],
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Get all custom payment method schemas",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "create-payment-method-schema",
                                method: "POST",
                                id: "create",
                                name: "Create payment method schema",
                                path: {
                                    pathParameters: [],
                                    parts: [
                                        { type: "literal", value: "/paymentMethod" },
                                        { type: "literal", value: "/schema" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: {
                                    type: {
                                        type: "reference",
                                        value: {
                                            type: "id",
                                            value: "type_payment-method-schema:PaymentMethodSchemaRequest",
                                        },
                                    },
                                },
                                response: {
                                    type: {
                                        type: "reference",
                                        value: {
                                            type: "id",
                                            value: "type_payment-method-schema:PaymentMethodSchemaResponse",
                                        },
                                    },
                                },
                                examples: [
                                    {
                                        path: "/paymentMethod/schema",
                                        pathParameters: {},
                                        queryParameters: {},
                                        headers: {},
                                        requestBody: {
                                            name: "string",
                                            isSource: true,
                                            isDestination: true,
                                            fields: [{ name: "string", type: "text", optional: true }],
                                        },
                                        responseStatusCode: 200,
                                        responseBody: {
                                            id: "string",
                                            name: "string",
                                            isSource: true,
                                            isDestination: true,
                                            supportedCurrencies: ["AED"],
                                            fields: [
                                                {
                                                    name: "string",
                                                    displayName: "string",
                                                    type: "text",
                                                    optional: true,
                                                    useAsAccountName: true,
                                                    useAsAccountNumber: true,
                                                    options: ["string"],
                                                },
                                            ],
                                            createdAt: "2023-01-01T00:00:00Z",
                                            updatedAt: "2023-01-01T00:00:00Z",
                                        },
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Create custom payment method schema",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "get-payment-method-schema",
                                method: "GET",
                                id: "get",
                                name: "Get payment method schema",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "schemaId",
                                            type: {
                                                type: "id",
                                                value: "type_payment-method-schema:PaymentMethodSchemaId",
                                            },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/paymentMethod" },
                                        { type: "literal", value: "/schema/" },
                                        { type: "pathParameter", value: "schemaId" },
                                        { type: "literal", value: "" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: null,
                                response: {
                                    type: {
                                        type: "reference",
                                        value: {
                                            type: "id",
                                            value: "type_payment-method-schema:PaymentMethodSchemaResponse",
                                        },
                                    },
                                },
                                examples: [
                                    {
                                        path: "/paymentMethod/schema/string",
                                        pathParameters: { schemaId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        responseStatusCode: 200,
                                        responseBody: {
                                            id: "string",
                                            name: "string",
                                            isSource: true,
                                            isDestination: true,
                                            supportedCurrencies: ["AED"],
                                            fields: [
                                                {
                                                    name: "string",
                                                    displayName: "string",
                                                    type: "text",
                                                    optional: true,
                                                    useAsAccountName: true,
                                                    useAsAccountNumber: true,
                                                    options: ["string"],
                                                },
                                            ],
                                            createdAt: "2023-01-01T00:00:00Z",
                                            updatedAt: "2023-01-01T00:00:00Z",
                                        },
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Get custom payment method schema",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "delete-payment-method-schema",
                                method: "DELETE",
                                id: "delete",
                                name: "Delete payment method schema",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "schemaId",
                                            type: {
                                                type: "id",
                                                value: "type_payment-method-schema:PaymentMethodSchemaId",
                                            },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/paymentMethod" },
                                        { type: "literal", value: "/schema/" },
                                        { type: "pathParameter", value: "schemaId" },
                                        { type: "literal", value: "" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: null,
                                response: null,
                                examples: [
                                    {
                                        path: "/paymentMethod/schema/string",
                                        pathParameters: { schemaId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        responseStatusCode: 200,
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description:
                                    "Delete custom payment method schema. Schema that have been used in an invoice cannot be deleted.",
                            },
                        ],
                        types: [
                            "type_payment-method-schema:PaymentMethodSchemaId",
                            "type_payment-method-schema:PaymentMethodSchemaRequest",
                            "type_payment-method-schema:PaymentMethodSchemaResponse",
                            "type_payment-method-schema:PaymentMethodSchemaFieldType",
                            "type_payment-method-schema:PaymentMethodSchemaField",
                        ],
                        subpackages: [],
                        pointsTo: null,
                    },
                    "subpackage_payment-method": {
                        subpackageId: "subpackage_payment-method",
                        parent: null,
                        name: "payment-method",
                        urlSlug: "payment-method",
                        description: null,
                        endpoints: [
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "get-all-payment-methods",
                                method: "GET",
                                id: "getAll",
                                name: "Get all payment methods",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "entityId",
                                            type: { type: "id", value: "type_entity:EntityId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/entity/" },
                                        { type: "pathParameter", value: "entityId" },
                                        { type: "literal", value: "" },
                                        { type: "literal", value: "/paymentMethods" },
                                    ],
                                },
                                queryParameters: [
                                    {
                                        key: "type",
                                        type: {
                                            type: "optional",
                                            itemType: { type: "id", value: "type_payment-method:PaymentMethodType" },
                                        },
                                        description: "Type of payment method to filter",
                                    },
                                ],
                                headers: [],
                                request: null,
                                response: {
                                    type: {
                                        type: "reference",
                                        value: {
                                            type: "list",
                                            itemType: {
                                                type: "id",
                                                value: "type_payment-method:PaymentMethodResponse",
                                            },
                                        },
                                    },
                                },
                                examples: [
                                    {
                                        path: "/entity/string/paymentMethods",
                                        pathParameters: { entityId: "string" },
                                        queryParameters: { type: "custom" },
                                        headers: {},
                                        responseStatusCode: 200,
                                        responseBody: [
                                            {
                                                id: "string",
                                                type: "custom",
                                                bankAccount: {
                                                    id: "string",
                                                    bankName: "string",
                                                    routingNumber: "string",
                                                    accountNumber: "string",
                                                    accountType: "CHECKING",
                                                    status: "NEW",
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                check: {
                                                    id: "string",
                                                    payToTheOrderOf: "string",
                                                    addressLine1: "string",
                                                    addressLine2: "string",
                                                    city: "string",
                                                    stateOrProvince: "string",
                                                    postalCode: "string",
                                                    country: "string",
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                card: {
                                                    id: "string",
                                                    type: "credit",
                                                    brand: "AmericanExpress",
                                                    lastFour: "string",
                                                    expMonth: "string",
                                                    expYear: "string",
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                custom: {
                                                    id: "string",
                                                    foreignId: "string",
                                                    accountName: "string",
                                                    accountNumber: "string",
                                                    schemaId: "string",
                                                    schema: {
                                                        id: "string",
                                                        name: "string",
                                                        isSource: true,
                                                        isDestination: true,
                                                        supportedCurrencies: ["AED"],
                                                        fields: [
                                                            {
                                                                name: "string",
                                                                displayName: "string",
                                                                type: "text",
                                                                optional: true,
                                                                useAsAccountName: true,
                                                                useAsAccountNumber: true,
                                                                options: ["string"],
                                                            },
                                                        ],
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                    data: { string: "string" },
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                supportedCurrencies: ["AED"],
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                        ],
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: null,
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "create-payment-method",
                                method: "POST",
                                id: "create",
                                name: "Create payment method",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "entityId",
                                            type: { type: "id", value: "type_entity:EntityId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/entity/" },
                                        { type: "pathParameter", value: "entityId" },
                                        { type: "literal", value: "" },
                                        { type: "literal", value: "/paymentMethod" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_payment-method:PaymentMethodRequest" },
                                    },
                                },
                                response: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_payment-method:PaymentMethodResponse" },
                                    },
                                },
                                examples: [
                                    {
                                        path: "/entity/string/paymentMethod",
                                        pathParameters: { entityId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        requestBody: { type: "custom" },
                                        responseStatusCode: 200,
                                        responseBody: {
                                            id: "string",
                                            type: "custom",
                                            bankAccount: {
                                                id: "string",
                                                bankName: "string",
                                                routingNumber: "string",
                                                accountNumber: "string",
                                                accountType: "CHECKING",
                                                status: "NEW",
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                            check: {
                                                id: "string",
                                                payToTheOrderOf: "string",
                                                addressLine1: "string",
                                                addressLine2: "string",
                                                city: "string",
                                                stateOrProvince: "string",
                                                postalCode: "string",
                                                country: "string",
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                            card: {
                                                id: "string",
                                                type: "credit",
                                                brand: "AmericanExpress",
                                                lastFour: "string",
                                                expMonth: "string",
                                                expYear: "string",
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                            custom: {
                                                id: "string",
                                                foreignId: "string",
                                                accountName: "string",
                                                accountNumber: "string",
                                                schemaId: "string",
                                                schema: {
                                                    id: "string",
                                                    name: "string",
                                                    isSource: true,
                                                    isDestination: true,
                                                    supportedCurrencies: ["AED"],
                                                    fields: [
                                                        {
                                                            name: "string",
                                                            displayName: "string",
                                                            type: "text",
                                                            optional: true,
                                                            useAsAccountName: true,
                                                            useAsAccountNumber: true,
                                                            options: ["string"],
                                                        },
                                                    ],
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                data: { string: "string" },
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                            supportedCurrencies: ["AED"],
                                            createdAt: "2023-01-01T00:00:00Z",
                                            updatedAt: "2023-01-01T00:00:00Z",
                                        },
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Create payment method",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "get-payment-method",
                                method: "GET",
                                id: "get",
                                name: "Get payment method",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "entityId",
                                            type: { type: "id", value: "type_entity:EntityId" },
                                            description: null,
                                        },
                                        {
                                            key: "paymentMethodId",
                                            type: { type: "id", value: "type_payment-method:PaymentMethodId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/entity/" },
                                        { type: "pathParameter", value: "entityId" },
                                        { type: "literal", value: "" },
                                        { type: "literal", value: "/paymentMethod/" },
                                        { type: "pathParameter", value: "paymentMethodId" },
                                        { type: "literal", value: "" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: null,
                                response: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_payment-method:PaymentMethodResponse" },
                                    },
                                },
                                examples: [
                                    {
                                        path: "/entity/string/paymentMethod/string",
                                        pathParameters: { entityId: "string", paymentMethodId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        responseStatusCode: 200,
                                        responseBody: {
                                            id: "string",
                                            type: "custom",
                                            bankAccount: {
                                                id: "string",
                                                bankName: "string",
                                                routingNumber: "string",
                                                accountNumber: "string",
                                                accountType: "CHECKING",
                                                status: "NEW",
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                            check: {
                                                id: "string",
                                                payToTheOrderOf: "string",
                                                addressLine1: "string",
                                                addressLine2: "string",
                                                city: "string",
                                                stateOrProvince: "string",
                                                postalCode: "string",
                                                country: "string",
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                            card: {
                                                id: "string",
                                                type: "credit",
                                                brand: "AmericanExpress",
                                                lastFour: "string",
                                                expMonth: "string",
                                                expYear: "string",
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                            custom: {
                                                id: "string",
                                                foreignId: "string",
                                                accountName: "string",
                                                accountNumber: "string",
                                                schemaId: "string",
                                                schema: {
                                                    id: "string",
                                                    name: "string",
                                                    isSource: true,
                                                    isDestination: true,
                                                    supportedCurrencies: ["AED"],
                                                    fields: [
                                                        {
                                                            name: "string",
                                                            displayName: "string",
                                                            type: "text",
                                                            optional: true,
                                                            useAsAccountName: true,
                                                            useAsAccountNumber: true,
                                                            options: ["string"],
                                                        },
                                                    ],
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                data: { string: "string" },
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                            supportedCurrencies: ["AED"],
                                            createdAt: "2023-01-01T00:00:00Z",
                                            updatedAt: "2023-01-01T00:00:00Z",
                                        },
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Get payment method",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "update-payment-method",
                                method: "PUT",
                                id: "update",
                                name: "Update payment method",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "entityId",
                                            type: { type: "id", value: "type_entity:EntityId" },
                                            description: null,
                                        },
                                        {
                                            key: "paymentMethodId",
                                            type: { type: "id", value: "type_payment-method:PaymentMethodId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/entity/" },
                                        { type: "pathParameter", value: "entityId" },
                                        { type: "literal", value: "" },
                                        { type: "literal", value: "/paymentMethod/" },
                                        { type: "pathParameter", value: "paymentMethodId" },
                                        { type: "literal", value: "" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_payment-method:PaymentMethodUpdateRequest" },
                                    },
                                },
                                response: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_payment-method:PaymentMethodResponse" },
                                    },
                                },
                                examples: [
                                    {
                                        path: "/entity/string/paymentMethod/string",
                                        pathParameters: { entityId: "string", paymentMethodId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        requestBody: {},
                                        responseStatusCode: 200,
                                        responseBody: {
                                            id: "string",
                                            type: "custom",
                                            bankAccount: {
                                                id: "string",
                                                bankName: "string",
                                                routingNumber: "string",
                                                accountNumber: "string",
                                                accountType: "CHECKING",
                                                status: "NEW",
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                            check: {
                                                id: "string",
                                                payToTheOrderOf: "string",
                                                addressLine1: "string",
                                                addressLine2: "string",
                                                city: "string",
                                                stateOrProvince: "string",
                                                postalCode: "string",
                                                country: "string",
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                            card: {
                                                id: "string",
                                                type: "credit",
                                                brand: "AmericanExpress",
                                                lastFour: "string",
                                                expMonth: "string",
                                                expYear: "string",
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                            custom: {
                                                id: "string",
                                                foreignId: "string",
                                                accountName: "string",
                                                accountNumber: "string",
                                                schemaId: "string",
                                                schema: {
                                                    id: "string",
                                                    name: "string",
                                                    isSource: true,
                                                    isDestination: true,
                                                    supportedCurrencies: ["AED"],
                                                    fields: [
                                                        {
                                                            name: "string",
                                                            displayName: "string",
                                                            type: "text",
                                                            optional: true,
                                                            useAsAccountName: true,
                                                            useAsAccountNumber: true,
                                                            options: ["string"],
                                                        },
                                                    ],
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                data: { string: "string" },
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                            supportedCurrencies: ["AED"],
                                            createdAt: "2023-01-01T00:00:00Z",
                                            updatedAt: "2023-01-01T00:00:00Z",
                                        },
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Update payment method. Only custom payment methods can be updated.",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "delete-payment-method",
                                method: "DELETE",
                                id: "delete",
                                name: "Delete payment method",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "entityId",
                                            type: { type: "id", value: "type_entity:EntityId" },
                                            description: null,
                                        },
                                        {
                                            key: "paymentMethodId",
                                            type: { type: "id", value: "type_payment-method:PaymentMethodId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/entity/" },
                                        { type: "pathParameter", value: "entityId" },
                                        { type: "literal", value: "" },
                                        { type: "literal", value: "/paymentMethod/" },
                                        { type: "pathParameter", value: "paymentMethodId" },
                                        { type: "literal", value: "" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: null,
                                response: null,
                                examples: [
                                    {
                                        path: "/entity/string/paymentMethod/string",
                                        pathParameters: { entityId: "string", paymentMethodId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        responseStatusCode: 200,
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Delete payment method",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "initiate-micro-deposits",
                                method: "POST",
                                id: "initiateMicroDeposits",
                                name: "Initiate micro deposits",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "entityId",
                                            type: { type: "id", value: "type_entity:EntityId" },
                                            description: null,
                                        },
                                        {
                                            key: "paymentMethodId",
                                            type: { type: "id", value: "type_payment-method:PaymentMethodId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/entity/" },
                                        { type: "pathParameter", value: "entityId" },
                                        { type: "literal", value: "" },
                                        { type: "literal", value: "/paymentMethod/" },
                                        { type: "pathParameter", value: "paymentMethodId" },
                                        { type: "literal", value: "/micro-deposits" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: null,
                                response: null,
                                examples: [
                                    {
                                        path: "/entity/string/paymentMethod/string/micro-deposits",
                                        pathParameters: { entityId: "string", paymentMethodId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        responseStatusCode: 200,
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Initiate micro deposits for a bank account",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "complete-micro-deposits",
                                method: "PUT",
                                id: "completeMicroDeposits",
                                name: "Complete micro deposits",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "entityId",
                                            type: { type: "id", value: "type_entity:EntityId" },
                                            description: null,
                                        },
                                        {
                                            key: "paymentMethodId",
                                            type: { type: "id", value: "type_payment-method:PaymentMethodId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/entity/" },
                                        { type: "pathParameter", value: "entityId" },
                                        { type: "literal", value: "" },
                                        { type: "literal", value: "/paymentMethod/" },
                                        { type: "pathParameter", value: "paymentMethodId" },
                                        { type: "literal", value: "/micro-deposits" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: {
                                    type: {
                                        type: "object",
                                        extends: [],
                                        properties: [
                                            {
                                                key: "amounts",
                                                valueType: {
                                                    type: "list",
                                                    itemType: { type: "primitive", value: { type: "integer" } },
                                                },
                                                description: null,
                                            },
                                        ],
                                    },
                                },
                                response: null,
                                examples: [
                                    {
                                        path: "/entity/string/paymentMethod/string/micro-deposits",
                                        pathParameters: { entityId: "string", paymentMethodId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        requestBody: { amounts: [0] },
                                        responseStatusCode: 200,
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Complete micro deposit verification",
                            },
                        ],
                        types: [
                            "type_payment-method:PaymentMethodId",
                            "type_payment-method:PaymentMethodRequest",
                            "type_payment-method:PaymentMethodUpdateRequest",
                            "type_payment-method:PaymentMethodResponse",
                            "type_payment-method:BankAccountId",
                            "type_payment-method:BankAccountRequest",
                            "type_payment-method:BankAccountResponse",
                            "type_payment-method:CardId",
                            "type_payment-method:CardRequest",
                            "type_payment-method:CardResponse",
                            "type_payment-method:CheckId",
                            "type_payment-method:CheckRequest",
                            "type_payment-method:CheckResponse",
                            "type_payment-method:CustomId",
                            "type_payment-method:CustomPaymentMethodRequest",
                            "type_payment-method:CustomPaymentMethodUpdateRequest",
                            "type_payment-method:CustomPaymentMethodResponse",
                            "type_payment-method:PaymentMethodType",
                            "type_payment-method:BankType",
                            "type_payment-method:BankStatus",
                            "type_payment-method:CardType",
                            "type_payment-method:CardBrand",
                        ],
                        subpackages: [],
                        pointsTo: null,
                    },
                    "subpackage_process-invoice": {
                        subpackageId: "subpackage_process-invoice",
                        parent: null,
                        name: "process-invoice",
                        urlSlug: "process-invoice",
                        description: null,
                        endpoints: [
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "process-invoice",
                                method: "POST",
                                id: "processInvoices",
                                name: "Process invoice",
                                path: {
                                    pathParameters: [],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/process-invoices" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_process-invoice:ProcessInvoiceRequest" },
                                    },
                                },
                                response: null,
                                examples: [
                                    {
                                        path: "//process-invoices",
                                        pathParameters: {},
                                        queryParameters: {},
                                        headers: {},
                                        requestBody: { invoiceIds: ["string"] },
                                        responseStatusCode: 200,
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Trigger invoice processing",
                            },
                        ],
                        types: ["type_process-invoice:ProcessInvoiceRequest"],
                        subpackages: [],
                        pointsTo: null,
                    },
                    subpackage_representative: {
                        subpackageId: "subpackage_representative",
                        parent: null,
                        name: "representative",
                        urlSlug: "representative",
                        description: null,
                        endpoints: [
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "get-all-representatives",
                                method: "GET",
                                id: "getAll",
                                name: "Get all representatives",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "entityId",
                                            type: { type: "id", value: "type_entity:EntityId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/entity/" },
                                        { type: "pathParameter", value: "entityId" },
                                        { type: "literal", value: "" },
                                        { type: "literal", value: "/representatives" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: null,
                                response: {
                                    type: {
                                        type: "reference",
                                        value: {
                                            type: "list",
                                            itemType: {
                                                type: "id",
                                                value: "type_representative:RepresentativeResponse",
                                            },
                                        },
                                    },
                                },
                                examples: [
                                    {
                                        path: "/entity/string/representatives",
                                        pathParameters: { entityId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        responseStatusCode: 200,
                                        responseBody: [
                                            {
                                                id: "string",
                                                name: {
                                                    firstName: "string",
                                                    middleName: "string",
                                                    lastName: "string",
                                                    suffix: "string",
                                                },
                                                phone: { countryCode: "string", number: "string" },
                                                email: "string",
                                                address: {
                                                    addressLine1: "string",
                                                    addressLine2: "string",
                                                    city: "string",
                                                    stateOrProvince: "string",
                                                    postalCode: "string",
                                                    country: "string",
                                                },
                                                birthDateProvided: true,
                                                governmentIDProvided: true,
                                                responsibilities: {
                                                    jobTitle: "string",
                                                    isController: true,
                                                    isOwner: true,
                                                    ownershipPercentage: 1,
                                                },
                                                createdOn: "2023-01-01T00:00:00Z",
                                                updatedOn: "2023-01-01T00:00:00Z",
                                                disabledOn: "2023-01-01T00:00:00Z",
                                            },
                                        ],
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Get representatives for an entity",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "create-representative",
                                method: "POST",
                                id: "create",
                                name: "Create representative",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "entityId",
                                            type: { type: "id", value: "type_entity:EntityId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/entity/" },
                                        { type: "pathParameter", value: "entityId" },
                                        { type: "literal", value: "" },
                                        { type: "literal", value: "/representative" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_representative:RepresentativeRequest" },
                                    },
                                },
                                response: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_representative:RepresentativeResponse" },
                                    },
                                },
                                examples: [
                                    {
                                        path: "/entity/string/representative",
                                        pathParameters: { entityId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        requestBody: {
                                            name: { firstName: "string", lastName: "string" },
                                            phone: { countryCode: "string", number: "string" },
                                            email: "string",
                                            address: {
                                                addressLine1: "string",
                                                city: "string",
                                                stateOrProvince: "string",
                                                postalCode: "string",
                                            },
                                            birthDate: {},
                                            governmentID: {},
                                            responsibilities: {},
                                        },
                                        responseStatusCode: 200,
                                        responseBody: {
                                            id: "string",
                                            name: {
                                                firstName: "string",
                                                middleName: "string",
                                                lastName: "string",
                                                suffix: "string",
                                            },
                                            phone: { countryCode: "string", number: "string" },
                                            email: "string",
                                            address: {
                                                addressLine1: "string",
                                                addressLine2: "string",
                                                city: "string",
                                                stateOrProvince: "string",
                                                postalCode: "string",
                                                country: "string",
                                            },
                                            birthDateProvided: true,
                                            governmentIDProvided: true,
                                            responsibilities: {
                                                jobTitle: "string",
                                                isController: true,
                                                isOwner: true,
                                                ownershipPercentage: 1,
                                            },
                                            createdOn: "2023-01-01T00:00:00Z",
                                            updatedOn: "2023-01-01T00:00:00Z",
                                            disabledOn: "2023-01-01T00:00:00Z",
                                        },
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Create representative",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "get-representative",
                                method: "GET",
                                id: "get",
                                name: "Get representative",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "entityId",
                                            type: { type: "id", value: "type_entity:EntityId" },
                                            description: null,
                                        },
                                        {
                                            key: "representativeId",
                                            type: { type: "id", value: "type_representative:RepresentativeId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/entity/" },
                                        { type: "pathParameter", value: "entityId" },
                                        { type: "literal", value: "" },
                                        { type: "literal", value: "/representative/" },
                                        { type: "pathParameter", value: "representativeId" },
                                        { type: "literal", value: "" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: null,
                                response: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_representative:RepresentativeResponse" },
                                    },
                                },
                                examples: [
                                    {
                                        path: "/entity/string/representative/string",
                                        pathParameters: { entityId: "string", representativeId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        responseStatusCode: 200,
                                        responseBody: {
                                            id: "string",
                                            name: {
                                                firstName: "string",
                                                middleName: "string",
                                                lastName: "string",
                                                suffix: "string",
                                            },
                                            phone: { countryCode: "string", number: "string" },
                                            email: "string",
                                            address: {
                                                addressLine1: "string",
                                                addressLine2: "string",
                                                city: "string",
                                                stateOrProvince: "string",
                                                postalCode: "string",
                                                country: "string",
                                            },
                                            birthDateProvided: true,
                                            governmentIDProvided: true,
                                            responsibilities: {
                                                jobTitle: "string",
                                                isController: true,
                                                isOwner: true,
                                                ownershipPercentage: 1,
                                            },
                                            createdOn: "2023-01-01T00:00:00Z",
                                            updatedOn: "2023-01-01T00:00:00Z",
                                            disabledOn: "2023-01-01T00:00:00Z",
                                        },
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Get representative",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "delete-representative",
                                method: "DELETE",
                                id: "delete",
                                name: "Delete representative",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "entityId",
                                            type: { type: "id", value: "type_entity:EntityId" },
                                            description: null,
                                        },
                                        {
                                            key: "representativeId",
                                            type: { type: "id", value: "type_representative:RepresentativeId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/entity/" },
                                        { type: "pathParameter", value: "entityId" },
                                        { type: "literal", value: "" },
                                        { type: "literal", value: "/representative/" },
                                        { type: "pathParameter", value: "representativeId" },
                                        { type: "literal", value: "" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: null,
                                response: null,
                                examples: [
                                    {
                                        path: "/entity/string/representative/string",
                                        pathParameters: { entityId: "string", representativeId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        responseStatusCode: 200,
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Delete representative",
                            },
                        ],
                        types: [
                            "type_representative:RepresentativeId",
                            "type_representative:RepresentativeRequest",
                            "type_representative:RepresentativeResponse",
                            "type_representative:Responsibilities",
                        ],
                        subpackages: [],
                        pointsTo: null,
                    },
                    subpackage_transaction: {
                        subpackageId: "subpackage_transaction",
                        parent: null,
                        name: "transaction",
                        urlSlug: "transaction",
                        description: null,
                        endpoints: [
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "get-transaction",
                                method: "GET",
                                id: "get",
                                name: "Get transaction",
                                path: {
                                    pathParameters: [
                                        {
                                            key: "transactionId",
                                            type: { type: "id", value: "type_transaction:TransactionId" },
                                            description: null,
                                        },
                                    ],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/transaction/" },
                                        { type: "pathParameter", value: "transactionId" },
                                        { type: "literal", value: "" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: null,
                                response: {
                                    type: {
                                        type: "reference",
                                        value: { type: "id", value: "type_transaction:TransactionResponse" },
                                    },
                                },
                                examples: [
                                    {
                                        path: "//transaction/string",
                                        pathParameters: { transactionId: "string" },
                                        queryParameters: {},
                                        headers: {},
                                        responseStatusCode: 200,
                                        responseBody: {
                                            id: "string",
                                            status: "created",
                                            amount: 1,
                                            currency: "AED",
                                            createdAt: "2023-01-01T00:00:00Z",
                                            updatedAt: "2023-01-01T00:00:00Z",
                                        },
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Get Transaction",
                            },
                            {
                                environments: [{ id: "Production", baseUrl: "https://api.mercoa.com" }],
                                defaultEnvironment: "Production",
                                urlSlug: "get-all-transactions",
                                method: "GET",
                                id: "getAll",
                                name: "Get all transactions",
                                path: {
                                    pathParameters: [],
                                    parts: [
                                        { type: "literal", value: "/" },
                                        { type: "literal", value: "/transactions" },
                                    ],
                                },
                                queryParameters: [],
                                headers: [],
                                request: null,
                                response: {
                                    type: {
                                        type: "reference",
                                        value: {
                                            type: "list",
                                            itemType: {
                                                type: "id",
                                                value: "type_transaction:TransactionResponseExpanded",
                                            },
                                        },
                                    },
                                },
                                examples: [
                                    {
                                        path: "//transactions",
                                        pathParameters: {},
                                        queryParameters: {},
                                        headers: {},
                                        responseStatusCode: 200,
                                        responseBody: [
                                            {
                                                invoiceId: "string",
                                                deductionDate: "2023-01-01T00:00:00Z",
                                                dueDate: "2023-01-01T00:00:00Z",
                                                payer: {
                                                    id: "string",
                                                    foreignId: "string",
                                                    emailTo: "string",
                                                    emailToAlias: ["string"],
                                                    ownedByOrg: true,
                                                    accountType: "business",
                                                    name: "string",
                                                    email: "string",
                                                    profile: {
                                                        business: {
                                                            email: "string",
                                                            legalBusinessName: "string",
                                                            businessType: "soleProprietorship",
                                                            phone: { countryCode: "string", number: "string" },
                                                            doingBusinessAs: "string",
                                                            website: "string",
                                                            description: "string",
                                                            address: {
                                                                addressLine1: "string",
                                                                addressLine2: "string",
                                                                city: "string",
                                                                stateOrProvince: "string",
                                                                postalCode: "string",
                                                                country: "string",
                                                            },
                                                            ownersProvided: true,
                                                            taxIDProvided: true,
                                                        },
                                                        individual: {
                                                            email: "string",
                                                            name: {
                                                                firstName: "string",
                                                                middleName: "string",
                                                                lastName: "string",
                                                                suffix: "string",
                                                            },
                                                            phone: { countryCode: "string", number: "string" },
                                                            address: {
                                                                addressLine1: "string",
                                                                addressLine2: "string",
                                                                city: "string",
                                                                stateOrProvince: "string",
                                                                postalCode: "string",
                                                                country: "string",
                                                            },
                                                            birthDateProvided: true,
                                                            governmentIDProvided: true,
                                                        },
                                                    },
                                                    status: "unverified",
                                                    acceptedTos: true,
                                                    isPayor: true,
                                                    isPayee: true,
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                vendor: {
                                                    id: "string",
                                                    foreignId: "string",
                                                    emailTo: "string",
                                                    emailToAlias: ["string"],
                                                    ownedByOrg: true,
                                                    accountType: "business",
                                                    name: "string",
                                                    email: "string",
                                                    profile: {
                                                        business: {
                                                            email: "string",
                                                            legalBusinessName: "string",
                                                            businessType: "soleProprietorship",
                                                            phone: { countryCode: "string", number: "string" },
                                                            doingBusinessAs: "string",
                                                            website: "string",
                                                            description: "string",
                                                            address: {
                                                                addressLine1: "string",
                                                                addressLine2: "string",
                                                                city: "string",
                                                                stateOrProvince: "string",
                                                                postalCode: "string",
                                                                country: "string",
                                                            },
                                                            ownersProvided: true,
                                                            taxIDProvided: true,
                                                        },
                                                        individual: {
                                                            email: "string",
                                                            name: {
                                                                firstName: "string",
                                                                middleName: "string",
                                                                lastName: "string",
                                                                suffix: "string",
                                                            },
                                                            phone: { countryCode: "string", number: "string" },
                                                            address: {
                                                                addressLine1: "string",
                                                                addressLine2: "string",
                                                                city: "string",
                                                                stateOrProvince: "string",
                                                                postalCode: "string",
                                                                country: "string",
                                                            },
                                                            birthDateProvided: true,
                                                            governmentIDProvided: true,
                                                        },
                                                    },
                                                    status: "unverified",
                                                    acceptedTos: true,
                                                    isPayor: true,
                                                    isPayee: true,
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                paymentSource: {
                                                    id: "string",
                                                    type: "custom",
                                                    bankAccount: {
                                                        id: "string",
                                                        bankName: "string",
                                                        routingNumber: "string",
                                                        accountNumber: "string",
                                                        accountType: "CHECKING",
                                                        status: "NEW",
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                    check: {
                                                        id: "string",
                                                        payToTheOrderOf: "string",
                                                        addressLine1: "string",
                                                        addressLine2: "string",
                                                        city: "string",
                                                        stateOrProvince: "string",
                                                        postalCode: "string",
                                                        country: "string",
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                    card: {
                                                        id: "string",
                                                        type: "credit",
                                                        brand: "AmericanExpress",
                                                        lastFour: "string",
                                                        expMonth: "string",
                                                        expYear: "string",
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                    custom: {
                                                        id: "string",
                                                        foreignId: "string",
                                                        accountName: "string",
                                                        accountNumber: "string",
                                                        schemaId: "string",
                                                        schema: {
                                                            id: "string",
                                                            name: "string",
                                                            isSource: true,
                                                            isDestination: true,
                                                            supportedCurrencies: ["AED"],
                                                            fields: [
                                                                {
                                                                    name: "string",
                                                                    displayName: "string",
                                                                    type: "text",
                                                                    optional: true,
                                                                    useAsAccountName: true,
                                                                    useAsAccountNumber: true,
                                                                    options: ["string"],
                                                                },
                                                            ],
                                                            createdAt: "2023-01-01T00:00:00Z",
                                                            updatedAt: "2023-01-01T00:00:00Z",
                                                        },
                                                        data: { string: "string" },
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                    supportedCurrencies: ["AED"],
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                paymentDestination: {
                                                    id: "string",
                                                    type: "custom",
                                                    bankAccount: {
                                                        id: "string",
                                                        bankName: "string",
                                                        routingNumber: "string",
                                                        accountNumber: "string",
                                                        accountType: "CHECKING",
                                                        status: "NEW",
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                    check: {
                                                        id: "string",
                                                        payToTheOrderOf: "string",
                                                        addressLine1: "string",
                                                        addressLine2: "string",
                                                        city: "string",
                                                        stateOrProvince: "string",
                                                        postalCode: "string",
                                                        country: "string",
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                    card: {
                                                        id: "string",
                                                        type: "credit",
                                                        brand: "AmericanExpress",
                                                        lastFour: "string",
                                                        expMonth: "string",
                                                        expYear: "string",
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                    custom: {
                                                        id: "string",
                                                        foreignId: "string",
                                                        accountName: "string",
                                                        accountNumber: "string",
                                                        schemaId: "string",
                                                        schema: {
                                                            id: "string",
                                                            name: "string",
                                                            isSource: true,
                                                            isDestination: true,
                                                            supportedCurrencies: ["AED"],
                                                            fields: [
                                                                {
                                                                    name: "string",
                                                                    displayName: "string",
                                                                    type: "text",
                                                                    optional: true,
                                                                    useAsAccountName: true,
                                                                    useAsAccountNumber: true,
                                                                    options: ["string"],
                                                                },
                                                            ],
                                                            createdAt: "2023-01-01T00:00:00Z",
                                                            updatedAt: "2023-01-01T00:00:00Z",
                                                        },
                                                        data: { string: "string" },
                                                        createdAt: "2023-01-01T00:00:00Z",
                                                        updatedAt: "2023-01-01T00:00:00Z",
                                                    },
                                                    supportedCurrencies: ["AED"],
                                                    createdAt: "2023-01-01T00:00:00Z",
                                                    updatedAt: "2023-01-01T00:00:00Z",
                                                },
                                                id: "string",
                                                status: "created",
                                                amount: 1,
                                                currency: "AED",
                                                createdAt: "2023-01-01T00:00:00Z",
                                                updatedAt: "2023-01-01T00:00:00Z",
                                            },
                                        ],
                                        codeExamples: { nodeAxios: "" },
                                        requestBodyV2: null,
                                        responseBodyV2: null,
                                        description: null,
                                    },
                                ],
                                authed: true,
                                description: "Get all entities",
                            },
                        ],
                        types: [
                            "type_transaction:TransactionResponse",
                            "type_transaction:TransactionResponseExpanded",
                            "type_transaction:TransactionId",
                            "type_transaction:TransactionStatus",
                        ],
                        subpackages: [],
                        pointsTo: null,
                    },
                },
                auth: { type: "bearerAuth", tokenName: "token" },
            },
        },
        files: {
            "6be72a9e-8e19-4853-8da4-7d40ba2f220c":
                "https://fdr-dev-docs-files.s3.us-east-1.amazonaws.com/mercoa.docs.dev.buildwithfern.com/2023-06-12T21%3A05%3A55.802Z/logo.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIA6KXJSKKNGZENQW6L%2F20230613%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20230613T145333Z&X-Amz-Expires=3600&X-Amz-Signature=1406434958f6f39197996007a310d256c3c74fa8253858189489d7b78867869e&X-Amz-SignedHeaders=host&x-id=GetObject",
        },
        pages: {},
    },
};
